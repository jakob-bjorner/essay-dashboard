[{"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/index.js":"1","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/reportWebVitals.js":"2","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/App.js":"3","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/home.js":"4","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/rephrase.js":"5","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/services/RephraseRequestService.js":"6","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/outline.js":"7","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/complete.js":"8","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/ModeContext.js":"9"},{"size":1254,"mtime":1650771638120,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1643759442969,"results":"12","hashOfConfig":"11"},{"size":4573,"mtime":1650777627302,"results":"13","hashOfConfig":"11"},{"size":1497,"mtime":1650407866961,"results":"14","hashOfConfig":"11"},{"size":4195,"mtime":1650777055207,"results":"15","hashOfConfig":"11"},{"size":1131,"mtime":1650737315225,"results":"16","hashOfConfig":"11"},{"size":3960,"mtime":1650775914797,"results":"17","hashOfConfig":"11"},{"size":3960,"mtime":1650775902538,"results":"18","hashOfConfig":"11"},{"size":88,"mtime":1650770886259,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"11ktt55",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/index.js",["43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useState, useRef, useEffect } from 'react';\nimport Outline from './routes/outline';\nimport Complete from './routes/complete';\nimport Rephrase from './routes/rephrase';\nimport { ModeContext } from './ModeContext';\n\nfunction ParentApp() {\n\tconst [light, setMode] = useState(true);\n\tuseEffect(() => {\n\t\tconsole.log('Parent app', light);\n\t}, [light]);\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<ModeContext.Provider value={{ light, setMode }}>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<App />}>\n\t\t\t\t\t\t<Route path=\"rephrase\" element={<Rephrase />} />\n\t\t\t\t\t\t<Route path=\"complete\" element={<Complete />} />\n\t\t\t\t\t\t<Route path=\"outline\" element={<Outline />} />\n\t\t\t\t\t</Route>\n\t\t\t\t</Routes>\n\t\t\t</ModeContext.Provider>\n\t\t</BrowserRouter>\n\t);\n}\n\nReactDOM.render(<ParentApp />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/reportWebVitals.js",[],"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/App.js",["46","47","48","49"],"import './App.css';\nimport arrow from './arrow.png';\nimport logo from './essAI-logo.png';\nimport dark_logo from './dark-essAI-logo.png';\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ModeContext } from './ModeContext';\nimport { Switch } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nexport default function App() {\n\tlet navigate = useNavigate();\n\tconst theme = createTheme({\n\t\tstatus: {\n\t\t\tdanger: '#e53e3e',\n\t\t},\n\t\tpalette: {\n\t\t\tprimary: {\n\t\t\t\tmain: '#00c113',\n\t\t\t\tdarker: '#053e85',\n\t\t\t},\n\t\t},\n\t});\n\tconst { light, setMode } = useContext(ModeContext);\n\tconst [styles, setStyles] = useState([\n\t\t{\n\t\t\tfunction_btn: 'function-btn',\n\t\t\tdescription: 'description',\n\t\t\theading: 'heading',\n\t\t},\n\t\t{\n\t\t\tfunction_btn: 'function-btn',\n\t\t\tdescription: 'description',\n\t\t\theading: 'heading',\n\t\t},\n\t\t{\n\t\t\tfunction_btn: 'function-btn',\n\t\t\tdescription: 'description',\n\t\t\theading: 'heading',\n\t\t},\n\t]);\n\tvar changeMode = (light) => {\n\t\tconsole.log(light);\n\t\tlet newStyles = [...styles];\n\t\tfor (let i = 0; i < newStyles.length; i++) {\n\t\t\tif (light) {\n\t\t\t\tif (newStyles[i].function_btn == 'active-dark-function-btn') {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'active-function-btn',\n\t\t\t\t\t\tdescription: 'active-description',\n\t\t\t\t\t\theading: 'active-heading',\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'function-btn',\n\t\t\t\t\t\tdescription: 'description',\n\t\t\t\t\t\theading: 'heading',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (newStyles[i].function_btn == 'active-function-btn') {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'active-dark-function-btn',\n\t\t\t\t\t\tdescription: 'active-dark-description',\n\t\t\t\t\t\theading: 'active-dark-heading',\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'dark-function-btn',\n\t\t\t\t\t\tdescription: 'dark-description',\n\t\t\t\t\t\theading: 'dark-heading',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetStyles(newStyles);\n\t};\n\tvar addStyles = (index) => {\n\t\tlet newStyles = [...styles];\n\t\tfor (let i = 0; i < newStyles.length; i++) {\n\t\t\tif (light) {\n\t\t\t\tif (i === index) {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'active-function-btn',\n\t\t\t\t\t\tdescription: 'active-description',\n\t\t\t\t\t\theading: 'active-heading',\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'function-btn',\n\t\t\t\t\t\tdescription: 'description',\n\t\t\t\t\t\theading: 'heading',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (i === index) {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'active-dark-function-btn',\n\t\t\t\t\t\tdescription: 'active-dark-description',\n\t\t\t\t\t\theading: 'active-dark-heading',\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tnewStyles[i] = {\n\t\t\t\t\t\tfunction_btn: 'dark-function-btn',\n\t\t\t\t\t\tdescription: 'dark-description',\n\t\t\t\t\t\theading: 'dark-heading',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetStyles(newStyles);\n\t\tconsole.log(newStyles);\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log('App.js', light);\n\t}, [light]);\n\n\tfunction SidebarButton(props) {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\taddStyles(props.index);\n\t\t\t\t\tnavigate(props.path);\n\t\t\t\t}}\n\t\t\t\tclassName={styles[props.index].function_btn}\n\t\t\t>\n\t\t\t\t<div className={styles[props.index].heading}>{props.heading}</div>\n\t\t\t\t<div className={styles[props.index].description}>\n\t\t\t\t\t{props.description}\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className={light ? 'box' : 'dark-box'}>\n\t\t\t\t<div className={light ? 'function-sidebar' : 'dark-function-sidebar'}>\n\t\t\t\t\t<div className=\"logo-holder\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={light ? logo : dark_logo}\n\t\t\t\t\t\t\tclassName={light ? 'logo' : 'dark-logo'}\n\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetMode(!light);\n\t\t\t\t\t\t\t\tchangeMode(!light);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'controlled' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t\t<div className=\"btn-holder\">\n\t\t\t\t\t\t<SidebarButton\n\t\t\t\t\t\t\tindex={0}\n\t\t\t\t\t\t\theading=\"Rephrase a sentence\"\n\t\t\t\t\t\t\tdescription=\"Type a sentence, and we'll give you another one with the same meaning.\"\n\t\t\t\t\t\t\tpath=\"rephrase\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SidebarButton\n\t\t\t\t\t\t\tindex={1}\n\t\t\t\t\t\t\theading=\"Complete a sentence\"\n\t\t\t\t\t\t\tdescription=\"Type a sentence, and we'll finish it for you based on the information you provided.\"\n\t\t\t\t\t\t\tpath=\"complete\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SidebarButton\n\t\t\t\t\t\t\tindex={2}\n\t\t\t\t\t\t\theading=\"Create an outline\"\n\t\t\t\t\t\t\tdescription=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n\t\t\t\t\t\t\t\tsemper lobortis justo id laoreet.\"\n\t\t\t\t\t\t\tpath=\"outline\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Outlet />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/home.js",["50"],"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/rephrase.js",["51","52","53","54","55","56","57","58","59","60"],"import arrow from '../arrow.svg';\nimport copy_icon from '../copy-icon.png';\nimport like_btn from '../like-btn.png';\nimport dislike_btn from '../dislike-btn.png';\nimport React, {\n\tuseState,\n\tsetState,\n\tuseRef,\n\tuseEffect,\n\tuseContext,\n} from 'react';\nimport Rive from 'rive-react';\nimport { rephraseSentence } from '../services/RephraseRequestService';\nimport { ModeContext } from '../ModeContext.js';\n\nfunction OutputBox(props) {\n\tconst { light, setMode } = useContext(ModeContext);\n\tif (props.loading) {\n\t\treturn (\n\t\t\t<div className={light ? 'output-box' : 'dark-output-box'}>\n\t\t\t\t<Rive\n\t\t\t\t\tclassName=\"loading-animation\"\n\t\t\t\t\tsrc=\"Loading-Animation.riv\"\n\t\t\t\t\tanimations=\"Loading\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"bottom-bar\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn like-btn' : 'dark-output-btn like-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img className=\"icon like-icon\" src={like_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn dislike-btn' : 'dark-output-btn dislike-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img className=\"icon dislike-icon\" src={dislike_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn copy-btn' : 'dark-output-btn copy-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={light ? 'icon copy-icon' : 'icon dark-copy-icon'}\n\t\t\t\t\t\t\tsrc={copy_icon}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(props.output);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={light ? 'output-box' : 'dark-output-box'}>\n\t\t\t\t<div className=\"result\">{props.output}</div>\n\t\t\t\t<div className=\"bottom-bar\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn like-btn' : 'dark-output-btn like-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img className=\"icon like-icon\" src={like_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn dislike-btn' : 'dark-output-btn dislike-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img className=\"icon dislike-icon\" src={dislike_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn copy-btn' : 'dark-output-btn copy-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={light ? 'icon copy-icon' : 'icon dark-copy-icon'}\n\t\t\t\t\t\t\tsrc={copy_icon}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(props.output);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default function Rephrase() {\n\tconst { light, setMode } = useContext(ModeContext);\n\tconst [output, showResult] = useState('');\n\tconst [input, setInput] = useState('');\n\tconst inputRef = useRef(null);\n\tconst [loading, setLoading] = useState(false);\n\n\t/*As long as there are changes being made on \"Type something.. \" text area,\n\tsetInput set what ever changes as the value  */\n\tfunction handleChange(event) {\n\t\t/*Listens to those changes and set changes as the value*/\n\t\tsetInput(event.target.value);\n\t\t/* If the user removes their input, remove the previous output as well */\n\t\tif (event.target.value == '') {\n\t\t\tshowResult('');\n\t\t}\n\t}\n\t/*This function runs the moment you click on the arrow */\n\tasync function handleSubmit(event) {\n\t\t/*Tells the app that the response is loading... */\n\t\tsetLoading(true);\n\t\t/*Awaits response from the backend. Response is in an object form */\n\t\tconst data = await rephraseSentence(input);\n\t\t/*Tells the app that the response has been obtained */\n\t\tsetLoading(false);\n\t\t/*Show results extract the rephrased element of the object and displays it in the \n\t\t\"Response ..\" text area */\n\t\tshowResult(data.rephrased);\n\n\t\t/*Prevents textarea from reverting to their default value which is \"\" */\n\t\tevent.preventDefault();\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log('Rephrase: ', light);\n\t}, [light]);\n\n\treturn (\n\t\t<div className={light ? 'IObox' : 'dark-IObox'}>\n\t\t\t<form>\n\t\t\t\t<textarea\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tkey=\"user_name_key\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tplaceholder=\"Type something...\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={input}\n\t\t\t\t\talign=\"left\"\n\t\t\t\t></textarea>\n\t\t\t</form>\n\t\t\t<button onClick={handleSubmit}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={arrow}\n\t\t\t\t\tclassName={light ? 'arrow' : 'dark-arrow'}\n\t\t\t\t\talt=\"arrow\"\n\t\t\t\t></img>\n\t\t\t</button>\n\t\t\t<OutputBox output={output} loading={loading} />\n\t\t</div>\n\t);\n}\n","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/services/RephraseRequestService.js",[],"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/outline.js",["61","62","63","64","65","66","67","68","69","70"],"import arrow from '../arrow.svg';\nimport copy_icon from '../copy-icon.png';\nimport like_btn from '../like-btn.png';\nimport dislike_btn from '../dislike-btn.png';\nimport React, {\n\tuseState,\n\tsetState,\n\tuseRef,\n\tuseEffect,\n\tuseContext,\n} from 'react';\nimport Rive from 'rive-react';\nimport { rephraseSentence } from '../services/RephraseRequestService';\nimport { ModeContext } from '../ModeContext.js';\n\nfunction OutputBox(props) {\n\tconst { light, setMode } = useContext(ModeContext);\n\tif (props.loading) {\n\t\treturn (\n\t\t\t<div className={light ? 'output-box' : 'dark-output-box'}>\n\t\t\t\t<Rive\n\t\t\t\t\tclassName=\"loading-animation\"\n\t\t\t\t\tsrc=\"Loading-Animation.riv\"\n\t\t\t\t\tanimations=\"Loading\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"bottom-bar\">\n\t\t\t\t\t<button className=\"output-btn like-btn\">\n\t\t\t\t\t\t<img className=\"icon like-icon\" src={like_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"output-btn dislike-btn\">\n\t\t\t\t\t\t<img className=\"icon dislike-icon\" src={dislike_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"output-btn copy-btn\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"icon copy-icon\"\n\t\t\t\t\t\t\tsrc={copy_icon}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(props.output);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={light ? 'output-box' : 'dark-output-box'}>\n\t\t\t\t<div className=\"result\">{props.output}</div>\n\t\t\t\t<div className=\"bottom-bar\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn like-btn' : 'dark-output-btn like-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img className=\"icon like-icon\" src={like_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn dislike-btn' : 'dark-output-btn dislike-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img className=\"icon dislike-icon\" src={dislike_btn} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tlight ? 'output-btn copy-btn' : 'dark-output-btn copy-btn'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={light ? 'icon copy-icon' : 'icon dark-copy-icon'}\n\t\t\t\t\t\t\tsrc={copy_icon}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(props.output);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default function Rephrase() {\n\tconst { light, setMode } = useContext(ModeContext);\n\tconst [output, showResult] = useState('');\n\tconst [input, setInput] = useState('');\n\tconst inputRef = useRef(null);\n\tconst [loading, setLoading] = useState(false);\n\n\t/*As long as there are changes being made on \"Type something.. \" text area,\n\tsetInput set what ever changes as the value  */\n\tfunction handleChange(event) {\n\t\t/*Listens to those changes and set changes as the value*/\n\t\tsetInput(event.target.value);\n\t\t/* If the user removes their input, remove the previous output as well */\n\t\tif (event.target.value == '') {\n\t\t\tshowResult('');\n\t\t}\n\t}\n\t/*This function runs the moment you click on the arrow */\n\tasync function handleSubmit(event) {\n\t\t/*Tells the app that the response is loading... */\n\t\tsetLoading(true);\n\t\t/*Awaits response from the backend. Response is in an object form */\n\t\tconst data = await rephraseSentence(input);\n\t\t/*Tells the app that the response has been obtained */\n\t\tsetLoading(false);\n\t\t/*Show results extract the rephrased element of the object and displays it in the \n\t\t\"Response ..\" text area */\n\t\tshowResult(data.rephrased);\n\n\t\t/*Prevents textarea from reverting to their default value which is \"\" */\n\t\tevent.preventDefault();\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log('Rephrase: ', light);\n\t}, [light]);\n\n\treturn (\n\t\t<div className={light ? 'IObox' : 'dark-IObox'}>\n\t\t\t<form>\n\t\t\t\t<textarea\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tkey=\"user_name_key\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tplaceholder=\"Type something...\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={input}\n\t\t\t\t\talign=\"left\"\n\t\t\t\t></textarea>\n\t\t\t</form>\n\t\t\t<button onClick={handleSubmit}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={arrow}\n\t\t\t\t\tclassName={light ? 'arrow' : 'dark-arrow'}\n\t\t\t\t\talt=\"arrow\"\n\t\t\t\t></img>\n\t\t\t</button>\n\t\t\t<OutputBox output={output} loading={loading} />\n\t\t</div>\n\t);\n}\n","/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/complete.js",["71","72","73","74","75","76","77","78","79","80"],"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/ModeContext.js",[],{"ruleId":"81","severity":1,"message":"82","line":7,"column":20,"nodeType":"83","messageId":"84","endLine":7,"endColumn":26},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"89","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":5,"column":27,"nodeType":"83","messageId":"84","endLine":5,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":47,"column":35,"nodeType":"92","messageId":"93","endLine":47,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":61,"column":35,"nodeType":"92","messageId":"93","endLine":61,"endColumn":37},{"ruleId":"81","severity":1,"message":"94","line":2,"column":27,"nodeType":"83","messageId":"84","endLine":2,"endColumn":35},{"ruleId":"81","severity":1,"message":"94","line":7,"column":2,"nodeType":"83","messageId":"84","endLine":7,"endColumn":10},{"ruleId":"81","severity":1,"message":"95","line":17,"column":17,"nodeType":"83","messageId":"84","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":32,"column":7,"nodeType":"98","endLine":32,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":39,"column":7,"nodeType":"98","endLine":39,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":46,"column":7,"nodeType":"98","endLine":52,"endColumn":9},{"ruleId":"96","severity":1,"message":"97","line":67,"column":7,"nodeType":"98","endLine":67,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":74,"column":7,"nodeType":"98","endLine":74,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":81,"column":7,"nodeType":"98","endLine":87,"endColumn":9},{"ruleId":"81","severity":1,"message":"95","line":95,"column":17,"nodeType":"83","messageId":"84","endLine":95,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":107,"column":26,"nodeType":"92","messageId":"93","endLine":107,"endColumn":28},{"ruleId":"81","severity":1,"message":"94","line":7,"column":2,"nodeType":"83","messageId":"84","endLine":7,"endColumn":10},{"ruleId":"81","severity":1,"message":"95","line":17,"column":17,"nodeType":"83","messageId":"84","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":28,"column":7,"nodeType":"98","endLine":28,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":31,"column":7,"nodeType":"98","endLine":31,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":34,"column":7,"nodeType":"98","endLine":40,"endColumn":9},{"ruleId":"96","severity":1,"message":"97","line":55,"column":7,"nodeType":"98","endLine":55,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":62,"column":7,"nodeType":"98","endLine":62,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":69,"column":7,"nodeType":"98","endLine":75,"endColumn":9},{"ruleId":"81","severity":1,"message":"95","line":83,"column":17,"nodeType":"83","messageId":"84","endLine":83,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":95,"column":26,"nodeType":"92","messageId":"93","endLine":95,"endColumn":28},{"ruleId":"81","severity":1,"message":"94","line":7,"column":2,"nodeType":"83","messageId":"84","endLine":7,"endColumn":10},{"ruleId":"81","severity":1,"message":"95","line":17,"column":17,"nodeType":"83","messageId":"84","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":28,"column":7,"nodeType":"98","endLine":28,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":31,"column":7,"nodeType":"98","endLine":31,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":34,"column":7,"nodeType":"98","endLine":40,"endColumn":9},{"ruleId":"96","severity":1,"message":"97","line":55,"column":7,"nodeType":"98","endLine":55,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":62,"column":7,"nodeType":"98","endLine":62,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":69,"column":7,"nodeType":"98","endLine":75,"endColumn":9},{"ruleId":"81","severity":1,"message":"95","line":83,"column":17,"nodeType":"83","messageId":"84","endLine":83,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":95,"column":26,"nodeType":"92","messageId":"93","endLine":95,"endColumn":28},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'arrow' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setState' is defined but never used.","'setMode' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]