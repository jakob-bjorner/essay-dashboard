{"ast":null,"code":"export const getRephraseRequests = async () => {\n  return fetch(\"http://localhost:5000/rephrase-logs\").then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n    return [];\n  });\n};\nexport const rephraseSentence = async message => {\n  return fetch(\"http://localhost:5000/rephrase\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      message\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n    return [];\n  });\n};","map":{"version":3,"sources":["/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/services/RephraseRequestService.js"],"names":["getRephraseRequests","fetch","then","response","json","catch","error","console","log","rephraseSentence","message","method","headers","body","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,YAAY;AAC7C,SAAOC,KAAK,CAAC,qCAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHI,EAIJC,KAJI,CAIGC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,EAAP;AACD,GAPI,CAAP;AAQD,CATM;AAWP,OAAO,MAAMG,gBAAgB,GAAG,MAAOC,OAAP,IAAmB;AACjD,SAAOT,KAAK,CAAC,gCAAD,EAAmC;AAC7CU,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFoC;AAK7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,MAAAA;AADmB,KAAf;AALuC,GAAnC,CAAL,CASJR,IATI,CASEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAXI,EAYJC,KAZI,CAYGC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,EAAP;AACD,GAfI,CAAP;AAgBD,CAjBM","sourcesContent":["export const getRephraseRequests = async () => {\n  return fetch(\"http://localhost:5000/rephrase-logs\")\n    .then((response) => {\n      return response.json();\n    })\n    .catch((error) => {\n      console.log(error);\n      return [];\n    });\n};\n\nexport const rephraseSentence = async (message) => {\n  return fetch(\"http://localhost:5000/rephrase\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      message,\n    }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((error) => {\n      console.log(error);\n      return [];\n    });\n};\n"]},"metadata":{},"sourceType":"module"}