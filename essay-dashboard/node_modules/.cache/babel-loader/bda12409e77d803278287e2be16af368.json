{"ast":null,"code":"var _jsxFileName = \"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/rephrase.js\",\n    _s = $RefreshSig$();\n\nimport arrow from '../arrow.png';\nimport React, { useState, setState, useRef, useEffect } from 'react';\nimport { rephraseSentence } from '../services/RephraseRequestService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Rephrase() {\n  _s();\n\n  const [output, showResult] = useState('');\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  /*As long as there are changes being made on \"Type something.. \" text area,\n  setInput set what ever changes as the value  */\n\n  function handleChange(event) {\n    /*Listens to those changes and set changes as the value*/\n    setInput(event.target.value);\n  }\n  /*This function runs the moment you click on the arrow */\n\n\n  async function handleSubmit(event) {\n    /*Awaits response from the backend. Response is in an object form */\n    const data = await rephraseSentence(input);\n    /*Show results extract the rephrased element of the object and displays it in the \n    \"Response ..\" text area */\n\n    showResult(data.rephrased);\n    /*Prevents textarea from reverting to their default value which is \"\" */\n\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    console.log(input);\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"IObox\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"Type something...\",\n        onChange: handleChange,\n        value: input,\n        align: \"left\"\n      }, \"user_name_key\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        className: \"arrow\",\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-rephrase-out\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"output\",\n          placeholder: \"Response...\",\n          value: output,\n          onChange: e => showResult(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"output\",\n          placeholder: \"Response...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"output\",\n          placeholder: \"Response...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Rephrase, \"kh0PstrGoTEzlzSEWozJPdG9bX0=\");\n\n_c = Rephrase;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rephrase\");","map":{"version":3,"sources":["/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/rephrase.js"],"names":["arrow","React","useState","setState","useRef","useEffect","rephraseSentence","Rephrase","output","showResult","input","setInput","inputRef","handleChange","event","target","value","handleSubmit","data","rephrased","preventDefault","console","log","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,SAA5C,QAA6D,OAA7D;AAEA,SAASC,gBAAT,QAAiC,oCAAjC;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACA;AACD;;AACC,WAASS,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B;AACAH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACA;AACD;;;AACA,iBAAeC,YAAf,CAA4BH,KAA5B,EAAmC;AAClC;AACA,UAAMI,IAAI,GAAG,MAAMZ,gBAAgB,CAACI,KAAD,CAAnC;AACA;AACF;;AACED,IAAAA,UAAU,CAACS,IAAI,CAACC,SAAN,CAAV;AAEA;;AACAL,IAAAA,KAAK,CAACM,cAAN;AACA;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACfgB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBAEC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACC;AAAA,6BACC;AACC,QAAA,GAAG,EAAEE,QADN;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,SAAS,EAAC,OAJX;AAKC,QAAA,WAAW,EAAC,mBALb;AAOC,QAAA,QAAQ,EAAEC,YAPX;AAQC,QAAA,KAAK,EAAEH,KARR;AASC,QAAA,KAAK,EAAC;AATP,SAEK,eAFL;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAcC;AAAQ,MAAA,OAAO,EAAEO,YAAjB;AAAA,6BACC;AAAK,QAAA,GAAG,EAAEjB,KAAV;AAAiB,QAAA,SAAS,EAAC,OAA3B;AAAmC,QAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAdD,eAiBC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACC;AAAA,gCACC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,SAAS,EAAC,QAFX;AAGC,UAAA,WAAW,EAAC,aAHb;AAIC,UAAA,KAAK,EAAEQ,MAJR;AAKC,UAAA,QAAQ,EAAGe,CAAD,IAAOd,UAAU,CAACc,CAAC,CAACR,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,gBADD,eAQC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,SAAS,EAAC,QAFX;AAGC,UAAA,WAAW,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,gBARD,eAaC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,SAAS,EAAC,QAFX;AAGC,UAAA,WAAW,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,gBAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD;AA2CA;;GArEuBT,Q;;KAAAA,Q","sourcesContent":["import arrow from '../arrow.png';\nimport React, { useState, setState, useRef, useEffect } from 'react';\n\nimport { rephraseSentence } from '../services/RephraseRequestService';\n\nexport default function Rephrase() {\n\tconst [output, showResult] = useState('');\n\tconst [input, setInput] = useState('');\n\tconst inputRef = useRef(null);\n\t/*As long as there are changes being made on \"Type something.. \" text area,\n\tsetInput set what ever changes as the value  */\n\tfunction handleChange(event) {\n\t\t/*Listens to those changes and set changes as the value*/\n\t\tsetInput(event.target.value);\n\t}\n\t/*This function runs the moment you click on the arrow */\n\tasync function handleSubmit(event) {\n\t\t/*Awaits response from the backend. Response is in an object form */\n\t\tconst data = await rephraseSentence(input);\n\t\t/*Show results extract the rephrased element of the object and displays it in the \n\t\t\"Response ..\" text area */\n\t\tshowResult(data.rephrased);\n\n\t\t/*Prevents textarea from reverting to their default value which is \"\" */\n\t\tevent.preventDefault();\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log(input);\n\t}, [input]);\n\n\treturn (\n\n\t\t<div className=\"IObox\">\n\t\t\t<form>\n\t\t\t\t<textarea\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tkey=\"user_name_key\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tplaceholder=\"Type something...\"\n\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={input}\n\t\t\t\t\talign=\"left\"\n\t\t\t\t></textarea>\n\t\t\t</form>\n\t\t\t<button onClick={handleSubmit}>\n\t\t\t\t<img src={arrow} className=\"arrow\" alt=\"arrow\"></img>\n\t\t\t</button>\n\t\t\t<div className=\"text-rephrase-out\">\n\t\t\t\t<form>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"output\"\n\t\t\t\t\t\tplaceholder=\"Response...\"\n\t\t\t\t\t\tvalue={output}\n\t\t\t\t\t\tonChange={(e) => showResult(e.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"output\"\n\t\t\t\t\t\tplaceholder=\"Response...\"\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"output\"\n\t\t\t\t\t\tplaceholder=\"Response...\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}"]},"metadata":{},"sourceType":"module"}