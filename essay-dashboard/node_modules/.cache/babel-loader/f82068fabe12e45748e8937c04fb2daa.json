{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"rive\"] = factory();else root[\"rive\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    (() => {\n      // webpackBootstrap\n\n      /******/\n      \"use strict\";\n      /******/\n\n      var __webpack_modules__ = [\n        /* 0 */\n      ,\n      /* 1 */\n\n      /***/\n      (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n\n\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\n          \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n          /* harmony export */\n\n        });\n\n        var Rive = function () {\n          var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n          if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n          return function (Rive) {\n            Rive = Rive || {};\n            null;\n            var k;\n            k || (k = typeof Rive !== 'undefined' ? Rive : {});\n            var aa, ca;\n            k.ready = new Promise(function (a, b) {\n              aa = a;\n              ca = b;\n            });\n\n            function da() {\n              function a(c) {\n                let d = 0;\n                b.forEach((e, f) => {\n                  c > e ? b.delete(f) : d = Math.max(d, f);\n                });\n                return d;\n              }\n\n              console.assert(!0);\n              const b = new Map();\n\n              this.push = function (c) {\n                const d = Date.now();\n                b.set(c, d + 1E3);\n                return a(d);\n              };\n            }\n\n            k.onRuntimeInitialized = function () {\n              function a(t) {\n                this.od = t;\n                this.ke = t.getContext(\"2d\");\n                this.oe = g;\n                this.td = [];\n                this.Dd = 0;\n\n                this.clear = function () {\n                  console.assert(0 == this.Dd);\n                  this.td = [];\n                  h.delete(this);\n                };\n\n                this.save = function () {\n                  ++this.Dd;\n                  this.td.push(g.save.bind(g));\n                };\n\n                this.restore = function () {\n                  0 < this.Dd && (this.td.push(g.restore.bind(g)), --this.Dd);\n                };\n\n                this.transform = function (v) {\n                  this.td.push(g.transform.bind(g, v));\n                };\n\n                this.align = function (v, y, E, L) {\n                  this.td.push(g.align.bind(g, v, y, E, L));\n                };\n\n                this.computeAlignment = function (v, y, E, L, N) {\n                  this.td.push(g.computeAlignment.bind(g, v, y, E, L, N));\n                };\n\n                this.flush = function () {\n                  console.assert(0 == this.Dd);\n                  h.add(this);\n                  f && d();\n                };\n              }\n\n              function b(t) {\n                var v = {\n                  alpha: 1,\n                  depth: 0,\n                  stencil: 8,\n                  antialias: 0,\n                  premultipliedAlpha: 1,\n                  preserveDrawingBuffer: 0,\n                  preferLowPowerToHighPerformance: 0,\n                  failIfMajorPerformanceCaveat: 0,\n                  enableExtensionsByDefault: 1,\n                  explicitSwapControl: 0,\n                  renderViaOffscreenBackBuffer: 0\n                },\n                    y = t.getContext(\"webgl2\", v);\n                y || (y = t.getContext(\"webgl\", v));\n                var E = y,\n                    L = ea(fa),\n                    N = {\n                  Qe: L,\n                  attributes: v,\n                  version: v.Re,\n                  Td: E\n                };\n                E.canvas && (E.canvas.Oe = N);\n                fa[L] = N;\n                (\"undefined\" === typeof v.te || v.te) && ha(N);\n                l = fa[L];\n                k.qe = q = l && l.Td;\n                v = n(t.width, t.height);\n                v.me = L;\n                v.od = t;\n                v.be = t.width;\n                v.ae = t.height;\n                v.le = y;\n                return v;\n              }\n\n              function c(t, v) {\n                const y = v - 1;\n                console.assert(0 == (v & y));\n                return t + y & ~y;\n              }\n\n              function d() {\n                const t = g.ne;\n                var v = 0,\n                    y = 0,\n                    E = 0;\n                const L = Array(h.size);\n                var N = 0;\n\n                for (var J of h) J.zd = Math.min(J.od.width, t), J.yd = Math.min(J.od.height, t), J.Ud = J.yd * J.zd, v = Math.max(v, J.zd), y = Math.max(y, J.yd), E += J.Ud, L[N++] = J;\n\n                h.clear();\n\n                if (!(0 >= E)) {\n                  v = 1 << (0 >= v ? 0 : 32 - Math.clz32(v - 1));\n\n                  for (y = 1 << (0 >= y ? 0 : 32 - Math.clz32(y - 1)); y * v < E;) v <= y ? v *= 2 : y *= 2;\n\n                  v = Math.min(v, t);\n                  v = Math.min(y, t);\n                  L.sort((ba, qb) => qb.Ud - ba.Ud);\n                  E = new k.DynamicRectanizer(t);\n\n                  for (J = 0; J < L.length;) {\n                    E.reset(v, y);\n\n                    for (N = J; N < L.length; ++N) {\n                      var I = L[N],\n                          F = E.addRect(I.zd, I.yd);\n\n                      if (0 > F) {\n                        console.assert(N > J);\n                        break;\n                      }\n\n                      I.Id = F & 65535;\n                      I.Jd = F >> 16;\n                    }\n\n                    I = c(r.push(E.drawWidth()), Math.min(512, t));\n                    F = c(x.push(E.drawHeight()), Math.min(512, t));\n                    console.assert(I >= E.drawWidth());\n                    console.assert(F >= E.drawHeight());\n                    console.assert(I <= t);\n                    console.assert(F <= t);\n                    g.od.width != I && (g.od.width = I);\n                    g.od.height != F && (g.od.height = F);\n                    g.clear();\n\n                    for (I = J; I < N; ++I) {\n                      F = L[I];\n                      g.saveClipRect(F.Id, F.Jd, F.Id + F.zd, F.Jd + F.yd);\n                      let ba = new k.Mat2D();\n                      ba.xx = F.zd / F.od.width;\n                      ba.yy = F.yd / F.od.height;\n                      ba.xy = ba.yx = 0;\n                      ba.tx = F.Id;\n                      ba.ty = F.Jd;\n                      g.transform(ba);\n\n                      for (const qb of F.td) qb();\n\n                      g.restoreClipRect();\n                      F.td = [];\n                    }\n\n                    for (g.flush(); J < N; ++J) I = L[J], F = I.ke, F.globalCompositeOperation = \"copy\", F.drawImage(g.od, I.Id, I.Jd, I.zd, I.yd, 0, 0, I.od.width, I.od.height);\n\n                    J = N;\n                  }\n                }\n              }\n\n              function e(t) {\n                const v = u;\n                m = A = 0;\n                u = new Map();\n                v.forEach(y => {\n                  try {\n                    y(t);\n                  } catch (E) {\n                    console.error(E);\n                  }\n                });\n                d();\n              }\n\n              const f = navigator.userAgent.match(/firefox|fxios/i);\n              let g = null;\n              const h = new Set(),\n                    n = k.makeRenderer;\n\n              k.makeRenderer = function (t, v) {\n                return v ? (g || (g = b(document.createElement(\"canvas\")), v = g.le, g.ne = Math.min(v.getParameter(v.MAX_RENDERBUFFER_SIZE), v.getParameter(v.MAX_TEXTURE_SIZE))), new a(t)) : b(t);\n              };\n\n              const p = k.Artboard.prototype.draw;\n\n              k.Artboard.prototype.draw = function (t) {\n                t.td ? t.td.push(p.bind(this, t.oe)) : p.call(this, t);\n              };\n\n              const r = new da(),\n                    x = new da();\n              let A = 0,\n                  m = 0,\n                  u = new Map();\n\n              k.requestAnimationFrame = function (t) {\n                A || (A = window.requestAnimationFrame(e));\n                const v = ++m;\n                u.set(v, t);\n                return v;\n              };\n\n              k.cancelAnimationFrame = function (t) {\n                u.delete(t);\n                A && 0 == u.size && (window.cancelAnimationFrame(A), A = 0);\n              };\n\n              const B = k.WebGLRenderer.prototype.clear;\n\n              k.WebGLRenderer.prototype.clear = function () {\n                l = fa[this.me];\n                k.qe = q = l && l.Td;\n                const t = this.od;\n                if (this.be != t.width || this.ae != t.height) this.resize(t.width, t.height), this.be = t.width, this.ae = t.height;\n                B.call(this);\n              };\n            };\n\n            var ia = {},\n                ja;\n\n            for (ja in k) k.hasOwnProperty(ja) && (ia[ja] = k[ja]);\n\n            var ka = \"./this.program\",\n                la = \"object\" === typeof window,\n                ma = \"function\" === typeof importScripts,\n                na = \"object\" === typeof process && \"object\" === typeof process.versions && \"string\" === typeof process.versions.node,\n                w = \"\",\n                oa,\n                pa,\n                qa,\n                ra,\n                sa;\n            if (na) w = ma ? require(\"path\").dirname(w) + \"/\" : __dirname + \"/\", oa = function (a, b) {\n              ra || (ra = require(\"fs\"));\n              sa || (sa = require(\"path\"));\n              a = sa.normalize(a);\n              return ra.readFileSync(a, b ? null : \"utf8\");\n            }, qa = function (a) {\n              a = oa(a, !0);\n              a.buffer || (a = new Uint8Array(a));\n              a.buffer || ta(\"Assertion failed: undefined\");\n              return a;\n            }, pa = function (a, b, c) {\n              ra || (ra = require(\"fs\"));\n              sa || (sa = require(\"path\"));\n              a = sa.normalize(a);\n              ra.readFile(a, function (d, e) {\n                d ? c(d) : b(e.buffer);\n              });\n            }, 1 < process.argv.length && (ka = process.argv[1].replace(/\\\\/g, \"/\")), process.argv.slice(2), process.on(\"uncaughtException\", function (a) {\n              throw a;\n            }), process.on(\"unhandledRejection\", function (a) {\n              throw a;\n            }), k.inspect = function () {\n              return \"[Emscripten Module object]\";\n            };else if (la || ma) ma ? w = self.location.href : \"undefined\" !== typeof document && document.currentScript && (w = document.currentScript.src), _scriptDir && (w = _scriptDir), 0 !== w.indexOf(\"blob:\") ? w = w.substr(0, w.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1) : w = \"\", oa = function (a) {\n              var b = new XMLHttpRequest();\n              b.open(\"GET\", a, !1);\n              b.send(null);\n              return b.responseText;\n            }, ma && (qa = function (a) {\n              var b = new XMLHttpRequest();\n              b.open(\"GET\", a, !1);\n              b.responseType = \"arraybuffer\";\n              b.send(null);\n              return new Uint8Array(b.response);\n            }), pa = function (a, b, c) {\n              var d = new XMLHttpRequest();\n              d.open(\"GET\", a, !0);\n              d.responseType = \"arraybuffer\";\n\n              d.onload = function () {\n                200 == d.status || 0 == d.status && d.response ? b(d.response) : c();\n              };\n\n              d.onerror = c;\n              d.send(null);\n            };\n            var ua = k.print || console.log.bind(console),\n                va = k.printErr || console.warn.bind(console);\n\n            for (ja in ia) ia.hasOwnProperty(ja) && (k[ja] = ia[ja]);\n\n            ia = null;\n            k.thisProgram && (ka = k.thisProgram);\n            var wa = 0,\n                xa;\n            k.wasmBinary && (xa = k.wasmBinary);\n            var noExitRuntime = k.noExitRuntime || !0;\n            \"object\" !== typeof WebAssembly && ta(\"no native wasm support detected\");\n            var ya,\n                za = !1,\n                Aa = \"undefined\" !== typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0;\n\n            function Ba(a, b, c) {\n              var d = b + c;\n\n              for (c = b; a[c] && !(c >= d);) ++c;\n\n              if (16 < c - b && a.subarray && Aa) return Aa.decode(a.subarray(b, c));\n\n              for (d = \"\"; b < c;) {\n                var e = a[b++];\n\n                if (e & 128) {\n                  var f = a[b++] & 63;\n                  if (192 == (e & 224)) d += String.fromCharCode((e & 31) << 6 | f);else {\n                    var g = a[b++] & 63;\n                    e = 224 == (e & 240) ? (e & 15) << 12 | f << 6 | g : (e & 7) << 18 | f << 12 | g << 6 | a[b++] & 63;\n                    65536 > e ? d += String.fromCharCode(e) : (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023));\n                  }\n                } else d += String.fromCharCode(e);\n              }\n\n              return d;\n            }\n\n            function Ca(a, b) {\n              return a ? Ba(z, a, b) : \"\";\n            }\n\n            function Da(a, b, c, d) {\n              if (!(0 < d)) return 0;\n              var e = c;\n              d = c + d - 1;\n\n              for (var f = 0; f < a.length; ++f) {\n                var g = a.charCodeAt(f);\n\n                if (55296 <= g && 57343 >= g) {\n                  var h = a.charCodeAt(++f);\n                  g = 65536 + ((g & 1023) << 10) | h & 1023;\n                }\n\n                if (127 >= g) {\n                  if (c >= d) break;\n                  b[c++] = g;\n                } else {\n                  if (2047 >= g) {\n                    if (c + 1 >= d) break;\n                    b[c++] = 192 | g >> 6;\n                  } else {\n                    if (65535 >= g) {\n                      if (c + 2 >= d) break;\n                      b[c++] = 224 | g >> 12;\n                    } else {\n                      if (c + 3 >= d) break;\n                      b[c++] = 240 | g >> 18;\n                      b[c++] = 128 | g >> 12 & 63;\n                    }\n\n                    b[c++] = 128 | g >> 6 & 63;\n                  }\n\n                  b[c++] = 128 | g & 63;\n                }\n              }\n\n              b[c] = 0;\n              return c - e;\n            }\n\n            function Ea(a) {\n              for (var b = 0, c = 0; c < a.length; ++c) {\n                var d = a.charCodeAt(c);\n                55296 <= d && 57343 >= d && (d = 65536 + ((d & 1023) << 10) | a.charCodeAt(++c) & 1023);\n                127 >= d ? ++b : b = 2047 >= d ? b + 2 : 65535 >= d ? b + 3 : b + 4;\n              }\n\n              return b;\n            }\n\n            var Fa = \"undefined\" !== typeof TextDecoder ? new TextDecoder(\"utf-16le\") : void 0;\n\n            function Ga(a, b) {\n              var c = a >> 1;\n\n              for (var d = c + b / 2; !(c >= d) && Ha[c];) ++c;\n\n              c <<= 1;\n              if (32 < c - a && Fa) return Fa.decode(z.subarray(a, c));\n              c = \"\";\n\n              for (d = 0; !(d >= b / 2); ++d) {\n                var e = Ia[a + 2 * d >> 1];\n                if (0 == e) break;\n                c += String.fromCharCode(e);\n              }\n\n              return c;\n            }\n\n            function Ja(a, b, c) {\n              void 0 === c && (c = 2147483647);\n              if (2 > c) return 0;\n              c -= 2;\n              var d = b;\n              c = c < 2 * a.length ? c / 2 : a.length;\n\n              for (var e = 0; e < c; ++e) Ia[b >> 1] = a.charCodeAt(e), b += 2;\n\n              Ia[b >> 1] = 0;\n              return b - d;\n            }\n\n            function Ka(a) {\n              return 2 * a.length;\n            }\n\n            function La(a, b) {\n              for (var c = 0, d = \"\"; !(c >= b / 4);) {\n                var e = C[a + 4 * c >> 2];\n                if (0 == e) break;\n                ++c;\n                65536 <= e ? (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023)) : d += String.fromCharCode(e);\n              }\n\n              return d;\n            }\n\n            function Ma(a, b, c) {\n              void 0 === c && (c = 2147483647);\n              if (4 > c) return 0;\n              var d = b;\n              c = d + c - 4;\n\n              for (var e = 0; e < a.length; ++e) {\n                var f = a.charCodeAt(e);\n\n                if (55296 <= f && 57343 >= f) {\n                  var g = a.charCodeAt(++e);\n                  f = 65536 + ((f & 1023) << 10) | g & 1023;\n                }\n\n                C[b >> 2] = f;\n                b += 4;\n                if (b + 4 > c) break;\n              }\n\n              C[b >> 2] = 0;\n              return b - d;\n            }\n\n            function Na(a) {\n              for (var b = 0, c = 0; c < a.length; ++c) {\n                var d = a.charCodeAt(c);\n                55296 <= d && 57343 >= d && ++c;\n                b += 4;\n              }\n\n              return b;\n            }\n\n            var Oa, Pa, z, Ia, Ha, C, D, G, Qa;\n\n            function Ra() {\n              var a = ya.buffer;\n              Oa = a;\n              k.HEAP8 = Pa = new Int8Array(a);\n              k.HEAP16 = Ia = new Int16Array(a);\n              k.HEAP32 = C = new Int32Array(a);\n              k.HEAPU8 = z = new Uint8Array(a);\n              k.HEAPU16 = Ha = new Uint16Array(a);\n              k.HEAPU32 = D = new Uint32Array(a);\n              k.HEAPF32 = G = new Float32Array(a);\n              k.HEAPF64 = Qa = new Float64Array(a);\n            }\n\n            var Sa,\n                Ta = [],\n                Ua = [],\n                Va = [];\n\n            function Wa() {\n              var a = k.preRun.shift();\n              Ta.unshift(a);\n            }\n\n            var Xa = 0,\n                Ya = null,\n                Za = null;\n            k.preloadedImages = {};\n            k.preloadedAudios = {};\n\n            function ta(a) {\n              if (k.onAbort) k.onAbort(a);\n              a = \"Aborted(\" + a + \")\";\n              va(a);\n              za = !0;\n              a = new WebAssembly.RuntimeError(a + \". Build with -s ASSERTIONS=1 for more info.\");\n              ca(a);\n              throw a;\n            }\n\n            function $a() {\n              return H.startsWith(\"data:application/octet-stream;base64,\");\n            }\n\n            var H;\n            H = \"webgl_advanced.wasm\";\n\n            if (!$a()) {\n              var ab = H;\n              H = k.locateFile ? k.locateFile(ab, w) : w + ab;\n            }\n\n            function bb() {\n              var a = H;\n\n              try {\n                if (a == H && xa) return new Uint8Array(xa);\n                if (qa) return qa(a);\n                throw \"both async and sync fetching of the wasm failed\";\n              } catch (b) {\n                ta(b);\n              }\n            }\n\n            function cb() {\n              if (!xa && (la || ma)) {\n                if (\"function\" === typeof fetch && !H.startsWith(\"file://\")) return fetch(H, {\n                  credentials: \"same-origin\"\n                }).then(function (a) {\n                  if (!a.ok) throw \"failed to load wasm binary file at '\" + H + \"'\";\n                  return a.arrayBuffer();\n                }).catch(function () {\n                  return bb();\n                });\n                if (pa) return new Promise(function (a, b) {\n                  pa(H, function (c) {\n                    a(new Uint8Array(c));\n                  }, b);\n                });\n              }\n\n              return Promise.resolve().then(function () {\n                return bb();\n              });\n            }\n\n            function db(a) {\n              for (; 0 < a.length;) {\n                var b = a.shift();\n                if (\"function\" == typeof b) b(k);else {\n                  var c = b.Pe;\n                  \"number\" === typeof c ? void 0 === b.Vd ? K(c)() : K(c)(b.Vd) : c(void 0 === b.Vd ? null : b.Vd);\n                }\n              }\n            }\n\n            function K(a) {\n              return Sa.get(a);\n            }\n\n            var eb = {};\n\n            function fb(a) {\n              for (; a.length;) {\n                var b = a.pop();\n                a.pop()(b);\n              }\n            }\n\n            function gb(a) {\n              return this.fromWireType(D[a >> 2]);\n            }\n\n            var hb = {},\n                ib = {},\n                jb = {};\n\n            function kb(a) {\n              if (void 0 === a) return \"_unknown\";\n              a = a.replace(/[^a-zA-Z0-9_]/g, \"$\");\n              var b = a.charCodeAt(0);\n              return 48 <= b && 57 >= b ? \"_\" + a : a;\n            }\n\n            function lb(a, b) {\n              a = kb(a);\n              return new Function(\"body\", \"return function \" + a + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(b);\n            }\n\n            function mb(a) {\n              var b = Error,\n                  c = lb(a, function (d) {\n                this.name = a;\n                this.message = d;\n                d = Error(d).stack;\n                void 0 !== d && (this.stack = this.toString() + \"\\n\" + d.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n              });\n              c.prototype = Object.create(b.prototype);\n              c.prototype.constructor = c;\n\n              c.prototype.toString = function () {\n                return void 0 === this.message ? this.name : this.name + \": \" + this.message;\n              };\n\n              return c;\n            }\n\n            var nb = void 0;\n\n            function ob(a) {\n              throw new nb(a);\n            }\n\n            function M(a, b, c) {\n              function d(h) {\n                h = c(h);\n                h.length !== a.length && ob(\"Mismatched type converter count\");\n\n                for (var n = 0; n < a.length; ++n) pb(a[n], h[n]);\n              }\n\n              a.forEach(function (h) {\n                jb[h] = b;\n              });\n              var e = Array(b.length),\n                  f = [],\n                  g = 0;\n              b.forEach(function (h, n) {\n                ib.hasOwnProperty(h) ? e[n] = ib[h] : (f.push(h), hb.hasOwnProperty(h) || (hb[h] = []), hb[h].push(function () {\n                  e[n] = ib[h];\n                  ++g;\n                  g === f.length && d(e);\n                }));\n              });\n              0 === f.length && d(e);\n            }\n\n            function rb(a) {\n              switch (a) {\n                case 1:\n                  return 0;\n\n                case 2:\n                  return 1;\n\n                case 4:\n                  return 2;\n\n                case 8:\n                  return 3;\n\n                default:\n                  throw new TypeError(\"Unknown type size: \" + a);\n              }\n            }\n\n            var sb = void 0;\n\n            function O(a) {\n              for (var b = \"\"; z[a];) b += sb[z[a++]];\n\n              return b;\n            }\n\n            var tb = void 0;\n\n            function P(a) {\n              throw new tb(a);\n            }\n\n            function pb(a, b, c) {\n              c = c || {};\n              if (!(\"argPackAdvance\" in b)) throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n              var d = b.name;\n              a || P('type \"' + d + '\" must have a positive integer typeid pointer');\n\n              if (ib.hasOwnProperty(a)) {\n                if (c.Ae) return;\n                P(\"Cannot register type '\" + d + \"' twice\");\n              }\n\n              ib[a] = b;\n              delete jb[a];\n              hb.hasOwnProperty(a) && (b = hb[a], delete hb[a], b.forEach(function (e) {\n                e();\n              }));\n            }\n\n            function ub(a) {\n              P(a.jd.md.kd.name + \" instance already deleted\");\n            }\n\n            var vb = !1;\n\n            function wb() {}\n\n            function xb(a) {\n              --a.count.value;\n              0 === a.count.value && (a.qd ? a.sd.vd(a.qd) : a.md.kd.vd(a.ld));\n            }\n\n            function yb(a) {\n              if (\"undefined\" === typeof FinalizationGroup) return yb = function (b) {\n                return b;\n              }, a;\n              vb = new FinalizationGroup(function (b) {\n                for (var c = b.next(); !c.done; c = b.next()) c = c.value, c.ld ? xb(c) : console.warn(\"object already deleted: \" + c.ld);\n              });\n\n              yb = function (b) {\n                vb.register(b, b.jd, b.jd);\n                return b;\n              };\n\n              wb = function (b) {\n                vb.unregister(b.jd);\n              };\n\n              return yb(a);\n            }\n\n            var zb = void 0,\n                Ab = [];\n\n            function Bb() {\n              for (; Ab.length;) {\n                var a = Ab.pop();\n                a.jd.Bd = !1;\n                a[\"delete\"]();\n              }\n            }\n\n            function Cb() {}\n\n            var Db = {};\n\n            function Eb(a, b, c) {\n              if (void 0 === a[b].nd) {\n                var d = a[b];\n\n                a[b] = function () {\n                  a[b].nd.hasOwnProperty(arguments.length) || P(\"Function '\" + c + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + a[b].nd + \")!\");\n                  return a[b].nd[arguments.length].apply(this, arguments);\n                };\n\n                a[b].nd = [];\n                a[b].nd[d.Kd] = d;\n              }\n            }\n\n            function Fb(a, b, c) {\n              k.hasOwnProperty(a) ? ((void 0 === c || void 0 !== k[a].nd && void 0 !== k[a].nd[c]) && P(\"Cannot register public name '\" + a + \"' twice\"), Eb(k, a, a), k.hasOwnProperty(c) && P(\"Cannot register multiple overloads of a function with the same number of arguments (\" + c + \")!\"), k[a].nd[c] = b) : (k[a] = b, void 0 !== c && (k[a].Te = c));\n            }\n\n            function Gb(a, b, c, d, e, f, g, h) {\n              this.name = a;\n              this.constructor = b;\n              this.wd = c;\n              this.vd = d;\n              this.ud = e;\n              this.ve = f;\n              this.Hd = g;\n              this.se = h;\n              this.Ee = [];\n            }\n\n            function Hb(a, b, c) {\n              for (; b !== c;) b.Hd || P(\"Expected null or instance of \" + c.name + \", got an instance of \" + b.name), a = b.Hd(a), b = b.ud;\n\n              return a;\n            }\n\n            function Ib(a, b) {\n              if (null === b) return this.Xd && P(\"null is not a valid \" + this.name), 0;\n              b.jd || P('Cannot pass \"' + Jb(b) + '\" as a ' + this.name);\n              b.jd.ld || P(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              return Hb(b.jd.ld, b.jd.md.kd, this.kd);\n            }\n\n            function Kb(a, b) {\n              if (null === b) {\n                this.Xd && P(\"null is not a valid \" + this.name);\n\n                if (this.Md) {\n                  var c = this.Yd();\n                  null !== a && a.push(this.vd, c);\n                  return c;\n                }\n\n                return 0;\n              }\n\n              b.jd || P('Cannot pass \"' + Jb(b) + '\" as a ' + this.name);\n              b.jd.ld || P(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              !this.Ld && b.jd.md.Ld && P(\"Cannot convert argument of type \" + (b.jd.sd ? b.jd.sd.name : b.jd.md.name) + \" to parameter type \" + this.name);\n              c = Hb(b.jd.ld, b.jd.md.kd, this.kd);\n              if (this.Md) switch (void 0 === b.jd.qd && P(\"Passing raw pointer to smart pointer is illegal\"), this.Je) {\n                case 0:\n                  b.jd.sd === this ? c = b.jd.qd : P(\"Cannot convert argument of type \" + (b.jd.sd ? b.jd.sd.name : b.jd.md.name) + \" to parameter type \" + this.name);\n                  break;\n\n                case 1:\n                  c = b.jd.qd;\n                  break;\n\n                case 2:\n                  if (b.jd.sd === this) c = b.jd.qd;else {\n                    var d = b.clone();\n                    c = this.Fe(c, Lb(function () {\n                      d[\"delete\"]();\n                    }));\n                    null !== a && a.push(this.vd, c);\n                  }\n                  break;\n\n                default:\n                  P(\"Unsupporting sharing policy\");\n              }\n              return c;\n            }\n\n            function Mb(a, b) {\n              if (null === b) return this.Xd && P(\"null is not a valid \" + this.name), 0;\n              b.jd || P('Cannot pass \"' + Jb(b) + '\" as a ' + this.name);\n              b.jd.ld || P(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              b.jd.md.Ld && P(\"Cannot convert argument of type \" + b.jd.md.name + \" to parameter type \" + this.name);\n              return Hb(b.jd.ld, b.jd.md.kd, this.kd);\n            }\n\n            function Nb(a, b, c) {\n              if (b === c) return a;\n              if (void 0 === c.ud) return null;\n              a = Nb(a, b, c.ud);\n              return null === a ? null : c.se(a);\n            }\n\n            var Ob = {};\n\n            function Pb(a, b) {\n              for (void 0 === b && P(\"ptr should not be undefined\"); a.ud;) b = a.Hd(b), a = a.ud;\n\n              return Ob[b];\n            }\n\n            function Qb(a, b) {\n              b.md && b.ld || ob(\"makeClassHandle requires ptr and ptrType\");\n              !!b.sd !== !!b.qd && ob(\"Both smartPtrType and smartPtr must be specified\");\n              b.count = {\n                value: 1\n              };\n              return yb(Object.create(a, {\n                jd: {\n                  value: b\n                }\n              }));\n            }\n\n            function Rb(a, b, c, d) {\n              this.name = a;\n              this.kd = b;\n              this.Xd = c;\n              this.Ld = d;\n              this.Md = !1;\n              this.vd = this.Fe = this.Yd = this.he = this.Je = this.De = void 0;\n              void 0 !== b.ud ? this.toWireType = Kb : (this.toWireType = d ? Ib : Mb, this.rd = null);\n            }\n\n            function Sb(a, b, c) {\n              k.hasOwnProperty(a) || ob(\"Replacing nonexistant public symbol\");\n              void 0 !== k[a].nd && void 0 !== c ? k[a].nd[c] = b : (k[a] = b, k[a].Kd = c);\n            }\n\n            function Tb(a, b) {\n              var c = [];\n              return function () {\n                c.length = arguments.length;\n\n                for (var d = 0; d < arguments.length; d++) c[d] = arguments[d];\n\n                a.includes(\"j\") ? (d = k[\"dynCall_\" + a], d = c && c.length ? d.apply(null, [b].concat(c)) : d.call(null, b)) : d = K(b).apply(null, c);\n                return d;\n              };\n            }\n\n            function Q(a, b) {\n              a = O(a);\n              var c = a.includes(\"j\") ? Tb(a, b) : K(b);\n              \"function\" !== typeof c && P(\"unknown function pointer with signature \" + a + \": \" + b);\n              return c;\n            }\n\n            var Ub = void 0;\n\n            function Vb(a) {\n              a = Wb(a);\n              var b = O(a);\n              Xb(a);\n              return b;\n            }\n\n            function Yb(a, b) {\n              function c(f) {\n                e[f] || ib[f] || (jb[f] ? jb[f].forEach(c) : (d.push(f), e[f] = !0));\n              }\n\n              var d = [],\n                  e = {};\n              b.forEach(c);\n              throw new Ub(a + \": \" + d.map(Vb).join([\", \"]));\n            }\n\n            function Zb(a, b, c) {\n              a instanceof Object || P(c + ' with invalid \"this\": ' + a);\n              a instanceof b.kd.constructor || P(c + ' incompatible with \"this\" of type ' + a.constructor.name);\n              a.jd.ld || P(\"cannot call emscripten binding method \" + c + \" on deleted object\");\n              return Hb(a.jd.ld, a.jd.md.kd, b.kd);\n            }\n\n            function $b(a, b) {\n              for (var c = [], d = 0; d < a; d++) c.push(C[(b >> 2) + d]);\n\n              return c;\n            }\n\n            function ac(a) {\n              var b = Function;\n              if (!(b instanceof Function)) throw new TypeError(\"new_ called with constructor type \" + typeof b + \" which is not a function\");\n              var c = lb(b.name || \"unknownFunctionName\", function () {});\n              c.prototype = b.prototype;\n              c = new c();\n              a = b.apply(c, a);\n              return a instanceof Object ? a : c;\n            }\n\n            function bc(a, b, c, d, e) {\n              var f = b.length;\n              2 > f && P(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n              var g = null !== b[1] && null !== c,\n                  h = !1;\n\n              for (c = 1; c < b.length; ++c) if (null !== b[c] && void 0 === b[c].rd) {\n                h = !0;\n                break;\n              }\n\n              var n = \"void\" !== b[0].name,\n                  p = \"\",\n                  r = \"\";\n\n              for (c = 0; c < f - 2; ++c) p += (0 !== c ? \", \" : \"\") + \"arg\" + c, r += (0 !== c ? \", \" : \"\") + \"arg\" + c + \"Wired\";\n\n              a = \"return function \" + kb(a) + \"(\" + p + \") {\\nif (arguments.length !== \" + (f - 2) + \") {\\nthrowBindingError('function \" + a + \" called with ' + arguments.length + ' arguments, expected \" + (f - 2) + \" args!');\\n}\\n\";\n              h && (a += \"var destructors = [];\\n\");\n              var x = h ? \"destructors\" : \"null\";\n              p = \"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");\n              d = [P, d, e, fb, b[0], b[1]];\n              g && (a += \"var thisWired = classParam.toWireType(\" + x + \", this);\\n\");\n\n              for (c = 0; c < f - 2; ++c) a += \"var arg\" + c + \"Wired = argType\" + c + \".toWireType(\" + x + \", arg\" + c + \"); // \" + b[c + 2].name + \"\\n\", p.push(\"argType\" + c), d.push(b[c + 2]);\n\n              g && (r = \"thisWired\" + (0 < r.length ? \", \" : \"\") + r);\n              a += (n ? \"var rv = \" : \"\") + \"invoker(fn\" + (0 < r.length ? \", \" : \"\") + r + \");\\n\";\n              if (h) a += \"runDestructors(destructors);\\n\";else for (c = g ? 1 : 2; c < b.length; ++c) f = 1 === c ? \"thisWired\" : \"arg\" + (c - 2) + \"Wired\", null !== b[c].rd && (a += f + \"_dtor(\" + f + \"); // \" + b[c].name + \"\\n\", p.push(f + \"_dtor\"), d.push(b[c].rd));\n              n && (a += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\");\n              p.push(a + \"}\\n\");\n              return ac(p).apply(null, d);\n            }\n\n            var cc = [],\n                R = [{}, {\n              value: void 0\n            }, {\n              value: null\n            }, {\n              value: !0\n            }, {\n              value: !1\n            }];\n\n            function dc(a) {\n              4 < a && 0 === --R[a].Zd && (R[a] = void 0, cc.push(a));\n            }\n\n            function ec(a) {\n              a || P(\"Cannot use deleted val. handle = \" + a);\n              return R[a].value;\n            }\n\n            function Lb(a) {\n              switch (a) {\n                case void 0:\n                  return 1;\n\n                case null:\n                  return 2;\n\n                case !0:\n                  return 3;\n\n                case !1:\n                  return 4;\n\n                default:\n                  var b = cc.length ? cc.pop() : R.length;\n                  R[b] = {\n                    Zd: 1,\n                    value: a\n                  };\n                  return b;\n              }\n            }\n\n            function fc(a, b, c) {\n              switch (b) {\n                case 0:\n                  return function (d) {\n                    return this.fromWireType((c ? Pa : z)[d]);\n                  };\n\n                case 1:\n                  return function (d) {\n                    return this.fromWireType((c ? Ia : Ha)[d >> 1]);\n                  };\n\n                case 2:\n                  return function (d) {\n                    return this.fromWireType((c ? C : D)[d >> 2]);\n                  };\n\n                default:\n                  throw new TypeError(\"Unknown integer type: \" + a);\n              }\n            }\n\n            function gc(a, b) {\n              var c = ib[a];\n              void 0 === c && P(b + \" has unknown type \" + Vb(a));\n              return c;\n            }\n\n            function Jb(a) {\n              if (null === a) return \"null\";\n              var b = typeof a;\n              return \"object\" === b || \"array\" === b || \"function\" === b ? a.toString() : \"\" + a;\n            }\n\n            function hc(a, b) {\n              switch (b) {\n                case 2:\n                  return function (c) {\n                    return this.fromWireType(G[c >> 2]);\n                  };\n\n                case 3:\n                  return function (c) {\n                    return this.fromWireType(Qa[c >> 3]);\n                  };\n\n                default:\n                  throw new TypeError(\"Unknown float type: \" + a);\n              }\n            }\n\n            function ic(a, b, c) {\n              switch (b) {\n                case 0:\n                  return c ? function (d) {\n                    return Pa[d];\n                  } : function (d) {\n                    return z[d];\n                  };\n\n                case 1:\n                  return c ? function (d) {\n                    return Ia[d >> 1];\n                  } : function (d) {\n                    return Ha[d >> 1];\n                  };\n\n                case 2:\n                  return c ? function (d) {\n                    return C[d >> 2];\n                  } : function (d) {\n                    return D[d >> 2];\n                  };\n\n                default:\n                  throw new TypeError(\"Unknown integer type: \" + a);\n              }\n            }\n\n            var jc = {};\n\n            function kc(a) {\n              var b = jc[a];\n              return void 0 === b ? O(a) : b;\n            }\n\n            var lc = [];\n\n            function mc(a) {\n              var b = lc.length;\n              lc.push(a);\n              return b;\n            }\n\n            function nc(a, b) {\n              for (var c = Array(a), d = 0; d < a; ++d) c[d] = gc(C[(b >> 2) + d], \"parameter \" + d);\n\n              return c;\n            }\n\n            var oc = [],\n                pc;\n            pc = na ? function () {\n              var a = process.hrtime();\n              return 1E3 * a[0] + a[1] / 1E6;\n            } : function () {\n              return performance.now();\n            };\n\n            function qc(a) {\n              var b = a.getExtension(\"ANGLE_instanced_arrays\");\n              b && (a.vertexAttribDivisor = function (c, d) {\n                b.vertexAttribDivisorANGLE(c, d);\n              }, a.drawArraysInstanced = function (c, d, e, f) {\n                b.drawArraysInstancedANGLE(c, d, e, f);\n              }, a.drawElementsInstanced = function (c, d, e, f, g) {\n                b.drawElementsInstancedANGLE(c, d, e, f, g);\n              });\n            }\n\n            function rc(a) {\n              var b = a.getExtension(\"OES_vertex_array_object\");\n              b && (a.createVertexArray = function () {\n                return b.createVertexArrayOES();\n              }, a.deleteVertexArray = function (c) {\n                b.deleteVertexArrayOES(c);\n              }, a.bindVertexArray = function (c) {\n                b.bindVertexArrayOES(c);\n              }, a.isVertexArray = function (c) {\n                return b.isVertexArrayOES(c);\n              });\n            }\n\n            function sc(a) {\n              var b = a.getExtension(\"WEBGL_draw_buffers\");\n              b && (a.drawBuffers = function (c, d) {\n                b.drawBuffersWEBGL(c, d);\n              });\n            }\n\n            var tc = 1,\n                uc = [],\n                S = [],\n                vc = [],\n                wc = [],\n                xc = [],\n                T = [],\n                yc = [],\n                fa = [],\n                zc = [],\n                Ac = [],\n                Bc = {},\n                Cc = {},\n                Dc = 4;\n\n            function U(a) {\n              Ec || (Ec = a);\n            }\n\n            function ea(a) {\n              for (var b = tc++, c = a.length; c < b; c++) a[c] = null;\n\n              return b;\n            }\n\n            function ha(a) {\n              a || (a = l);\n\n              if (!a.Be) {\n                a.Be = !0;\n                var b = a.Td;\n                qc(b);\n                rc(b);\n                sc(b);\n                b.de = b.getExtension(\"WEBGL_draw_instanced_base_vertex_base_instance\");\n                b.ge = b.getExtension(\"WEBGL_multi_draw_instanced_base_vertex_base_instance\");\n                2 <= a.version && (b.ee = b.getExtension(\"EXT_disjoint_timer_query_webgl2\"));\n                if (2 > a.version || !b.ee) b.ee = b.getExtension(\"EXT_disjoint_timer_query\");\n                b.Se = b.getExtension(\"WEBGL_multi_draw\");\n                (b.getSupportedExtensions() || []).forEach(function (c) {\n                  c.includes(\"lose_context\") || c.includes(\"debug\") || b.getExtension(c);\n                });\n              }\n            }\n\n            var Ec,\n                l,\n                Fc = [];\n\n            function Gc(a, b, c, d) {\n              for (var e = 0; e < a; e++) {\n                var f = q[c](),\n                    g = f && ea(d);\n                f ? (f.name = g, d[g] = f) : U(1282);\n                C[b + 4 * e >> 2] = g;\n              }\n            }\n\n            function Hc(a, b) {\n              if (b) {\n                var c = void 0;\n\n                switch (a) {\n                  case 36346:\n                    c = 1;\n                    break;\n\n                  case 36344:\n                    return;\n\n                  case 34814:\n                  case 36345:\n                    c = 0;\n                    break;\n\n                  case 34466:\n                    var d = q.getParameter(34467);\n                    c = d ? d.length : 0;\n                    break;\n\n                  case 33309:\n                    if (2 > l.version) {\n                      U(1282);\n                      return;\n                    }\n\n                    c = 2 * (q.getSupportedExtensions() || []).length;\n                    break;\n\n                  case 33307:\n                  case 33308:\n                    if (2 > l.version) {\n                      U(1280);\n                      return;\n                    }\n\n                    c = 33307 == a ? 3 : 0;\n                }\n\n                if (void 0 === c) switch (d = q.getParameter(a), typeof d) {\n                  case \"number\":\n                    c = d;\n                    break;\n\n                  case \"boolean\":\n                    c = d ? 1 : 0;\n                    break;\n\n                  case \"string\":\n                    U(1280);\n                    return;\n\n                  case \"object\":\n                    if (null === d) switch (a) {\n                      case 34964:\n                      case 35725:\n                      case 34965:\n                      case 36006:\n                      case 36007:\n                      case 32873:\n                      case 34229:\n                      case 36662:\n                      case 36663:\n                      case 35053:\n                      case 35055:\n                      case 36010:\n                      case 35097:\n                      case 35869:\n                      case 32874:\n                      case 36389:\n                      case 35983:\n                      case 35368:\n                      case 34068:\n                        c = 0;\n                        break;\n\n                      default:\n                        U(1280);\n                        return;\n                    } else {\n                      if (d instanceof Float32Array || d instanceof Uint32Array || d instanceof Int32Array || d instanceof Array) {\n                        for (a = 0; a < d.length; ++a) C[b + 4 * a >> 2] = d[a];\n\n                        return;\n                      }\n\n                      try {\n                        c = d.name | 0;\n                      } catch (e) {\n                        U(1280);\n                        va(\"GL_INVALID_ENUM in glGet0v: Unknown object returned from WebGL getParameter(\" + a + \")! (error: \" + e + \")\");\n                        return;\n                      }\n                    }\n                    break;\n\n                  default:\n                    U(1280);\n                    va(\"GL_INVALID_ENUM in glGet0v: Native code calling glGet0v(\" + a + \") and it returns \" + d + \" of type \" + typeof d + \"!\");\n                    return;\n                }\n                C[b >> 2] = c;\n              } else U(1281);\n            }\n\n            function Ic(a) {\n              var b = Ea(a) + 1,\n                  c = Jc(b);\n              Da(a, z, c, b);\n              return c;\n            }\n\n            function Kc(a) {\n              return \"]\" == a.slice(-1) && a.lastIndexOf(\"[\");\n            }\n\n            function Lc(a) {\n              a -= 5120;\n              return 0 == a ? Pa : 1 == a ? z : 2 == a ? Ia : 4 == a ? C : 6 == a ? G : 5 == a || 28922 == a || 28520 == a || 30779 == a || 30782 == a ? D : Ha;\n            }\n\n            function Mc(a, b, c, d, e) {\n              a = Lc(a);\n              var f = 31 - Math.clz32(a.BYTES_PER_ELEMENT),\n                  g = Dc;\n              return a.subarray(e >> f, e + d * (c * ({\n                5: 3,\n                6: 4,\n                8: 2,\n                29502: 3,\n                29504: 4,\n                26917: 2,\n                26918: 2,\n                29846: 3,\n                29847: 4\n              }[b - 6402] || 1) * (1 << f) + g - 1 & -g) >> f);\n            }\n\n            function V(a) {\n              var b = q.re;\n\n              if (b) {\n                var c = b.Gd[a];\n                \"number\" === typeof c && (b.Gd[a] = c = q.getUniformLocation(b, b.ie[a] + (0 < c ? \"[\" + c + \"]\" : \"\")));\n                return c;\n              }\n\n              U(1282);\n            }\n\n            var Nc = [],\n                Oc = [],\n                Pc = {};\n\n            function Qc() {\n              if (!Rc) {\n                var a = {\n                  USER: \"web_user\",\n                  LOGNAME: \"web_user\",\n                  PATH: \"/\",\n                  PWD: \"/\",\n                  HOME: \"/home/web_user\",\n                  LANG: (\"object\" === typeof navigator && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\",\n                  _: ka || \"./this.program\"\n                },\n                    b;\n\n                for (b in Pc) void 0 === Pc[b] ? delete a[b] : a[b] = Pc[b];\n\n                var c = [];\n\n                for (b in a) c.push(b + \"=\" + a[b]);\n\n                Rc = c;\n              }\n\n              return Rc;\n            }\n\n            var Rc,\n                Sc = [null, [], []];\n\n            function Tc(a) {\n              return 0 === a % 4 && (0 !== a % 100 || 0 === a % 400);\n            }\n\n            function Uc(a, b) {\n              for (var c = 0, d = 0; d <= b; c += a[d++]);\n\n              return c;\n            }\n\n            var Vc = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n                Wc = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n            function Xc(a, b) {\n              for (a = new Date(a.getTime()); 0 < b;) {\n                var c = a.getMonth(),\n                    d = (Tc(a.getFullYear()) ? Vc : Wc)[c];\n                if (b > d - a.getDate()) b -= d - a.getDate() + 1, a.setDate(1), 11 > c ? a.setMonth(c + 1) : (a.setMonth(0), a.setFullYear(a.getFullYear() + 1));else {\n                  a.setDate(a.getDate() + b);\n                  break;\n                }\n              }\n\n              return a;\n            }\n\n            function Yc(a, b, c, d) {\n              function e(m, u, B) {\n                for (m = \"number\" === typeof m ? m.toString() : m || \"\"; m.length < u;) m = B[0] + m;\n\n                return m;\n              }\n\n              function f(m, u) {\n                return e(m, u, \"0\");\n              }\n\n              function g(m, u) {\n                function B(v) {\n                  return 0 > v ? -1 : 0 < v ? 1 : 0;\n                }\n\n                var t;\n                0 === (t = B(m.getFullYear() - u.getFullYear())) && 0 === (t = B(m.getMonth() - u.getMonth())) && (t = B(m.getDate() - u.getDate()));\n                return t;\n              }\n\n              function h(m) {\n                switch (m.getDay()) {\n                  case 0:\n                    return new Date(m.getFullYear() - 1, 11, 29);\n\n                  case 1:\n                    return m;\n\n                  case 2:\n                    return new Date(m.getFullYear(), 0, 3);\n\n                  case 3:\n                    return new Date(m.getFullYear(), 0, 2);\n\n                  case 4:\n                    return new Date(m.getFullYear(), 0, 1);\n\n                  case 5:\n                    return new Date(m.getFullYear() - 1, 11, 31);\n\n                  case 6:\n                    return new Date(m.getFullYear() - 1, 11, 30);\n                }\n              }\n\n              function n(m) {\n                m = Xc(new Date(m.pd + 1900, 0, 1), m.Sd);\n                var u = new Date(m.getFullYear() + 1, 0, 4),\n                    B = h(new Date(m.getFullYear(), 0, 4));\n                u = h(u);\n                return 0 >= g(B, m) ? 0 >= g(u, m) ? m.getFullYear() + 1 : m.getFullYear() : m.getFullYear() - 1;\n              }\n\n              var p = C[d + 40 >> 2];\n              d = {\n                Me: C[d >> 2],\n                Le: C[d + 4 >> 2],\n                Qd: C[d + 8 >> 2],\n                Fd: C[d + 12 >> 2],\n                Cd: C[d + 16 >> 2],\n                pd: C[d + 20 >> 2],\n                Rd: C[d + 24 >> 2],\n                Sd: C[d + 28 >> 2],\n                Ue: C[d + 32 >> 2],\n                Ke: C[d + 36 >> 2],\n                Ne: p ? Ca(p) : \"\"\n              };\n              c = Ca(c);\n              p = {\n                \"%c\": \"%a %b %d %H:%M:%S %Y\",\n                \"%D\": \"%m/%d/%y\",\n                \"%F\": \"%Y-%m-%d\",\n                \"%h\": \"%b\",\n                \"%r\": \"%I:%M:%S %p\",\n                \"%R\": \"%H:%M\",\n                \"%T\": \"%H:%M:%S\",\n                \"%x\": \"%m/%d/%y\",\n                \"%X\": \"%H:%M:%S\",\n                \"%Ec\": \"%c\",\n                \"%EC\": \"%C\",\n                \"%Ex\": \"%m/%d/%y\",\n                \"%EX\": \"%H:%M:%S\",\n                \"%Ey\": \"%y\",\n                \"%EY\": \"%Y\",\n                \"%Od\": \"%d\",\n                \"%Oe\": \"%e\",\n                \"%OH\": \"%H\",\n                \"%OI\": \"%I\",\n                \"%Om\": \"%m\",\n                \"%OM\": \"%M\",\n                \"%OS\": \"%S\",\n                \"%Ou\": \"%u\",\n                \"%OU\": \"%U\",\n                \"%OV\": \"%V\",\n                \"%Ow\": \"%w\",\n                \"%OW\": \"%W\",\n                \"%Oy\": \"%y\"\n              };\n\n              for (var r in p) c = c.replace(new RegExp(r, \"g\"), p[r]);\n\n              var x = \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\n                  A = \"January February March April May June July August September October November December\".split(\" \");\n              p = {\n                \"%a\": function (m) {\n                  return x[m.Rd].substring(0, 3);\n                },\n                \"%A\": function (m) {\n                  return x[m.Rd];\n                },\n                \"%b\": function (m) {\n                  return A[m.Cd].substring(0, 3);\n                },\n                \"%B\": function (m) {\n                  return A[m.Cd];\n                },\n                \"%C\": function (m) {\n                  return f((m.pd + 1900) / 100 | 0, 2);\n                },\n                \"%d\": function (m) {\n                  return f(m.Fd, 2);\n                },\n                \"%e\": function (m) {\n                  return e(m.Fd, 2, \" \");\n                },\n                \"%g\": function (m) {\n                  return n(m).toString().substring(2);\n                },\n                \"%G\": function (m) {\n                  return n(m);\n                },\n                \"%H\": function (m) {\n                  return f(m.Qd, 2);\n                },\n                \"%I\": function (m) {\n                  m = m.Qd;\n                  0 == m ? m = 12 : 12 < m && (m -= 12);\n                  return f(m, 2);\n                },\n                \"%j\": function (m) {\n                  return f(m.Fd + Uc(Tc(m.pd + 1900) ? Vc : Wc, m.Cd - 1), 3);\n                },\n                \"%m\": function (m) {\n                  return f(m.Cd + 1, 2);\n                },\n                \"%M\": function (m) {\n                  return f(m.Le, 2);\n                },\n                \"%n\": function () {\n                  return \"\\n\";\n                },\n                \"%p\": function (m) {\n                  return 0 <= m.Qd && 12 > m.Qd ? \"AM\" : \"PM\";\n                },\n                \"%S\": function (m) {\n                  return f(m.Me, 2);\n                },\n                \"%t\": function () {\n                  return \"\\t\";\n                },\n                \"%u\": function (m) {\n                  return m.Rd || 7;\n                },\n                \"%U\": function (m) {\n                  var u = new Date(m.pd + 1900, 0, 1),\n                      B = 0 === u.getDay() ? u : Xc(u, 7 - u.getDay());\n                  m = new Date(m.pd + 1900, m.Cd, m.Fd);\n                  return 0 > g(B, m) ? f(Math.ceil((31 - B.getDate() + (Uc(Tc(m.getFullYear()) ? Vc : Wc, m.getMonth() - 1) - 31) + m.getDate()) / 7), 2) : 0 === g(B, u) ? \"01\" : \"00\";\n                },\n                \"%V\": function (m) {\n                  var u = new Date(m.pd + 1901, 0, 4),\n                      B = h(new Date(m.pd + 1900, 0, 4));\n                  u = h(u);\n                  var t = Xc(new Date(m.pd + 1900, 0, 1), m.Sd);\n                  return 0 > g(t, B) ? \"53\" : 0 >= g(u, t) ? \"01\" : f(Math.ceil((B.getFullYear() < m.pd + 1900 ? m.Sd + 32 - B.getDate() : m.Sd + 1 - B.getDate()) / 7), 2);\n                },\n                \"%w\": function (m) {\n                  return m.Rd;\n                },\n                \"%W\": function (m) {\n                  var u = new Date(m.pd, 0, 1),\n                      B = 1 === u.getDay() ? u : Xc(u, 0 === u.getDay() ? 1 : 7 - u.getDay() + 1);\n                  m = new Date(m.pd + 1900, m.Cd, m.Fd);\n                  return 0 > g(B, m) ? f(Math.ceil((31 - B.getDate() + (Uc(Tc(m.getFullYear()) ? Vc : Wc, m.getMonth() - 1) - 31) + m.getDate()) / 7), 2) : 0 === g(B, u) ? \"01\" : \"00\";\n                },\n                \"%y\": function (m) {\n                  return (m.pd + 1900).toString().substring(2);\n                },\n                \"%Y\": function (m) {\n                  return m.pd + 1900;\n                },\n                \"%z\": function (m) {\n                  m = m.Ke;\n                  var u = 0 <= m;\n                  m = Math.abs(m) / 60;\n                  return (u ? \"+\" : \"-\") + String(\"0000\" + (m / 60 * 100 + m % 60)).slice(-4);\n                },\n                \"%Z\": function (m) {\n                  return m.Ne;\n                },\n                \"%%\": function () {\n                  return \"%\";\n                }\n              };\n\n              for (r in p) c.includes(r) && (c = c.replace(new RegExp(r, \"g\"), p[r](d)));\n\n              r = Zc(c);\n              if (r.length > b) return 0;\n              Pa.set(r, a);\n              return r.length - 1;\n            }\n\n            nb = k.InternalError = mb(\"InternalError\");\n\n            for (var $c = Array(256), ad = 0; 256 > ad; ++ad) $c[ad] = String.fromCharCode(ad);\n\n            sb = $c;\n            tb = k.BindingError = mb(\"BindingError\");\n\n            Cb.prototype.isAliasOf = function (a) {\n              if (!(this instanceof Cb && a instanceof Cb)) return !1;\n              var b = this.jd.md.kd,\n                  c = this.jd.ld,\n                  d = a.jd.md.kd;\n\n              for (a = a.jd.ld; b.ud;) c = b.Hd(c), b = b.ud;\n\n              for (; d.ud;) a = d.Hd(a), d = d.ud;\n\n              return b === d && c === a;\n            };\n\n            Cb.prototype.clone = function () {\n              this.jd.ld || ub(this);\n              if (this.jd.Ed) return this.jd.count.value += 1, this;\n              var a = yb,\n                  b = Object,\n                  c = b.create,\n                  d = Object.getPrototypeOf(this),\n                  e = this.jd;\n              a = a(c.call(b, d, {\n                jd: {\n                  value: {\n                    count: e.count,\n                    Bd: e.Bd,\n                    Ed: e.Ed,\n                    ld: e.ld,\n                    md: e.md,\n                    qd: e.qd,\n                    sd: e.sd\n                  }\n                }\n              }));\n              a.jd.count.value += 1;\n              a.jd.Bd = !1;\n              return a;\n            };\n\n            Cb.prototype[\"delete\"] = function () {\n              this.jd.ld || ub(this);\n              this.jd.Bd && !this.jd.Ed && P(\"Object already scheduled for deletion\");\n              wb(this);\n              xb(this.jd);\n              this.jd.Ed || (this.jd.qd = void 0, this.jd.ld = void 0);\n            };\n\n            Cb.prototype.isDeleted = function () {\n              return !this.jd.ld;\n            };\n\n            Cb.prototype.deleteLater = function () {\n              this.jd.ld || ub(this);\n              this.jd.Bd && !this.jd.Ed && P(\"Object already scheduled for deletion\");\n              Ab.push(this);\n              1 === Ab.length && zb && zb(Bb);\n              this.jd.Bd = !0;\n              return this;\n            };\n\n            Rb.prototype.we = function (a) {\n              this.he && (a = this.he(a));\n              return a;\n            };\n\n            Rb.prototype.ce = function (a) {\n              this.vd && this.vd(a);\n            };\n\n            Rb.prototype.argPackAdvance = 8;\n            Rb.prototype.readValueFromPointer = gb;\n\n            Rb.prototype.deleteObject = function (a) {\n              if (null !== a) a[\"delete\"]();\n            };\n\n            Rb.prototype.fromWireType = function (a) {\n              function b() {\n                return this.Md ? Qb(this.kd.wd, {\n                  md: this.De,\n                  ld: c,\n                  sd: this,\n                  qd: a\n                }) : Qb(this.kd.wd, {\n                  md: this,\n                  ld: a\n                });\n              }\n\n              var c = this.we(a);\n              if (!c) return this.ce(a), null;\n              var d = Pb(this.kd, c);\n\n              if (void 0 !== d) {\n                if (0 === d.jd.count.value) return d.jd.ld = c, d.jd.qd = a, d.clone();\n                d = d.clone();\n                this.ce(a);\n                return d;\n              }\n\n              d = this.kd.ve(c);\n              d = Db[d];\n              if (!d) return b.call(this);\n              d = this.Ld ? d.pe : d.pointerType;\n              var e = Nb(c, this.kd, d.kd);\n              return null === e ? b.call(this) : this.Md ? Qb(d.kd.wd, {\n                md: d,\n                ld: e,\n                sd: this,\n                qd: a\n              }) : Qb(d.kd.wd, {\n                md: d,\n                ld: e\n              });\n            };\n\n            k.getInheritedInstanceCount = function () {\n              return Object.keys(Ob).length;\n            };\n\n            k.getLiveInheritedInstances = function () {\n              var a = [],\n                  b;\n\n              for (b in Ob) Ob.hasOwnProperty(b) && a.push(Ob[b]);\n\n              return a;\n            };\n\n            k.flushPendingDeletes = Bb;\n\n            k.setDelayFunction = function (a) {\n              zb = a;\n              Ab.length && zb && zb(Bb);\n            };\n\n            Ub = k.UnboundTypeError = mb(\"UnboundTypeError\");\n\n            k.count_emval_handles = function () {\n              for (var a = 0, b = 5; b < R.length; ++b) void 0 !== R[b] && ++a;\n\n              return a;\n            };\n\n            k.get_first_emval = function () {\n              for (var a = 5; a < R.length; ++a) if (void 0 !== R[a]) return R[a];\n\n              return null;\n            };\n\n            for (var q, W = 0; 32 > W; ++W) Fc.push(Array(W));\n\n            var bd = new Float32Array(288);\n\n            for (W = 0; 288 > W; ++W) Nc[W] = bd.subarray(0, W + 1);\n\n            var cd = new Int32Array(288);\n\n            for (W = 0; 288 > W; ++W) Oc[W] = cd.subarray(0, W + 1);\n\n            function Zc(a) {\n              var b = Array(Ea(a) + 1);\n              Da(a, b, 0, b.length);\n              return b;\n            }\n\n            var td = {\n              bb: function (a) {\n                var b = eb[a];\n                delete eb[a];\n                var c = b.Yd,\n                    d = b.vd,\n                    e = b.fe,\n                    f = e.map(function (g) {\n                  return g.ze;\n                }).concat(e.map(function (g) {\n                  return g.He;\n                }));\n                M([a], f, function (g) {\n                  var h = {};\n                  e.forEach(function (n, p) {\n                    var r = g[p],\n                        x = n.xe,\n                        A = n.ye,\n                        m = g[p + e.length],\n                        u = n.Ge,\n                        B = n.Ie;\n                    h[n.ue] = {\n                      read: function (t) {\n                        return r.fromWireType(x(A, t));\n                      },\n                      write: function (t, v) {\n                        var y = [];\n                        u(B, t, m.toWireType(y, v));\n                        fb(y);\n                      }\n                    };\n                  });\n                  return [{\n                    name: b.name,\n                    fromWireType: function (n) {\n                      var p = {},\n                          r;\n\n                      for (r in h) p[r] = h[r].read(n);\n\n                      d(n);\n                      return p;\n                    },\n                    toWireType: function (n, p) {\n                      for (var r in h) if (!(r in p)) throw new TypeError('Missing field:  \"' + r + '\"');\n\n                      var x = c();\n\n                      for (r in h) h[r].write(x, p[r]);\n\n                      null !== n && n.push(d, x);\n                      return x;\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: gb,\n                    rd: d\n                  }];\n                });\n              },\n              fb: function () {},\n              vb: function (a, b, c, d, e) {\n                var f = rb(c);\n                b = O(b);\n                pb(a, {\n                  name: b,\n                  fromWireType: function (g) {\n                    return !!g;\n                  },\n                  toWireType: function (g, h) {\n                    return h ? d : e;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: function (g) {\n                    if (1 === c) var h = Pa;else if (2 === c) h = Ia;else if (4 === c) h = C;else throw new TypeError(\"Unknown boolean type size: \" + b);\n                    return this.fromWireType(h[g >> f]);\n                  },\n                  rd: null\n                });\n              },\n              g: function (a, b, c, d, e, f, g, h, n, p, r, x, A) {\n                r = O(r);\n                f = Q(e, f);\n                h && (h = Q(g, h));\n                p && (p = Q(n, p));\n                A = Q(x, A);\n                var m = kb(r);\n                Fb(m, function () {\n                  Yb(\"Cannot construct \" + r + \" due to unbound types\", [d]);\n                });\n                M([a, b, c], d ? [d] : [], function (u) {\n                  u = u[0];\n\n                  if (d) {\n                    var B = u.kd;\n                    var t = B.wd;\n                  } else t = Cb.prototype;\n\n                  u = lb(m, function () {\n                    if (Object.getPrototypeOf(this) !== v) throw new tb(\"Use 'new' to construct \" + r);\n                    if (void 0 === y.xd) throw new tb(r + \" has no accessible constructor\");\n                    var L = y.xd[arguments.length];\n                    if (void 0 === L) throw new tb(\"Tried to invoke ctor of \" + r + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(y.xd).toString() + \") parameters instead!\");\n                    return L.apply(this, arguments);\n                  });\n                  var v = Object.create(t, {\n                    constructor: {\n                      value: u\n                    }\n                  });\n                  u.prototype = v;\n                  var y = new Gb(r, u, v, A, B, f, h, p);\n                  B = new Rb(r, y, !0, !1);\n                  t = new Rb(r + \"*\", y, !1, !1);\n                  var E = new Rb(r + \" const*\", y, !1, !0);\n                  Db[a] = {\n                    pointerType: t,\n                    pe: E\n                  };\n                  Sb(m, u);\n                  return [B, t, E];\n                });\n              },\n              k: function (a, b, c, d, e, f, g, h) {\n                b = O(b);\n                f = Q(e, f);\n                M([], [a], function (n) {\n                  n = n[0];\n                  var p = n.name + \".\" + b,\n                      r = {\n                    get: function () {\n                      Yb(\"Cannot access \" + p + \" due to unbound types\", [c]);\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                  };\n                  r.set = h ? function () {\n                    Yb(\"Cannot access \" + p + \" due to unbound types\", [c]);\n                  } : function () {\n                    P(p + \" is a read-only property\");\n                  };\n                  Object.defineProperty(n.kd.constructor, b, r);\n                  M([], [c], function (x) {\n                    x = x[0];\n                    var A = {\n                      get: function () {\n                        return x.fromWireType(f(d));\n                      },\n                      enumerable: !0\n                    };\n                    h && (h = Q(g, h), A.set = function (m) {\n                      var u = [];\n                      h(d, x.toWireType(u, m));\n                      fb(u);\n                    });\n                    Object.defineProperty(n.kd.constructor, b, A);\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              s: function (a, b, c, d, e, f) {\n                0 < b || ta(\"Assertion failed: undefined\");\n                var g = $b(b, c);\n                e = Q(d, e);\n                M([], [a], function (h) {\n                  h = h[0];\n                  var n = \"constructor \" + h.name;\n                  void 0 === h.kd.xd && (h.kd.xd = []);\n                  if (void 0 !== h.kd.xd[b - 1]) throw new tb(\"Cannot register multiple constructors with identical number of parameters (\" + (b - 1) + \") for class '\" + h.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n\n                  h.kd.xd[b - 1] = function () {\n                    Yb(\"Cannot construct \" + h.name + \" due to unbound types\", g);\n                  };\n\n                  M([], g, function (p) {\n                    p.splice(1, 0, null);\n                    h.kd.xd[b - 1] = bc(n, p, null, e, f);\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              e: function (a, b, c, d, e, f, g, h) {\n                var n = $b(c, d);\n                b = O(b);\n                f = Q(e, f);\n                M([], [a], function (p) {\n                  function r() {\n                    Yb(\"Cannot call \" + x + \" due to unbound types\", n);\n                  }\n\n                  p = p[0];\n                  var x = p.name + \".\" + b;\n                  b.startsWith(\"@@\") && (b = Symbol[b.substring(2)]);\n                  h && p.kd.Ee.push(b);\n                  var A = p.kd.wd,\n                      m = A[b];\n                  void 0 === m || void 0 === m.nd && m.className !== p.name && m.Kd === c - 2 ? (r.Kd = c - 2, r.className = p.name, A[b] = r) : (Eb(A, b, x), A[b].nd[c - 2] = r);\n                  M([], n, function (u) {\n                    u = bc(x, u, p, f, g);\n                    void 0 === A[b].nd ? (u.Kd = c - 2, A[b] = u) : A[b].nd[c - 2] = u;\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              f: function (a, b, c, d, e, f, g, h, n, p) {\n                b = O(b);\n                e = Q(d, e);\n                M([], [a], function (r) {\n                  r = r[0];\n                  var x = r.name + \".\" + b,\n                      A = {\n                    get: function () {\n                      Yb(\"Cannot access \" + x + \" due to unbound types\", [c, g]);\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                  };\n                  A.set = n ? function () {\n                    Yb(\"Cannot access \" + x + \" due to unbound types\", [c, g]);\n                  } : function () {\n                    P(x + \" is a read-only property\");\n                  };\n                  Object.defineProperty(r.kd.wd, b, A);\n                  M([], n ? [c, g] : [c], function (m) {\n                    var u = m[0],\n                        B = {\n                      get: function () {\n                        var v = Zb(this, r, x + \" getter\");\n                        return u.fromWireType(e(f, v));\n                      },\n                      enumerable: !0\n                    };\n\n                    if (n) {\n                      n = Q(h, n);\n                      var t = m[1];\n\n                      B.set = function (v) {\n                        var y = Zb(this, r, x + \" setter\"),\n                            E = [];\n                        n(p, y, t.toWireType(E, v));\n                        fb(E);\n                      };\n                    }\n\n                    Object.defineProperty(r.kd.wd, b, B);\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              ub: function (a, b) {\n                b = O(b);\n                pb(a, {\n                  name: b,\n                  fromWireType: function (c) {\n                    var d = ec(c);\n                    dc(c);\n                    return d;\n                  },\n                  toWireType: function (c, d) {\n                    return Lb(d);\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: gb,\n                  rd: null\n                });\n              },\n              mb: function (a, b, c, d) {\n                function e() {}\n\n                c = rb(c);\n                b = O(b);\n                e.values = {};\n                pb(a, {\n                  name: b,\n                  constructor: e,\n                  fromWireType: function (f) {\n                    return this.constructor.values[f];\n                  },\n                  toWireType: function (f, g) {\n                    return g.value;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: fc(b, c, d),\n                  rd: null\n                });\n                Fb(b, e);\n              },\n              jb: function (a, b, c) {\n                var d = gc(a, \"enum\");\n                b = O(b);\n                a = d.constructor;\n                d = Object.create(d.constructor.prototype, {\n                  value: {\n                    value: c\n                  },\n                  constructor: {\n                    value: lb(d.name + \"_\" + b, function () {})\n                  }\n                });\n                a.values[c] = d;\n                a[b] = d;\n              },\n              x: function (a, b, c) {\n                c = rb(c);\n                b = O(b);\n                pb(a, {\n                  name: b,\n                  fromWireType: function (d) {\n                    return d;\n                  },\n                  toWireType: function (d, e) {\n                    return e;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: hc(b, c),\n                  rd: null\n                });\n              },\n              z: function (a, b, c, d, e, f) {\n                var g = $b(b, c);\n                a = O(a);\n                e = Q(d, e);\n                Fb(a, function () {\n                  Yb(\"Cannot call \" + a + \" due to unbound types\", g);\n                }, b - 1);\n                M([], g, function (h) {\n                  h = [h[0], null].concat(h.slice(1));\n                  Sb(a, bc(a, h, null, e, f), b - 1);\n                  return [];\n                });\n              },\n              m: function (a, b, c, d, e) {\n                function f(p) {\n                  return p;\n                }\n\n                b = O(b);\n                -1 === e && (e = 4294967295);\n                var g = rb(c);\n\n                if (0 === d) {\n                  var h = 32 - 8 * c;\n\n                  f = function (p) {\n                    return p << h >>> h;\n                  };\n                }\n\n                var n = b.includes(\"unsigned\");\n                pb(a, {\n                  name: b,\n                  fromWireType: f,\n                  toWireType: function (p, r) {\n                    if (\"number\" !== typeof r && \"boolean\" !== typeof r) throw new TypeError('Cannot convert \"' + Jb(r) + '\" to ' + this.name);\n                    if (r < d || r > e) throw new TypeError('Passing a number \"' + Jb(r) + '\" from JS side to C/C++ side to an argument of type \"' + b + '\", which is outside the valid range [' + d + \", \" + e + \"]!\");\n                    return n ? r >>> 0 : r | 0;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: ic(b, g, 0 !== d),\n                  rd: null\n                });\n              },\n              l: function (a, b, c) {\n                function d(f) {\n                  f >>= 2;\n                  var g = D;\n                  return new e(Oa, g[f + 1], g[f]);\n                }\n\n                var e = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][b];\n                c = O(c);\n                pb(a, {\n                  name: c,\n                  fromWireType: d,\n                  argPackAdvance: 8,\n                  readValueFromPointer: d\n                }, {\n                  Ae: !0\n                });\n              },\n              y: function (a, b) {\n                b = O(b);\n                var c = \"std::string\" === b;\n                pb(a, {\n                  name: b,\n                  fromWireType: function (d) {\n                    var e = D[d >> 2];\n                    if (c) for (var f = d + 4, g = 0; g <= e; ++g) {\n                      var h = d + 4 + g;\n\n                      if (g == e || 0 == z[h]) {\n                        f = Ca(f, h - f);\n                        if (void 0 === n) var n = f;else n += String.fromCharCode(0), n += f;\n                        f = h + 1;\n                      }\n                    } else {\n                      n = Array(e);\n\n                      for (g = 0; g < e; ++g) n[g] = String.fromCharCode(z[d + 4 + g]);\n\n                      n = n.join(\"\");\n                    }\n                    Xb(d);\n                    return n;\n                  },\n                  toWireType: function (d, e) {\n                    e instanceof ArrayBuffer && (e = new Uint8Array(e));\n                    var f = \"string\" === typeof e;\n                    f || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Int8Array || P(\"Cannot pass non-string to std::string\");\n                    var g = (c && f ? function () {\n                      return Ea(e);\n                    } : function () {\n                      return e.length;\n                    })(),\n                        h = Jc(4 + g + 1);\n                    D[h >> 2] = g;\n                    if (c && f) Da(e, z, h + 4, g + 1);else if (f) for (f = 0; f < g; ++f) {\n                      var n = e.charCodeAt(f);\n                      255 < n && (Xb(h), P(\"String has UTF-16 code units that do not fit in 8 bits\"));\n                      z[h + 4 + f] = n;\n                    } else for (f = 0; f < g; ++f) z[h + 4 + f] = e[f];\n                    null !== d && d.push(Xb, h);\n                    return h;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: gb,\n                  rd: function (d) {\n                    Xb(d);\n                  }\n                });\n              },\n              v: function (a, b, c) {\n                c = O(c);\n\n                if (2 === b) {\n                  var d = Ga;\n                  var e = Ja;\n                  var f = Ka;\n\n                  var g = function () {\n                    return Ha;\n                  };\n\n                  var h = 1;\n                } else 4 === b && (d = La, e = Ma, f = Na, g = function () {\n                  return D;\n                }, h = 2);\n\n                pb(a, {\n                  name: c,\n                  fromWireType: function (n) {\n                    for (var p = D[n >> 2], r = g(), x, A = n + 4, m = 0; m <= p; ++m) {\n                      var u = n + 4 + m * b;\n                      if (m == p || 0 == r[u >> h]) A = d(A, u - A), void 0 === x ? x = A : (x += String.fromCharCode(0), x += A), A = u + b;\n                    }\n\n                    Xb(n);\n                    return x;\n                  },\n                  toWireType: function (n, p) {\n                    \"string\" !== typeof p && P(\"Cannot pass non-string to C++ string type \" + c);\n                    var r = f(p),\n                        x = Jc(4 + r + b);\n                    D[x >> 2] = r >> h;\n                    e(p, x + 4, r + b);\n                    null !== n && n.push(Xb, x);\n                    return x;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: gb,\n                  rd: function (n) {\n                    Xb(n);\n                  }\n                });\n              },\n              cb: function (a, b, c, d, e, f) {\n                eb[a] = {\n                  name: O(b),\n                  Yd: Q(c, d),\n                  vd: Q(e, f),\n                  fe: []\n                };\n              },\n              ab: function (a, b, c, d, e, f, g, h, n, p) {\n                eb[a].fe.push({\n                  ue: O(b),\n                  ze: c,\n                  xe: Q(d, e),\n                  ye: f,\n                  He: g,\n                  Ge: Q(h, n),\n                  Ie: p\n                });\n              },\n              wb: function (a, b) {\n                b = O(b);\n                pb(a, {\n                  Ce: !0,\n                  name: b,\n                  argPackAdvance: 0,\n                  fromWireType: function () {},\n                  toWireType: function () {}\n                });\n              },\n              nb: function () {\n                throw \"longjmp\";\n              },\n              pa: function (a, b, c) {\n                a = ec(a);\n                b = gc(b, \"emval::as\");\n                var d = [],\n                    e = Lb(d);\n                C[c >> 2] = e;\n                return b.toWireType(d, a);\n              },\n              K: function (a, b, c, d) {\n                a = lc[a];\n                b = ec(b);\n                c = kc(c);\n                a(b, c, null, d);\n              },\n              Gc: dc,\n              Fc: function (a, b) {\n                var c = nc(a, b),\n                    d = c[0];\n                b = d.name + \"_$\" + c.slice(1).map(function (r) {\n                  return r.name;\n                }).join(\"_\") + \"$\";\n                var e = oc[b];\n                if (void 0 !== e) return e;\n                e = [\"retType\"];\n\n                for (var f = [d], g = \"\", h = 0; h < a - 1; ++h) g += (0 !== h ? \", \" : \"\") + \"arg\" + h, e.push(\"argType\" + h), f.push(c[1 + h]);\n\n                var n = \"return function \" + kb(\"methodCaller_\" + b) + \"(handle, name, destructors, args) {\\n\",\n                    p = 0;\n\n                for (h = 0; h < a - 1; ++h) n += \"    var arg\" + h + \" = argType\" + h + \".readValueFromPointer(args\" + (p ? \"+\" + p : \"\") + \");\\n\", p += c[h + 1].argPackAdvance;\n\n                n += \"    var rv = handle[name](\" + g + \");\\n\";\n\n                for (h = 0; h < a - 1; ++h) c[h + 1].deleteObject && (n += \"    argType\" + h + \".deleteObject(arg\" + h + \");\\n\");\n\n                d.Ce || (n += \"    return retType.toWireType(destructors, rv);\\n\");\n                e.push(n + \"};\\n\");\n                a = ac(e).apply(null, f);\n                e = mc(a);\n                return oc[b] = e;\n              },\n              La: function (a, b) {\n                a = ec(a);\n                b = ec(b);\n                return Lb(a[b]);\n              },\n              uc: function (a) {\n                4 < a && (R[a].Zd += 1);\n              },\n              Aa: function (a) {\n                return Lb(kc(a));\n              },\n              ea: function (a) {\n                var b = ec(a);\n                fb(b);\n                dc(a);\n              },\n              V: function (a, b) {\n                a = gc(a, \"_emval_take_value\");\n                a = a.readValueFromPointer(b);\n                return Lb(a);\n              },\n              a: function () {\n                ta(\"\");\n              },\n              pb: function (a, b) {\n                if (0 === a) a = Date.now();else if (1 === a || 4 === a) a = pc();else return C[dd() >> 2] = 28, -1;\n                C[b >> 2] = a / 1E3 | 0;\n                C[b + 4 >> 2] = a % 1E3 * 1E6 | 0;\n                return 0;\n              },\n              Xa: function (a) {\n                q.activeTexture(a);\n              },\n              Wa: function (a, b) {\n                q.attachShader(S[a], T[b]);\n              },\n              Va: function (a, b, c) {\n                q.bindAttribLocation(S[a], b, Ca(c));\n              },\n              Ua: function (a, b) {\n                35051 == a ? q.Wd = b : 35052 == a && (q.Ad = b);\n                q.bindBuffer(a, uc[b]);\n              },\n              Wb: function (a, b) {\n                q.bindFramebuffer(a, vc[b]);\n              },\n              Vb: function (a, b) {\n                q.bindRenderbuffer(a, wc[b]);\n              },\n              Eb: function (a, b) {\n                q.bindSampler(a, zc[b]);\n              },\n              Ta: function (a, b) {\n                q.bindTexture(a, xc[b]);\n              },\n              mc: function (a) {\n                q.bindVertexArray(yc[a]);\n              },\n              jc: function (a) {\n                q.bindVertexArray(yc[a]);\n              },\n              Sa: function (a, b, c, d) {\n                q.blendColor(a, b, c, d);\n              },\n              Ra: function (a) {\n                q.blendEquation(a);\n              },\n              Qa: function (a, b) {\n                q.blendFunc(a, b);\n              },\n              Jb: function (a, b, c, d, e, f, g, h, n, p) {\n                q.blitFramebuffer(a, b, c, d, e, f, g, h, n, p);\n              },\n              Pa: function (a, b, c, d) {\n                2 <= l.version ? c ? q.bufferData(a, z, d, c, b) : q.bufferData(a, b, d) : q.bufferData(a, c ? z.subarray(c, c + b) : b, d);\n              },\n              Oa: function (a, b, c, d) {\n                2 <= l.version ? q.bufferSubData(a, b, z, d, c) : q.bufferSubData(a, b, z.subarray(d, d + c));\n              },\n              Ub: function (a) {\n                return q.checkFramebufferStatus(a);\n              },\n              Na: function (a) {\n                q.clear(a);\n              },\n              Ma: function (a, b, c, d) {\n                q.clearColor(a, b, c, d);\n              },\n              Ka: function (a) {\n                q.clearStencil(a);\n              },\n              _a: function (a, b, c, d) {\n                return q.clientWaitSync(Ac[a], b, (c >>> 0) + 4294967296 * d);\n              },\n              Ja: function (a, b, c, d) {\n                q.colorMask(!!a, !!b, !!c, !!d);\n              },\n              Ia: function (a) {\n                q.compileShader(T[a]);\n              },\n              Ha: function (a, b, c, d, e, f, g, h) {\n                2 <= l.version ? q.Ad ? q.compressedTexImage2D(a, b, c, d, e, f, g, h) : q.compressedTexImage2D(a, b, c, d, e, f, z, h, g) : q.compressedTexImage2D(a, b, c, d, e, f, h ? z.subarray(h, h + g) : null);\n              },\n              Ga: function (a, b, c, d, e, f, g, h, n) {\n                2 <= l.version ? q.Ad ? q.compressedTexSubImage2D(a, b, c, d, e, f, g, h, n) : q.compressedTexSubImage2D(a, b, c, d, e, f, g, z, n, h) : q.compressedTexSubImage2D(a, b, c, d, e, f, g, n ? z.subarray(n, n + h) : null);\n              },\n              Fa: function (a, b, c, d, e, f, g, h) {\n                q.copyTexSubImage2D(a, b, c, d, e, f, g, h);\n              },\n              Ea: function () {\n                var a = ea(S),\n                    b = q.createProgram();\n                b.name = a;\n                b.Pd = b.Nd = b.Od = 0;\n                b.$d = 1;\n                S[a] = b;\n                return a;\n              },\n              Da: function (a) {\n                var b = ea(T);\n                T[b] = q.createShader(a);\n                return b;\n              },\n              Ca: function (a) {\n                q.cullFace(a);\n              },\n              Ba: function (a, b) {\n                for (var c = 0; c < a; c++) {\n                  var d = C[b + 4 * c >> 2],\n                      e = uc[d];\n                  e && (q.deleteBuffer(e), e.name = 0, uc[d] = null, d == q.Wd && (q.Wd = 0), d == q.Ad && (q.Ad = 0));\n                }\n              },\n              Tb: function (a, b) {\n                for (var c = 0; c < a; ++c) {\n                  var d = C[b + 4 * c >> 2],\n                      e = vc[d];\n                  e && (q.deleteFramebuffer(e), e.name = 0, vc[d] = null);\n                }\n              },\n              za: function (a) {\n                if (a) {\n                  var b = S[a];\n                  b ? (q.deleteProgram(b), b.name = 0, S[a] = null) : U(1281);\n                }\n              },\n              Sb: function (a, b) {\n                for (var c = 0; c < a; c++) {\n                  var d = C[b + 4 * c >> 2],\n                      e = wc[d];\n                  e && (q.deleteRenderbuffer(e), e.name = 0, wc[d] = null);\n                }\n              },\n              Db: function (a, b) {\n                for (var c = 0; c < a; c++) {\n                  var d = C[b + 4 * c >> 2],\n                      e = zc[d];\n                  e && (q.deleteSampler(e), e.name = 0, zc[d] = null);\n                }\n              },\n              ya: function (a) {\n                if (a) {\n                  var b = T[a];\n                  b ? (q.deleteShader(b), T[a] = null) : U(1281);\n                }\n              },\n              Hb: function (a) {\n                if (a) {\n                  var b = Ac[a];\n                  b ? (q.deleteSync(b), b.name = 0, Ac[a] = null) : U(1281);\n                }\n              },\n              xa: function (a, b) {\n                for (var c = 0; c < a; c++) {\n                  var d = C[b + 4 * c >> 2],\n                      e = xc[d];\n                  e && (q.deleteTexture(e), e.name = 0, xc[d] = null);\n                }\n              },\n              lc: function (a, b) {\n                for (var c = 0; c < a; c++) {\n                  var d = C[b + 4 * c >> 2];\n                  q.deleteVertexArray(yc[d]);\n                  yc[d] = null;\n                }\n              },\n              ic: function (a, b) {\n                for (var c = 0; c < a; c++) {\n                  var d = C[b + 4 * c >> 2];\n                  q.deleteVertexArray(yc[d]);\n                  yc[d] = null;\n                }\n              },\n              wa: function (a) {\n                q.depthMask(!!a);\n              },\n              va: function (a) {\n                q.disable(a);\n              },\n              ua: function (a) {\n                q.disableVertexAttribArray(a);\n              },\n              ta: function (a, b, c) {\n                q.drawArrays(a, b, c);\n              },\n              gc: function (a, b, c, d) {\n                q.drawArraysInstanced(a, b, c, d);\n              },\n              ec: function (a, b, c, d, e) {\n                q.de.drawArraysInstancedBaseInstanceWEBGL(a, b, c, d, e);\n              },\n              cc: function (a, b) {\n                for (var c = Fc[a], d = 0; d < a; d++) c[d] = C[b + 4 * d >> 2];\n\n                q.drawBuffers(c);\n              },\n              sa: function (a, b, c, d) {\n                q.drawElements(a, b, c, d);\n              },\n              fc: function (a, b, c, d, e) {\n                q.drawElementsInstanced(a, b, c, d, e);\n              },\n              dc: function (a, b, c, d, e, f, g) {\n                q.de.drawElementsInstancedBaseVertexBaseInstanceWEBGL(a, b, c, d, e, f, g);\n              },\n              _b: function (a, b, c, d, e, f) {\n                q.drawElements(a, d, e, f);\n              },\n              ra: function (a) {\n                q.enable(a);\n              },\n              qa: function (a) {\n                q.enableVertexAttribArray(a);\n              },\n              Gb: function (a, b) {\n                return (a = q.fenceSync(a, b)) ? (b = ea(Ac), a.name = b, Ac[b] = a, b) : 0;\n              },\n              oa: function () {\n                q.finish();\n              },\n              na: function () {\n                q.flush();\n              },\n              Rb: function (a, b, c, d) {\n                q.framebufferRenderbuffer(a, b, c, wc[d]);\n              },\n              Qb: function (a, b, c, d, e) {\n                q.framebufferTexture2D(a, b, c, xc[d], e);\n              },\n              ma: function (a) {\n                q.frontFace(a);\n              },\n              la: function (a, b) {\n                Gc(a, b, \"createBuffer\", uc);\n              },\n              Pb: function (a, b) {\n                Gc(a, b, \"createFramebuffer\", vc);\n              },\n              Ob: function (a, b) {\n                Gc(a, b, \"createRenderbuffer\", wc);\n              },\n              Cb: function (a, b) {\n                Gc(a, b, \"createSampler\", zc);\n              },\n              ka: function (a, b) {\n                Gc(a, b, \"createTexture\", xc);\n              },\n              kc: function (a, b) {\n                Gc(a, b, \"createVertexArray\", yc);\n              },\n              hc: function (a, b) {\n                Gc(a, b, \"createVertexArray\", yc);\n              },\n              Nb: function (a) {\n                q.generateMipmap(a);\n              },\n              ja: function (a, b, c) {\n                c ? C[c >> 2] = q.getBufferParameter(a, b) : U(1281);\n              },\n              ia: function () {\n                var a = q.getError() || Ec;\n                Ec = 0;\n                return a;\n              },\n              Mb: function (a, b, c, d) {\n                a = q.getFramebufferAttachmentParameter(a, b, c);\n                if (a instanceof WebGLRenderbuffer || a instanceof WebGLTexture) a = a.name | 0;\n                C[d >> 2] = a;\n              },\n              Ya: function (a, b) {\n                Hc(a, b);\n              },\n              ha: function (a, b, c, d) {\n                a = q.getProgramInfoLog(S[a]);\n                null === a && (a = \"(unknown error)\");\n                b = 0 < b && d ? Da(a, z, d, b) : 0;\n                c && (C[c >> 2] = b);\n              },\n              ga: function (a, b, c) {\n                if (c) {\n                  if (a >= tc) U(1281);else if (a = S[a], 35716 == b) a = q.getProgramInfoLog(a), null === a && (a = \"(unknown error)\"), C[c >> 2] = a.length + 1;else if (35719 == b) {\n                    if (!a.Pd) for (b = 0; b < q.getProgramParameter(a, 35718); ++b) a.Pd = Math.max(a.Pd, q.getActiveUniform(a, b).name.length + 1);\n                    C[c >> 2] = a.Pd;\n                  } else if (35722 == b) {\n                    if (!a.Nd) for (b = 0; b < q.getProgramParameter(a, 35721); ++b) a.Nd = Math.max(a.Nd, q.getActiveAttrib(a, b).name.length + 1);\n                    C[c >> 2] = a.Nd;\n                  } else if (35381 == b) {\n                    if (!a.Od) for (b = 0; b < q.getProgramParameter(a, 35382); ++b) a.Od = Math.max(a.Od, q.getActiveUniformBlockName(a, b).length + 1);\n                    C[c >> 2] = a.Od;\n                  } else C[c >> 2] = q.getProgramParameter(a, b);\n                } else U(1281);\n              },\n              Lb: function (a, b, c) {\n                c ? C[c >> 2] = q.getRenderbufferParameter(a, b) : U(1281);\n              },\n              fa: function (a, b, c, d) {\n                a = q.getShaderInfoLog(T[a]);\n                null === a && (a = \"(unknown error)\");\n                b = 0 < b && d ? Da(a, z, d, b) : 0;\n                c && (C[c >> 2] = b);\n              },\n              xb: function (a, b, c, d) {\n                a = q.getShaderPrecisionFormat(a, b);\n                C[c >> 2] = a.rangeMin;\n                C[c + 4 >> 2] = a.rangeMax;\n                C[d >> 2] = a.precision;\n              },\n              da: function (a, b, c) {\n                c ? 35716 == b ? (a = q.getShaderInfoLog(T[a]), null === a && (a = \"(unknown error)\"), C[c >> 2] = a ? a.length + 1 : 0) : 35720 == b ? (a = q.getShaderSource(T[a]), C[c >> 2] = a ? a.length + 1 : 0) : C[c >> 2] = q.getShaderParameter(T[a], b) : U(1281);\n              },\n              t: function (a) {\n                var b = Bc[a];\n\n                if (!b) {\n                  switch (a) {\n                    case 7939:\n                      b = q.getSupportedExtensions() || [];\n                      b = b.concat(b.map(function (d) {\n                        return \"GL_\" + d;\n                      }));\n                      b = Ic(b.join(\" \"));\n                      break;\n\n                    case 7936:\n                    case 7937:\n                    case 37445:\n                    case 37446:\n                      (b = q.getParameter(a)) || U(1280);\n                      b = b && Ic(b);\n                      break;\n\n                    case 7938:\n                      b = q.getParameter(7938);\n                      b = 2 <= l.version ? \"OpenGL ES 3.0 (\" + b + \")\" : \"OpenGL ES 2.0 (\" + b + \")\";\n                      b = Ic(b);\n                      break;\n\n                    case 35724:\n                      b = q.getParameter(35724);\n                      var c = b.match(/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/);\n                      null !== c && (3 == c[1].length && (c[1] += \"0\"), b = \"OpenGL ES GLSL ES \" + c[1] + \" (\" + b + \")\");\n                      b = Ic(b);\n                      break;\n\n                    default:\n                      U(1280);\n                  }\n\n                  Bc[a] = b;\n                }\n\n                return b;\n              },\n              Za: function (a, b) {\n                if (2 > l.version) return U(1282), 0;\n                var c = Cc[a];\n                if (c) return 0 > b || b >= c.length ? (U(1281), 0) : c[b];\n\n                switch (a) {\n                  case 7939:\n                    return c = q.getSupportedExtensions() || [], c = c.concat(c.map(function (d) {\n                      return \"GL_\" + d;\n                    })), c = c.map(function (d) {\n                      return Ic(d);\n                    }), c = Cc[a] = c, 0 > b || b >= c.length ? (U(1281), 0) : c[b];\n\n                  default:\n                    return U(1280), 0;\n                }\n              },\n              ca: function (a, b) {\n                b = Ca(b);\n\n                if (a = S[a]) {\n                  var c = a,\n                      d = c.Gd,\n                      e = c.je,\n                      f;\n                  if (!d) for (c.Gd = d = {}, c.ie = {}, f = 0; f < q.getProgramParameter(c, 35718); ++f) {\n                    var g = q.getActiveUniform(c, f);\n                    var h = g.name;\n                    g = g.size;\n                    var n = Kc(h);\n                    n = 0 < n ? h.slice(0, n) : h;\n                    var p = c.$d;\n                    c.$d += g;\n                    e[n] = [g, p];\n\n                    for (h = 0; h < g; ++h) d[p] = h, c.ie[p++] = n;\n                  }\n                  c = a.Gd;\n                  d = 0;\n                  e = b;\n                  f = Kc(b);\n                  0 < f && (d = parseInt(b.slice(f + 1)) >>> 0, e = b.slice(0, f));\n                  if ((e = a.je[e]) && d < e[0] && (d += e[1], c[d] = c[d] || q.getUniformLocation(a, b))) return d;\n                } else U(1281);\n\n                return -1;\n              },\n              zb: function (a, b, c) {\n                for (var d = Fc[b], e = 0; e < b; e++) d[e] = C[c + 4 * e >> 2];\n\n                q.invalidateFramebuffer(a, d);\n              },\n              yb: function (a, b, c, d, e, f, g) {\n                for (var h = Fc[b], n = 0; n < b; n++) h[n] = C[c + 4 * n >> 2];\n\n                q.invalidateSubFramebuffer(a, h, d, e, f, g);\n              },\n              Fb: function (a) {\n                return q.isSync(Ac[a]);\n              },\n              ba: function (a) {\n                return (a = xc[a]) ? q.isTexture(a) : 0;\n              },\n              aa: function (a) {\n                q.lineWidth(a);\n              },\n              $: function (a) {\n                a = S[a];\n                q.linkProgram(a);\n                a.Gd = 0;\n                a.je = {};\n              },\n              ac: function (a, b, c, d, e, f) {\n                q.ge.multiDrawArraysInstancedBaseInstanceWEBGL(a, C, b >> 2, C, c >> 2, C, d >> 2, D, e >> 2, f);\n              },\n              $b: function (a, b, c, d, e, f, g, h) {\n                q.ge.multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL(a, C, b >> 2, c, C, d >> 2, C, e >> 2, C, f >> 2, D, g >> 2, h);\n              },\n              _: function (a, b) {\n                3317 == a && (Dc = b);\n                q.pixelStorei(a, b);\n              },\n              bc: function (a) {\n                q.readBuffer(a);\n              },\n              Z: function (a, b, c, d, e, f, g) {\n                if (2 <= l.version) {\n                  if (q.Wd) q.readPixels(a, b, c, d, e, f, g);else {\n                    var h = Lc(f);\n                    q.readPixels(a, b, c, d, e, f, h, g >> 31 - Math.clz32(h.BYTES_PER_ELEMENT));\n                  }\n                } else (g = Mc(f, e, c, d, g)) ? q.readPixels(a, b, c, d, e, f, g) : U(1280);\n              },\n              Kb: function (a, b, c, d) {\n                q.renderbufferStorage(a, b, c, d);\n              },\n              Ib: function (a, b, c, d, e) {\n                q.renderbufferStorageMultisample(a, b, c, d, e);\n              },\n              Bb: function (a, b, c) {\n                q.samplerParameteri(zc[a], b, c);\n              },\n              Ab: function (a, b, c) {\n                q.samplerParameteri(zc[a], b, C[c >> 2]);\n              },\n              Y: function (a, b, c, d) {\n                q.scissor(a, b, c, d);\n              },\n              X: function (a, b, c, d) {\n                for (var e = \"\", f = 0; f < b; ++f) {\n                  var g = d ? C[d + 4 * f >> 2] : -1;\n                  e += Ca(C[c + 4 * f >> 2], 0 > g ? void 0 : g);\n                }\n\n                q.shaderSource(T[a], e);\n              },\n              W: function (a, b, c) {\n                q.stencilFunc(a, b, c);\n              },\n              U: function (a, b, c, d) {\n                q.stencilFuncSeparate(a, b, c, d);\n              },\n              T: function (a) {\n                q.stencilMask(a);\n              },\n              S: function (a, b) {\n                q.stencilMaskSeparate(a, b);\n              },\n              R: function (a, b, c) {\n                q.stencilOp(a, b, c);\n              },\n              Q: function (a, b, c, d) {\n                q.stencilOpSeparate(a, b, c, d);\n              },\n              P: function (a, b, c, d, e, f, g, h, n) {\n                if (2 <= l.version) {\n                  if (q.Ad) q.texImage2D(a, b, c, d, e, f, g, h, n);else if (n) {\n                    var p = Lc(h);\n                    q.texImage2D(a, b, c, d, e, f, g, h, p, n >> 31 - Math.clz32(p.BYTES_PER_ELEMENT));\n                  } else q.texImage2D(a, b, c, d, e, f, g, h, null);\n                } else q.texImage2D(a, b, c, d, e, f, g, h, n ? Mc(h, g, d, e, n) : null);\n              },\n              O: function (a, b, c) {\n                q.texParameterf(a, b, c);\n              },\n              N: function (a, b, c) {\n                q.texParameterf(a, b, G[c >> 2]);\n              },\n              M: function (a, b, c) {\n                q.texParameteri(a, b, c);\n              },\n              L: function (a, b, c) {\n                q.texParameteri(a, b, C[c >> 2]);\n              },\n              Zb: function (a, b, c, d, e) {\n                q.texStorage2D(a, b, c, d, e);\n              },\n              J: function (a, b, c, d, e, f, g, h, n) {\n                if (2 <= l.version) {\n                  if (q.Ad) q.texSubImage2D(a, b, c, d, e, f, g, h, n);else if (n) {\n                    var p = Lc(h);\n                    q.texSubImage2D(a, b, c, d, e, f, g, h, p, n >> 31 - Math.clz32(p.BYTES_PER_ELEMENT));\n                  } else q.texSubImage2D(a, b, c, d, e, f, g, h, null);\n                } else p = null, n && (p = Mc(h, g, e, f, n)), q.texSubImage2D(a, b, c, d, e, f, g, h, p);\n              },\n              I: function (a, b) {\n                q.uniform1f(V(a), b);\n              },\n              H: function (a, b, c) {\n                if (2 <= l.version) q.uniform1fv(V(a), G, c >> 2, b);else {\n                  if (288 >= b) for (var d = Nc[b - 1], e = 0; e < b; ++e) d[e] = G[c + 4 * e >> 2];else d = G.subarray(c >> 2, c + 4 * b >> 2);\n                  q.uniform1fv(V(a), d);\n                }\n              },\n              G: function (a, b) {\n                q.uniform1i(V(a), b);\n              },\n              F: function (a, b, c) {\n                if (2 <= l.version) q.uniform1iv(V(a), C, c >> 2, b);else {\n                  if (288 >= b) for (var d = Oc[b - 1], e = 0; e < b; ++e) d[e] = C[c + 4 * e >> 2];else d = C.subarray(c >> 2, c + 4 * b >> 2);\n                  q.uniform1iv(V(a), d);\n                }\n              },\n              E: function (a, b, c) {\n                q.uniform2f(V(a), b, c);\n              },\n              D: function (a, b, c) {\n                if (2 <= l.version) q.uniform2fv(V(a), G, c >> 2, 2 * b);else {\n                  if (144 >= b) for (var d = Nc[2 * b - 1], e = 0; e < 2 * b; e += 2) d[e] = G[c + 4 * e >> 2], d[e + 1] = G[c + (4 * e + 4) >> 2];else d = G.subarray(c >> 2, c + 8 * b >> 2);\n                  q.uniform2fv(V(a), d);\n                }\n              },\n              C: function (a, b, c) {\n                q.uniform2i(V(a), b, c);\n              },\n              B: function (a, b, c) {\n                if (2 <= l.version) q.uniform2iv(V(a), C, c >> 2, 2 * b);else {\n                  if (144 >= b) for (var d = Oc[2 * b - 1], e = 0; e < 2 * b; e += 2) d[e] = C[c + 4 * e >> 2], d[e + 1] = C[c + (4 * e + 4) >> 2];else d = C.subarray(c >> 2, c + 8 * b >> 2);\n                  q.uniform2iv(V(a), d);\n                }\n              },\n              A: function (a, b, c, d) {\n                q.uniform3f(V(a), b, c, d);\n              },\n              Ec: function (a, b, c) {\n                if (2 <= l.version) q.uniform3fv(V(a), G, c >> 2, 3 * b);else {\n                  if (96 >= b) for (var d = Nc[3 * b - 1], e = 0; e < 3 * b; e += 3) d[e] = G[c + 4 * e >> 2], d[e + 1] = G[c + (4 * e + 4) >> 2], d[e + 2] = G[c + (4 * e + 8) >> 2];else d = G.subarray(c >> 2, c + 12 * b >> 2);\n                  q.uniform3fv(V(a), d);\n                }\n              },\n              Dc: function (a, b, c, d) {\n                q.uniform3i(V(a), b, c, d);\n              },\n              Cc: function (a, b, c) {\n                if (2 <= l.version) q.uniform3iv(V(a), C, c >> 2, 3 * b);else {\n                  if (96 >= b) for (var d = Oc[3 * b - 1], e = 0; e < 3 * b; e += 3) d[e] = C[c + 4 * e >> 2], d[e + 1] = C[c + (4 * e + 4) >> 2], d[e + 2] = C[c + (4 * e + 8) >> 2];else d = C.subarray(c >> 2, c + 12 * b >> 2);\n                  q.uniform3iv(V(a), d);\n                }\n              },\n              Bc: function (a, b, c, d, e) {\n                q.uniform4f(V(a), b, c, d, e);\n              },\n              Ac: function (a, b, c) {\n                if (2 <= l.version) q.uniform4fv(V(a), G, c >> 2, 4 * b);else {\n                  if (72 >= b) {\n                    var d = Nc[4 * b - 1],\n                        e = G;\n                    c >>= 2;\n\n                    for (var f = 0; f < 4 * b; f += 4) {\n                      var g = c + f;\n                      d[f] = e[g];\n                      d[f + 1] = e[g + 1];\n                      d[f + 2] = e[g + 2];\n                      d[f + 3] = e[g + 3];\n                    }\n                  } else d = G.subarray(c >> 2, c + 16 * b >> 2);\n\n                  q.uniform4fv(V(a), d);\n                }\n              },\n              zc: function (a, b, c, d, e) {\n                q.uniform4i(V(a), b, c, d, e);\n              },\n              yc: function (a, b, c) {\n                if (2 <= l.version) q.uniform4iv(V(a), C, c >> 2, 4 * b);else {\n                  if (72 >= b) for (var d = Oc[4 * b - 1], e = 0; e < 4 * b; e += 4) d[e] = C[c + 4 * e >> 2], d[e + 1] = C[c + (4 * e + 4) >> 2], d[e + 2] = C[c + (4 * e + 8) >> 2], d[e + 3] = C[c + (4 * e + 12) >> 2];else d = C.subarray(c >> 2, c + 16 * b >> 2);\n                  q.uniform4iv(V(a), d);\n                }\n              },\n              xc: function (a, b, c, d) {\n                if (2 <= l.version) q.uniformMatrix2fv(V(a), !!c, G, d >> 2, 4 * b);else {\n                  if (72 >= b) for (var e = Nc[4 * b - 1], f = 0; f < 4 * b; f += 4) e[f] = G[d + 4 * f >> 2], e[f + 1] = G[d + (4 * f + 4) >> 2], e[f + 2] = G[d + (4 * f + 8) >> 2], e[f + 3] = G[d + (4 * f + 12) >> 2];else e = G.subarray(d >> 2, d + 16 * b >> 2);\n                  q.uniformMatrix2fv(V(a), !!c, e);\n                }\n              },\n              wc: function (a, b, c, d) {\n                if (2 <= l.version) q.uniformMatrix3fv(V(a), !!c, G, d >> 2, 9 * b);else {\n                  if (32 >= b) for (var e = Nc[9 * b - 1], f = 0; f < 9 * b; f += 9) e[f] = G[d + 4 * f >> 2], e[f + 1] = G[d + (4 * f + 4) >> 2], e[f + 2] = G[d + (4 * f + 8) >> 2], e[f + 3] = G[d + (4 * f + 12) >> 2], e[f + 4] = G[d + (4 * f + 16) >> 2], e[f + 5] = G[d + (4 * f + 20) >> 2], e[f + 6] = G[d + (4 * f + 24) >> 2], e[f + 7] = G[d + (4 * f + 28) >> 2], e[f + 8] = G[d + (4 * f + 32) >> 2];else e = G.subarray(d >> 2, d + 36 * b >> 2);\n                  q.uniformMatrix3fv(V(a), !!c, e);\n                }\n              },\n              vc: function (a, b, c, d) {\n                if (2 <= l.version) q.uniformMatrix4fv(V(a), !!c, G, d >> 2, 16 * b);else {\n                  if (18 >= b) {\n                    var e = Nc[16 * b - 1],\n                        f = G;\n                    d >>= 2;\n\n                    for (var g = 0; g < 16 * b; g += 16) {\n                      var h = d + g;\n                      e[g] = f[h];\n                      e[g + 1] = f[h + 1];\n                      e[g + 2] = f[h + 2];\n                      e[g + 3] = f[h + 3];\n                      e[g + 4] = f[h + 4];\n                      e[g + 5] = f[h + 5];\n                      e[g + 6] = f[h + 6];\n                      e[g + 7] = f[h + 7];\n                      e[g + 8] = f[h + 8];\n                      e[g + 9] = f[h + 9];\n                      e[g + 10] = f[h + 10];\n                      e[g + 11] = f[h + 11];\n                      e[g + 12] = f[h + 12];\n                      e[g + 13] = f[h + 13];\n                      e[g + 14] = f[h + 14];\n                      e[g + 15] = f[h + 15];\n                    }\n                  } else e = G.subarray(d >> 2, d + 64 * b >> 2);\n\n                  q.uniformMatrix4fv(V(a), !!c, e);\n                }\n              },\n              tc: function (a) {\n                a = S[a];\n                q.useProgram(a);\n                q.re = a;\n              },\n              sc: function (a, b) {\n                q.vertexAttrib1f(a, b);\n              },\n              rc: function (a, b) {\n                q.vertexAttrib2f(a, G[b >> 2], G[b + 4 >> 2]);\n              },\n              qc: function (a, b) {\n                q.vertexAttrib3f(a, G[b >> 2], G[b + 4 >> 2], G[b + 8 >> 2]);\n              },\n              pc: function (a, b) {\n                q.vertexAttrib4f(a, G[b >> 2], G[b + 4 >> 2], G[b + 8 >> 2], G[b + 12 >> 2]);\n              },\n              Yb: function (a, b) {\n                q.vertexAttribDivisor(a, b);\n              },\n              Xb: function (a, b, c, d, e) {\n                q.vertexAttribIPointer(a, b, c, d, e);\n              },\n              oc: function (a, b, c, d, e, f) {\n                q.vertexAttribPointer(a, b, c, !!d, e, f);\n              },\n              nc: function (a, b, c, d) {\n                q.viewport(a, b, c, d);\n              },\n              $a: function (a, b, c, d) {\n                q.waitSync(Ac[a], b, (c >>> 0) + 4294967296 * d);\n              },\n              u: function (a) {\n                var b = z.length;\n                a >>>= 0;\n                if (2147483648 < a) return !1;\n\n                for (var c = 1; 4 >= c; c *= 2) {\n                  var d = b * (1 + .2 / c);\n                  d = Math.min(d, a + 100663296);\n                  d = Math.max(a, d);\n                  0 < d % 65536 && (d += 65536 - d % 65536);\n\n                  a: {\n                    try {\n                      ya.grow(Math.min(2147483648, d) - Oa.byteLength + 65535 >>> 16);\n                      Ra();\n                      var e = 1;\n                      break a;\n                    } catch (f) {}\n\n                    e = void 0;\n                  }\n\n                  if (e) return !0;\n                }\n\n                return !1;\n              },\n              qb: function (a, b) {\n                var c = 0;\n                Qc().forEach(function (d, e) {\n                  var f = b + c;\n                  e = C[a + 4 * e >> 2] = f;\n\n                  for (f = 0; f < d.length; ++f) Pa[e++ >> 0] = d.charCodeAt(f);\n\n                  Pa[e >> 0] = 0;\n                  c += d.length + 1;\n                });\n                return 0;\n              },\n              rb: function (a, b) {\n                var c = Qc();\n                C[a >> 2] = c.length;\n                var d = 0;\n                c.forEach(function (e) {\n                  d += e.length + 1;\n                });\n                C[b >> 2] = d;\n                return 0;\n              },\n              tb: function () {\n                return 0;\n              },\n              eb: function () {},\n              sb: function (a, b, c, d) {\n                for (var e = 0, f = 0; f < c; f++) {\n                  var g = C[b >> 2],\n                      h = C[b + 4 >> 2];\n                  b += 8;\n\n                  for (var n = 0; n < h; n++) {\n                    var p = z[g + n],\n                        r = Sc[a];\n                    0 === p || 10 === p ? ((1 === a ? ua : va)(Ba(r, 0)), r.length = 0) : r.push(p);\n                  }\n\n                  e += h;\n                }\n\n                C[d >> 2] = e;\n                return 0;\n              },\n              b: function () {\n                return wa;\n              },\n              db: function (a, b) {\n                q.bindFramebuffer(a, vc[b]);\n              },\n              w: function (a, b) {\n                Hc(a, b);\n              },\n              n: ed,\n              h: fd,\n              o: gd,\n              r: hd,\n              hb: jd,\n              ib: kd,\n              q: ld,\n              j: md,\n              d: nd,\n              p: od,\n              i: pd,\n              kb: qd,\n              gb: rd,\n              lb: sd,\n              c: function (a) {\n                wa = a;\n              },\n              ob: function (a, b, c, d) {\n                return Yc(a, b, c, d);\n              }\n            };\n\n            (function () {\n              function a(e) {\n                k.asm = e.exports;\n                ya = k.asm.Hc;\n                Ra();\n                Sa = k.asm.Rc;\n                Ua.unshift(k.asm.Ic);\n                Xa--;\n                k.monitorRunDependencies && k.monitorRunDependencies(Xa);\n                0 == Xa && (null !== Ya && (clearInterval(Ya), Ya = null), Za && (e = Za, Za = null, e()));\n              }\n\n              function b(e) {\n                a(e.instance);\n              }\n\n              function c(e) {\n                return cb().then(function (f) {\n                  return WebAssembly.instantiate(f, d);\n                }).then(function (f) {\n                  return f;\n                }).then(e, function (f) {\n                  va(\"failed to asynchronously prepare wasm: \" + f);\n                  ta(f);\n                });\n              }\n\n              var d = {\n                a: td\n              };\n              Xa++;\n              k.monitorRunDependencies && k.monitorRunDependencies(Xa);\n              if (k.instantiateWasm) try {\n                return k.instantiateWasm(d, a);\n              } catch (e) {\n                return va(\"Module.instantiateWasm callback failed with error: \" + e), !1;\n              }\n              (function () {\n                return xa || \"function\" !== typeof WebAssembly.instantiateStreaming || $a() || H.startsWith(\"file://\") || \"function\" !== typeof fetch ? c(b) : fetch(H, {\n                  credentials: \"same-origin\"\n                }).then(function (e) {\n                  return WebAssembly.instantiateStreaming(e, d).then(b, function (f) {\n                    va(\"wasm streaming compile failed: \" + f);\n                    va(\"falling back to ArrayBuffer instantiation\");\n                    return c(b);\n                  });\n                });\n              })().catch(ca);\n              return {};\n            })();\n\n            k.___wasm_call_ctors = function () {\n              return (k.___wasm_call_ctors = k.asm.Ic).apply(null, arguments);\n            };\n\n            var Jc = k._malloc = function () {\n              return (Jc = k._malloc = k.asm.Jc).apply(null, arguments);\n            },\n                Xb = k._free = function () {\n              return (Xb = k._free = k.asm.Kc).apply(null, arguments);\n            },\n                dd = k.___errno_location = function () {\n              return (dd = k.___errno_location = k.asm.Lc).apply(null, arguments);\n            },\n                Wb = k.___getTypeName = function () {\n              return (Wb = k.___getTypeName = k.asm.Mc).apply(null, arguments);\n            };\n\n            k.___embind_register_native_and_builtin_types = function () {\n              return (k.___embind_register_native_and_builtin_types = k.asm.Nc).apply(null, arguments);\n            };\n\n            var X = k.stackSave = function () {\n              return (X = k.stackSave = k.asm.Oc).apply(null, arguments);\n            },\n                Y = k.stackRestore = function () {\n              return (Y = k.stackRestore = k.asm.Pc).apply(null, arguments);\n            },\n                Z = k._setThrew = function () {\n              return (Z = k._setThrew = k.asm.Qc).apply(null, arguments);\n            };\n\n            k.dynCall_iiiij = function () {\n              return (k.dynCall_iiiij = k.asm.Sc).apply(null, arguments);\n            };\n\n            k.dynCall_viiij = function () {\n              return (k.dynCall_viiij = k.asm.Tc).apply(null, arguments);\n            };\n\n            k.dynCall_iiij = function () {\n              return (k.dynCall_iiij = k.asm.Uc).apply(null, arguments);\n            };\n\n            k.dynCall_viij = function () {\n              return (k.dynCall_viij = k.asm.Vc).apply(null, arguments);\n            };\n\n            k.dynCall_jiiiiji = function () {\n              return (k.dynCall_jiiiiji = k.asm.Wc).apply(null, arguments);\n            };\n\n            k.dynCall_jiiiiii = function () {\n              return (k.dynCall_jiiiiii = k.asm.Xc).apply(null, arguments);\n            };\n\n            k.dynCall_viiiiij = function () {\n              return (k.dynCall_viiiiij = k.asm.Yc).apply(null, arguments);\n            };\n\n            k.dynCall_jii = function () {\n              return (k.dynCall_jii = k.asm.Zc).apply(null, arguments);\n            };\n\n            k.dynCall_viji = function () {\n              return (k.dynCall_viji = k.asm._c).apply(null, arguments);\n            };\n\n            k.dynCall_ji = function () {\n              return (k.dynCall_ji = k.asm.$c).apply(null, arguments);\n            };\n\n            k.dynCall_iij = function () {\n              return (k.dynCall_iij = k.asm.ad).apply(null, arguments);\n            };\n\n            k.dynCall_vij = function () {\n              return (k.dynCall_vij = k.asm.bd).apply(null, arguments);\n            };\n\n            k.dynCall_iijj = function () {\n              return (k.dynCall_iijj = k.asm.cd).apply(null, arguments);\n            };\n\n            k.dynCall_jiji = function () {\n              return (k.dynCall_jiji = k.asm.dd).apply(null, arguments);\n            };\n\n            k.dynCall_iiiiij = function () {\n              return (k.dynCall_iiiiij = k.asm.ed).apply(null, arguments);\n            };\n\n            k.dynCall_iiiiijj = function () {\n              return (k.dynCall_iiiiijj = k.asm.fd).apply(null, arguments);\n            };\n\n            k.dynCall_iiiiiijj = function () {\n              return (k.dynCall_iiiiiijj = k.asm.gd).apply(null, arguments);\n            };\n\n            k.dynCall_viijii = function () {\n              return (k.dynCall_viijii = k.asm.hd).apply(null, arguments);\n            };\n\n            function nd(a, b, c) {\n              var d = X();\n\n              try {\n                K(a)(b, c);\n              } catch (e) {\n                Y(d);\n                if (e !== e + 0 && \"longjmp\" !== e) throw e;\n                Z(1, 0);\n              }\n            }\n\n            function gd(a, b, c, d) {\n              var e = X();\n\n              try {\n                return K(a)(b, c, d);\n              } catch (f) {\n                Y(e);\n                if (f !== f + 0 && \"longjmp\" !== f) throw f;\n                Z(1, 0);\n              }\n            }\n\n            function pd(a, b, c, d, e) {\n              var f = X();\n\n              try {\n                K(a)(b, c, d, e);\n              } catch (g) {\n                Y(f);\n                if (g !== g + 0 && \"longjmp\" !== g) throw g;\n                Z(1, 0);\n              }\n            }\n\n            function md(a, b) {\n              var c = X();\n\n              try {\n                K(a)(b);\n              } catch (d) {\n                Y(c);\n                if (d !== d + 0 && \"longjmp\" !== d) throw d;\n                Z(1, 0);\n              }\n            }\n\n            function fd(a, b, c) {\n              var d = X();\n\n              try {\n                return K(a)(b, c);\n              } catch (e) {\n                Y(d);\n                if (e !== e + 0 && \"longjmp\" !== e) throw e;\n                Z(1, 0);\n              }\n            }\n\n            function hd(a, b, c, d, e) {\n              var f = X();\n\n              try {\n                return K(a)(b, c, d, e);\n              } catch (g) {\n                Y(f);\n                if (g !== g + 0 && \"longjmp\" !== g) throw g;\n                Z(1, 0);\n              }\n            }\n\n            function ed(a, b) {\n              var c = X();\n\n              try {\n                return K(a)(b);\n              } catch (d) {\n                Y(c);\n                if (d !== d + 0 && \"longjmp\" !== d) throw d;\n                Z(1, 0);\n              }\n            }\n\n            function ld(a) {\n              var b = X();\n\n              try {\n                K(a)();\n              } catch (c) {\n                Y(b);\n                if (c !== c + 0 && \"longjmp\" !== c) throw c;\n                Z(1, 0);\n              }\n            }\n\n            function sd(a, b, c, d, e, f, g, h, n) {\n              var p = X();\n\n              try {\n                K(a)(b, c, d, e, f, g, h, n);\n              } catch (r) {\n                Y(p);\n                if (r !== r + 0 && \"longjmp\" !== r) throw r;\n                Z(1, 0);\n              }\n            }\n\n            function od(a, b, c, d) {\n              var e = X();\n\n              try {\n                K(a)(b, c, d);\n              } catch (f) {\n                Y(e);\n                if (f !== f + 0 && \"longjmp\" !== f) throw f;\n                Z(1, 0);\n              }\n            }\n\n            function qd(a, b, c, d, e, f) {\n              var g = X();\n\n              try {\n                K(a)(b, c, d, e, f);\n              } catch (h) {\n                Y(g);\n                if (h !== h + 0 && \"longjmp\" !== h) throw h;\n                Z(1, 0);\n              }\n            }\n\n            function kd(a, b, c, d, e, f, g) {\n              var h = X();\n\n              try {\n                return K(a)(b, c, d, e, f, g);\n              } catch (n) {\n                Y(h);\n                if (n !== n + 0 && \"longjmp\" !== n) throw n;\n                Z(1, 0);\n              }\n            }\n\n            function jd(a, b, c, d, e, f) {\n              var g = X();\n\n              try {\n                return K(a)(b, c, d, e, f);\n              } catch (h) {\n                Y(g);\n                if (h !== h + 0 && \"longjmp\" !== h) throw h;\n                Z(1, 0);\n              }\n            }\n\n            function rd(a, b, c, d, e, f, g) {\n              var h = X();\n\n              try {\n                K(a)(b, c, d, e, f, g);\n              } catch (n) {\n                Y(h);\n                if (n !== n + 0 && \"longjmp\" !== n) throw n;\n                Z(1, 0);\n              }\n            }\n\n            var ud;\n\n            Za = function vd() {\n              ud || wd();\n              ud || (Za = vd);\n            };\n\n            function wd() {\n              function a() {\n                if (!ud && (ud = !0, k.calledRun = !0, !za)) {\n                  db(Ua);\n                  aa(k);\n                  if (k.onRuntimeInitialized) k.onRuntimeInitialized();\n                  if (k.postRun) for (\"function\" == typeof k.postRun && (k.postRun = [k.postRun]); k.postRun.length;) {\n                    var b = k.postRun.shift();\n                    Va.unshift(b);\n                  }\n                  db(Va);\n                }\n              }\n\n              if (!(0 < Xa)) {\n                if (k.preRun) for (\"function\" == typeof k.preRun && (k.preRun = [k.preRun]); k.preRun.length;) Wa();\n                db(Ta);\n                0 < Xa || (k.setStatus ? (k.setStatus(\"Running...\"), setTimeout(function () {\n                  setTimeout(function () {\n                    k.setStatus(\"\");\n                  }, 1);\n                  a();\n                }, 1)) : a());\n              }\n            }\n\n            k.run = wd;\n            if (k.preInit) for (\"function\" == typeof k.preInit && (k.preInit = [k.preInit]); 0 < k.preInit.length;) k.preInit.pop()();\n            wd();\n            return Rive.ready;\n          };\n        }();\n        /* harmony default export */\n\n\n        const __WEBPACK_DEFAULT_EXPORT__ = Rive;\n        /***/\n      },\n      /* 2 */\n\n      /***/\n      module => {\n        module.exports = JSON.parse('{\"name\":\"@rive-app/webgl\",\"version\":\"1.0.39\",\"description\":\"Rive\\'s webgl based web api.\",\"main\":\"rive.js\",\"homepage\":\"https://rive.app\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/rive-app/rive-wasm/tree/master/js\"},\"keywords\":[\"rive\",\"animation\"],\"author\":\"Rive\",\"contributors\":[\"Luigi Rosso <luigi@rive.app> (https://rive.app)\",\"Maxwell Talbot <max@rive.app> (https://rive.app)\",\"Arthur Vivian <arthur@rive.app> (https://rive.app)\",\"Umberto Sonnino <umberto@rive.app> (https://rive.app)\",\"Matthew Sullivan <matt.j.sullivan@gmail.com> (mailto:matt.j.sullivan@gmail.com)\"],\"license\":\"MIT\",\"files\":[\"rive.js\",\"rive.wasm\",\"rive.js.map\",\"rive.d.ts\",\"rive_advanced.mjs.d.ts\"],\"typings\":\"rive.d.ts\",\"dependencies\":{},\"browser\":{\"fs\":false,\"path\":false}}');\n        /***/\n      }\n      /******/\n      ];\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n\n        if (cachedModule !== undefined) {\n          /******/\n          return cachedModule.exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n      /******/\n\n      /* webpack/runtime/define property getters */\n\n      /******/\n\n\n      (() => {\n        /******/\n        // define getter functions for harmony exports\n\n        /******/\n        __webpack_require__.d = (exports, definition) => {\n          /******/\n          for (var key in definition) {\n            /******/\n            if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n              /******/\n              Object.defineProperty(exports, key, {\n                enumerable: true,\n                get: definition[key]\n              });\n              /******/\n            }\n            /******/\n\n          }\n          /******/\n\n        };\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/hasOwnProperty shorthand */\n\n      /******/\n\n\n      (() => {\n        /******/\n        __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/make namespace object */\n\n      /******/\n\n\n      (() => {\n        /******/\n        // define __esModule on exports\n\n        /******/\n        __webpack_require__.r = exports => {\n          /******/\n          if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n            /******/\n            Object.defineProperty(exports, Symbol.toStringTag, {\n              value: 'Module'\n            });\n            /******/\n          }\n          /******/\n\n\n          Object.defineProperty(exports, '__esModule', {\n            value: true\n          });\n          /******/\n        };\n        /******/\n\n      })();\n      /******/\n\n      /************************************************************************/\n\n\n      var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n\n      (() => {\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n\n\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\n          \"Fit\": () =>\n          /* binding */\n          Fit,\n\n          /* harmony export */\n          \"Alignment\": () =>\n          /* binding */\n          Alignment,\n\n          /* harmony export */\n          \"Layout\": () =>\n          /* binding */\n          Layout,\n\n          /* harmony export */\n          \"RuntimeLoader\": () =>\n          /* binding */\n          RuntimeLoader,\n\n          /* harmony export */\n          \"StateMachineInputType\": () =>\n          /* binding */\n          StateMachineInputType,\n\n          /* harmony export */\n          \"StateMachineInput\": () =>\n          /* binding */\n          StateMachineInput,\n\n          /* harmony export */\n          \"EventType\": () =>\n          /* binding */\n          EventType,\n\n          /* harmony export */\n          \"LoopType\": () =>\n          /* binding */\n          LoopType,\n\n          /* harmony export */\n          \"Rive\": () =>\n          /* binding */\n          Rive,\n\n          /* harmony export */\n          \"Testing\": () =>\n          /* binding */\n          Testing\n          /* harmony export */\n\n        });\n        /* harmony import */\n\n\n        var _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n        /* harmony import */\n\n\n        var package_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);\n\n        var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n\n        var __generator = undefined && undefined.__generator || function (thisArg, body) {\n          var _ = {\n            label: 0,\n            sent: function () {\n              if (t[0] & 1) throw t[1];\n              return t[1];\n            },\n            trys: [],\n            ops: []\n          },\n              f,\n              y,\n              t,\n              g;\n          return g = {\n            next: verb(0),\n            \"throw\": verb(1),\n            \"return\": verb(2)\n          }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n            return this;\n          }), g;\n\n          function verb(n) {\n            return function (v) {\n              return step([n, v]);\n            };\n          }\n\n          function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n\n            while (_) try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n              if (y = 0, t) op = [op[0] & 2, t.value];\n\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n\n                case 4:\n                  _.label++;\n                  return {\n                    value: op[1],\n                    done: false\n                  };\n\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n\n                case 7:\n                  op = _.ops.pop();\n\n                  _.trys.pop();\n\n                  continue;\n\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n\n                    _.ops.push(op);\n\n                    break;\n                  }\n\n                  if (t[2]) _.ops.pop();\n\n                  _.trys.pop();\n\n                  continue;\n              }\n\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n\n            if (op[0] & 5) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: true\n            };\n          }\n        }; // Tracks playback states; numbers map to the runtime's numerical values\n        // i.e. play: 0, pause: 1, stop: 2\n\n\n        var PlaybackState;\n\n        (function (PlaybackState) {\n          PlaybackState[PlaybackState[\"Play\"] = 0] = \"Play\";\n          PlaybackState[PlaybackState[\"Pause\"] = 1] = \"Pause\";\n          PlaybackState[PlaybackState[\"Stop\"] = 2] = \"Stop\";\n        })(PlaybackState || (PlaybackState = {})); // #region layout\n        // Fit options for the canvas\n\n\n        var Fit;\n\n        (function (Fit) {\n          Fit[\"Cover\"] = \"cover\";\n          Fit[\"Contain\"] = \"contain\";\n          Fit[\"Fill\"] = \"fill\";\n          Fit[\"FitWidth\"] = \"fitWidth\";\n          Fit[\"FitHeight\"] = \"fitHeight\";\n          Fit[\"None\"] = \"none\";\n          Fit[\"ScaleDown\"] = \"scaleDown\";\n        })(Fit || (Fit = {})); // Alignment options for the canvas\n\n\n        var Alignment;\n\n        (function (Alignment) {\n          Alignment[\"Center\"] = \"center\";\n          Alignment[\"TopLeft\"] = \"topLeft\";\n          Alignment[\"TopCenter\"] = \"topCenter\";\n          Alignment[\"TopRight\"] = \"topRight\";\n          Alignment[\"CenterLeft\"] = \"centerLeft\";\n          Alignment[\"CenterRight\"] = \"centerRight\";\n          Alignment[\"BottomLeft\"] = \"bottomLeft\";\n          Alignment[\"BottomCenter\"] = \"bottomCenter\";\n          Alignment[\"BottomRight\"] = \"bottomRight\";\n        })(Alignment || (Alignment = {})); // Alignment options for Rive animations in a HTML canvas\n\n\n        var Layout =\n        /** @class */\n        function () {\n          function Layout(params) {\n            var _a, _b, _c, _d, _e, _f;\n\n            this.fit = (_a = params === null || params === void 0 ? void 0 : params.fit) !== null && _a !== void 0 ? _a : Fit.Contain;\n            this.alignment = (_b = params === null || params === void 0 ? void 0 : params.alignment) !== null && _b !== void 0 ? _b : Alignment.Center;\n            this.minX = (_c = params === null || params === void 0 ? void 0 : params.minX) !== null && _c !== void 0 ? _c : 0;\n            this.minY = (_d = params === null || params === void 0 ? void 0 : params.minY) !== null && _d !== void 0 ? _d : 0;\n            this.maxX = (_e = params === null || params === void 0 ? void 0 : params.maxX) !== null && _e !== void 0 ? _e : 0;\n            this.maxY = (_f = params === null || params === void 0 ? void 0 : params.maxY) !== null && _f !== void 0 ? _f : 0;\n          } // Alternative constructor to build a Layout from an interface/object\n\n\n          Layout.new = function (_a) {\n            var fit = _a.fit,\n                alignment = _a.alignment,\n                minX = _a.minX,\n                minY = _a.minY,\n                maxX = _a.maxX,\n                maxY = _a.maxY;\n            console.warn('This function is deprecated: please use `new Layout({})` instead');\n            return new Layout({\n              fit: fit,\n              alignment: alignment,\n              minX: minX,\n              minY: minY,\n              maxX: maxX,\n              maxY: maxY\n            });\n          };\n          /**\n           * Makes a copy of the layout, replacing any specified parameters\n           */\n\n\n          Layout.prototype.copyWith = function (_a) {\n            var fit = _a.fit,\n                alignment = _a.alignment,\n                minX = _a.minX,\n                minY = _a.minY,\n                maxX = _a.maxX,\n                maxY = _a.maxY;\n            return new Layout({\n              fit: fit !== null && fit !== void 0 ? fit : this.fit,\n              alignment: alignment !== null && alignment !== void 0 ? alignment : this.alignment,\n              minX: minX !== null && minX !== void 0 ? minX : this.minX,\n              minY: minY !== null && minY !== void 0 ? minY : this.minY,\n              maxX: maxX !== null && maxX !== void 0 ? maxX : this.maxX,\n              maxY: maxY !== null && maxY !== void 0 ? maxY : this.maxY\n            });\n          }; // Returns fit for the Wasm runtime format\n\n\n          Layout.prototype.runtimeFit = function (rive) {\n            if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n            var fit;\n            if (this.fit === Fit.Cover) fit = rive.Fit.cover;else if (this.fit === Fit.Contain) fit = rive.Fit.contain;else if (this.fit === Fit.Fill) fit = rive.Fit.fill;else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;else fit = rive.Fit.none;\n            this.cachedRuntimeFit = fit;\n            return fit;\n          }; // Returns alignment for the Wasm runtime format\n\n\n          Layout.prototype.runtimeAlignment = function (rive) {\n            if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n            var alignment;\n            if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;else alignment = rive.Alignment.center;\n            this.cachedRuntimeAlignment = alignment;\n            return alignment;\n          };\n\n          return Layout;\n        }(); // Runtime singleton; use getInstance to provide a callback that returns the\n        // Rive runtime\n\n\n        var RuntimeLoader =\n        /** @class */\n        function () {\n          // Class is never instantiated\n          function RuntimeLoader() {} // Loads the runtime\n\n\n          RuntimeLoader.loadRuntime = function () {\n            _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__.default({\n              // Loads Wasm bundle\n              locateFile: function (_) {\n                return RuntimeLoader.wasmURL;\n              }\n            }).then(function (rive) {\n              var _a;\n\n              RuntimeLoader.runtime = rive; // Fire all the callbacks\n\n              while (RuntimeLoader.callBackQueue.length > 0) {\n                (_a = RuntimeLoader.callBackQueue.shift()) === null || _a === void 0 ? void 0 : _a(RuntimeLoader.runtime);\n              }\n            });\n          }; // Provides a runtime instance via a callback\n\n\n          RuntimeLoader.getInstance = function (callback) {\n            // If it's not loading, start loading runtime\n            if (!RuntimeLoader.isLoading) {\n              RuntimeLoader.isLoading = true;\n              RuntimeLoader.loadRuntime();\n            }\n\n            if (!RuntimeLoader.runtime) {\n              RuntimeLoader.callBackQueue.push(callback);\n            } else {\n              callback(RuntimeLoader.runtime);\n            }\n          }; // Provides a runtime instance via a promise\n\n\n          RuntimeLoader.awaitInstance = function () {\n            return new Promise(function (resolve, reject) {\n              return RuntimeLoader.getInstance(function (rive) {\n                return resolve(rive);\n              });\n            });\n          }; // Manually sets the wasm url\n\n\n          RuntimeLoader.setWasmUrl = function (url) {\n            RuntimeLoader.wasmURL = url;\n          }; // Flag to indicate that loading has started/completed\n\n\n          RuntimeLoader.isLoading = false; // List of callbacks for the runtime that come in while loading\n\n          RuntimeLoader.callBackQueue = []; // Path to the Wasm file; default path works for testing only;\n          // if embedded wasm is used then this is never used.\n\n          RuntimeLoader.wasmURL = \"https://unpkg.com/\" + package_json__WEBPACK_IMPORTED_MODULE_1__.name + \"@\" + package_json__WEBPACK_IMPORTED_MODULE_1__.version + \"/rive.wasm\";\n          return RuntimeLoader;\n        }(); // #endregion\n        // #region animations\n        // Wraps animations and instances from the runtime and keeps track of playback\n        // state\n\n\n        var Animation =\n        /** @class */\n        function () {\n          /**\n           * Constructs a new animation\n           * @constructor\n           * @param {any} animation: runtime animation object\n           * @param {any} instance: runtime animation instance object\n           */\n          function Animation(animation, artboard, runtime, playing) {\n            this.animation = animation;\n            this.artboard = artboard;\n            this.playing = playing;\n            this.loopCount = 0; // Time to which the animation should move to on the next render\n\n            this.scrubTo = null;\n            this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n          }\n\n          Object.defineProperty(Animation.prototype, \"name\", {\n            // Returns the animation's name\n            get: function () {\n              return this.animation.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animation.prototype, \"time\", {\n            // Returns the animation's current time\n            get: function () {\n              return this.instance.time;\n            },\n            // Sets the animation's current time\n            set: function (value) {\n              this.instance.time = value;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animation.prototype, \"loopValue\", {\n            // Returns the animation's loop type\n            get: function () {\n              return this.animation.loopValue;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Advances the animation by the give time. If the animation needs scrubbing,\n           * time is ignored and the stored scrub value is used.\n           * @param time the time to advance the animation by if no scrubbing required\n           */\n\n          Animation.prototype.advance = function (time) {\n            if (this.scrubTo === null) {\n              this.instance.advance(time);\n            } else {\n              this.instance.time = 0;\n              this.instance.advance(this.scrubTo);\n              this.scrubTo = null;\n            }\n          };\n\n          Object.defineProperty(Animation.prototype, \"needsScrub\", {\n            get: function () {\n              return this.scrubTo !== null;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Deletes the backing Wasm animation instance; once this is called, this\n           * animation is no more.\n           */\n\n          Animation.prototype.cleanup = function () {\n            this.instance.delete();\n          };\n\n          return Animation;\n        }(); // #endregion\n        // #region state machines\n\n\n        var StateMachineInputType;\n\n        (function (StateMachineInputType) {\n          StateMachineInputType[StateMachineInputType[\"Number\"] = 56] = \"Number\";\n          StateMachineInputType[StateMachineInputType[\"Trigger\"] = 58] = \"Trigger\";\n          StateMachineInputType[StateMachineInputType[\"Boolean\"] = 59] = \"Boolean\";\n        })(StateMachineInputType || (StateMachineInputType = {}));\n        /**\n         * An input for a state machine\n         */\n\n\n        var StateMachineInput =\n        /** @class */\n        function () {\n          function StateMachineInput(type, runtimeInput) {\n            this.type = type;\n            this.runtimeInput = runtimeInput;\n          }\n\n          Object.defineProperty(StateMachineInput.prototype, \"name\", {\n            /**\n             * Returns the name of the input\n             */\n            get: function () {\n              return this.runtimeInput.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(StateMachineInput.prototype, \"value\", {\n            /**\n             * Returns the current value of the input\n             */\n            get: function () {\n              return this.runtimeInput.value;\n            },\n\n            /**\n             * Sets the value of the input\n             */\n            set: function (value) {\n              this.runtimeInput.value = value;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Fires a trigger; does nothing on Number or Boolean input types\n           */\n\n          StateMachineInput.prototype.fire = function () {\n            if (this.type === StateMachineInputType.Trigger) {\n              this.runtimeInput.fire();\n            }\n          };\n\n          return StateMachineInput;\n        }();\n\n        var StateMachine =\n        /** @class */\n        function () {\n          /**\n           * @constructor\n           * @param stateMachine runtime state machine object\n           * @param instance runtime state machine instance object\n           */\n          function StateMachine(stateMachine, runtime, playing, artboard) {\n            this.stateMachine = stateMachine;\n            this.playing = playing;\n            this.artboard = artboard;\n            /**\n             * Caches the inputs from the runtime\n             */\n\n            this.inputs = [];\n            this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n            this.initInputs(runtime);\n          }\n\n          Object.defineProperty(StateMachine.prototype, \"name\", {\n            get: function () {\n              return this.stateMachine.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(StateMachine.prototype, \"statesChanged\", {\n            /**\n             * Returns a list of state names that have changed on this frame\n             */\n            get: function () {\n              var names = [];\n\n              for (var i = 0; i < this.instance.stateChangedCount(); i++) {\n                names.push(this.instance.stateChangedNameByIndex(i));\n              }\n\n              return names;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Fetches references to the state machine's inputs and caches them\n           * @param runtime an instance of the runtime; needed for the SMIInput types\n           */\n\n          StateMachine.prototype.initInputs = function (runtime) {\n            // Fetch the inputs from the runtime if we don't have them\n            for (var i = 0; i < this.instance.inputCount(); i++) {\n              var input = this.instance.input(i);\n              this.inputs.push(this.mapRuntimeInput(input, runtime));\n            }\n          };\n          /**\n           * Maps a runtime input to it's appropriate type\n           * @param input\n           */\n\n\n          StateMachine.prototype.mapRuntimeInput = function (input, runtime) {\n            if (input.type === runtime.SMIInput.bool) {\n              return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n            } else if (input.type === runtime.SMIInput.number) {\n              return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n            } else if (input.type === runtime.SMIInput.trigger) {\n              return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n            }\n          };\n          /**\n           * Deletes the backing Wasm state machine instance; once this is called, this\n           * state machine is no more.\n           */\n\n\n          StateMachine.prototype.cleanup = function () {\n            this.instance.delete();\n          };\n\n          return StateMachine;\n        }(); // #endregion\n        // #region animator\n\n        /**\n         * Manages animation\n         */\n\n\n        var Animator =\n        /** @class */\n        function () {\n          /**\n           * Constructs a new animator\n           * @constructor\n           * @param runtime Rive runtime; needed to instance animations & state machines\n           * @param artboard the artboard that holds all animations and state machines\n           * @param animations optional list of animations\n           * @param stateMachines optional list of state machines\n           */\n          function Animator(runtime, artboard, eventManager, animations, stateMachines) {\n            if (animations === void 0) {\n              animations = [];\n            }\n\n            if (stateMachines === void 0) {\n              stateMachines = [];\n            }\n\n            this.runtime = runtime;\n            this.artboard = artboard;\n            this.eventManager = eventManager;\n            this.animations = animations;\n            this.stateMachines = stateMachines;\n          }\n          /**\n           * Adds animations and state machines by their names. If names are shared\n           * between animations & state machines, then the first one found will be\n           * created. Best not to use the same names for these in your Rive file.\n           * @param animatable the name(s) of animations and state machines to add\n           * @returns a list of names of the playing animations and state machines\n           */\n\n\n          Animator.prototype.add = function (animatables, playing, fireEvent) {\n            if (fireEvent === void 0) {\n              fireEvent = true;\n            }\n\n            animatables = mapToStringArray(animatables); // If animatables is empty, play or pause everything\n\n            if (animatables.length === 0) {\n              this.animations.forEach(function (a) {\n                return a.playing = playing;\n              });\n              this.stateMachines.forEach(function (m) {\n                return m.playing = playing;\n              });\n            } else {\n              // Play/pause already instanced items, or create new instances\n              var instancedAnimationNames = this.animations.map(function (a) {\n                return a.name;\n              });\n              var instancedMachineNames = this.stateMachines.map(function (m) {\n                return m.name;\n              });\n\n              for (var i in animatables) {\n                var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n                var mIndex = instancedMachineNames.indexOf(animatables[i]);\n\n                if (aIndex >= 0 || mIndex >= 0) {\n                  if (aIndex >= 0) {\n                    // Animation is instanced, play/pause it\n                    this.animations[aIndex].playing = playing;\n                  } else {\n                    // State machine is instanced, play/pause it\n                    this.stateMachines[mIndex].playing = playing;\n                  }\n                } else {\n                  // Try to create a new animation instance\n                  var anim = this.artboard.animationByName(animatables[i]);\n\n                  if (anim) {\n                    this.animations.push(new Animation(anim, this.artboard, this.runtime, playing));\n                  } else {\n                    // Try to create a new state machine instance\n                    var sm = this.artboard.stateMachineByName(animatables[i]);\n\n                    if (sm) {\n                      this.stateMachines.push(new StateMachine(sm, this.runtime, playing, this.artboard));\n                    }\n                  }\n                }\n              }\n            } // Fire play/paused events for animations\n\n\n            if (fireEvent) {\n              if (playing) {\n                this.eventManager.fire({\n                  type: EventType.Play,\n                  data: this.playing\n                });\n              } else {\n                this.eventManager.fire({\n                  type: EventType.Pause,\n                  data: this.paused\n                });\n              }\n            }\n\n            return playing ? this.playing : this.paused;\n          };\n          /**\n           * Play the named animations/state machines\n           * @param animatables the names of the animations/machines to play; plays all if empty\n           * @returns a list of the playing items\n           */\n\n\n          Animator.prototype.play = function (animatables) {\n            return this.add(animatables, true);\n          };\n          /**\n          * Pauses named animations and state machines, or everything if nothing is\n          * specified\n          * @param animatables names of the animations and state machines to pause\n          * @returns a list of names of the animations and state machines paused\n          */\n\n\n          Animator.prototype.pause = function (animatables) {\n            return this.add(animatables, false);\n          };\n          /**\n           * Set time of named animations\n           * @param animations names of the animations to scrub\n           * @param value time scrub value, a floating point number to which the playhead is jumped\n           * @returns a list of names of the animations that were scrubbed\n           */\n\n\n          Animator.prototype.scrub = function (animatables, value) {\n            var forScrubbing = this.animations.filter(function (a) {\n              return animatables.includes(a.name);\n            });\n            forScrubbing.forEach(function (a) {\n              return a.scrubTo = value;\n            });\n            return forScrubbing.map(function (a) {\n              return a.name;\n            });\n          };\n\n          Object.defineProperty(Animator.prototype, \"playing\", {\n            /**\n             * Returns a list of names of all animations and state machines currently\n             * playing\n             */\n            get: function () {\n              return this.animations.filter(function (a) {\n                return a.playing;\n              }).map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.filter(function (m) {\n                return m.playing;\n              }).map(function (m) {\n                return m.name;\n              }));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"paused\", {\n            /**\n             * Returns a list of names of all animations and state machines currently\n             * paused\n             */\n            get: function () {\n              return this.animations.filter(function (a) {\n                return !a.playing;\n              }).map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.filter(function (m) {\n                return !m.playing;\n              }).map(function (m) {\n                return m.name;\n              }));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Stops and removes all named animations and state machines\n           * @param animatables animations and state machines to remove\n           * @returns a list of names of removed items\n           */\n\n          Animator.prototype.stop = function (animatables) {\n            var _this = this;\n\n            animatables = mapToStringArray(animatables); // If nothing's specified, wipe them out, all of them\n\n            var removedNames = []; // Stop everything\n\n            if (animatables.length === 0) {\n              removedNames = this.animations.map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.map(function (m) {\n                return m.name;\n              })); // Clean up before emptying the arrays\n\n              this.animations.forEach(function (a) {\n                return a.cleanup();\n              });\n              this.stateMachines.forEach(function (m) {\n                return m.cleanup();\n              }); // Empty out the arrays\n\n              this.animations.splice(0, this.animations.length);\n              this.stateMachines.splice(0, this.stateMachines.length);\n            } else {\n              // Remove only the named animations/state machines\n              var animationsToRemove = this.animations.filter(function (a) {\n                return animatables.includes(a.name);\n              });\n              animationsToRemove.forEach(function (a) {\n                a.cleanup();\n\n                _this.animations.splice(_this.animations.indexOf(a), 1);\n              });\n              var machinesToRemove = this.stateMachines.filter(function (m) {\n                return animatables.includes(m.name);\n              });\n              machinesToRemove.forEach(function (m) {\n                m.cleanup();\n\n                _this.stateMachines.splice(_this.stateMachines.indexOf(m), 1);\n              });\n              removedNames = animationsToRemove.map(function (a) {\n                return a.name;\n              }).concat(machinesToRemove.map(function (m) {\n                return m.name;\n              }));\n            }\n\n            this.eventManager.fire({\n              type: EventType.Stop,\n              data: removedNames\n            }); // Return the list of animations removed\n\n            return removedNames;\n          };\n\n          Object.defineProperty(Animator.prototype, \"isPlaying\", {\n            /**\n             * Returns true if at least one animation is active\n             */\n            get: function () {\n              return this.animations.reduce(function (acc, curr) {\n                return acc || curr.playing;\n              }, false) || this.stateMachines.reduce(function (acc, curr) {\n                return acc || curr.playing;\n              }, false);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"isPaused\", {\n            /**\n             * Returns true if all animations are paused and there's at least one animation\n             */\n            get: function () {\n              return !this.isPlaying && (this.animations.length > 0 || this.stateMachines.length > 0);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"isStopped\", {\n            /**\n             * Returns true if there are no playing or paused animations/state machines\n             */\n            get: function () {\n              return this.animations.length === 0 && this.stateMachines.length === 0;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * If there are no animations or state machines, add the first one found\n           * @returns the name of the animation or state machine instanced\n           */\n\n          Animator.prototype.atLeastOne = function (playing, fireEvent) {\n            if (fireEvent === void 0) {\n              fireEvent = true;\n            }\n\n            var instancedName;\n\n            if (this.animations.length === 0 && this.stateMachines.length === 0) {\n              if (this.artboard.animationCount() > 0) {\n                // Add the first animation\n                this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n              } else if (this.artboard.stateMachineCount() > 0) {\n                // Add the first state machine\n                this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n              }\n            }\n\n            return instancedName;\n          };\n          /**\n           * Checks if any animations have looped and if so, fire the appropriate event\n           */\n\n\n          Animator.prototype.handleLooping = function () {\n            for (var _i = 0, _a = this.animations.filter(function (a) {\n              return a.playing;\n            }); _i < _a.length; _i++) {\n              var animation = _a[_i]; // Emit if the animation looped\n\n              if (animation.loopValue === 0 && animation.loopCount) {\n                animation.loopCount = 0; // This is a one-shot; if it has ended, delete the instance\n\n                this.stop(animation.name);\n              } else if (animation.loopValue === 1 && animation.loopCount) {\n                this.eventManager.fire({\n                  type: EventType.Loop,\n                  data: {\n                    animation: animation.name,\n                    type: LoopType.Loop\n                  }\n                });\n                animation.loopCount = 0;\n              } // Wasm indicates a loop at each time the animation\n              // changes direction, so a full loop/lap occurs every\n              // two loop counts\n              else if (animation.loopValue === 2 && animation.loopCount > 1) {\n                this.eventManager.fire({\n                  type: EventType.Loop,\n                  data: {\n                    animation: animation.name,\n                    type: LoopType.PingPong\n                  }\n                });\n                animation.loopCount = 0;\n              }\n            }\n          };\n          /**\n           * Checks if states have changed in state machines and fires a statechange\n           * event\n           */\n\n\n          Animator.prototype.handleStateChanges = function () {\n            var statesChanged = [];\n\n            for (var _i = 0, _a = this.stateMachines.filter(function (sm) {\n              return sm.playing;\n            }); _i < _a.length; _i++) {\n              var stateMachine = _a[_i];\n              statesChanged.push.apply(statesChanged, stateMachine.statesChanged);\n            }\n\n            if (statesChanged.length > 0) {\n              this.eventManager.fire({\n                type: EventType.StateChange,\n                data: statesChanged\n              });\n            }\n          };\n\n          return Animator;\n        }(); // #endregion\n        // #region events\n\n        /**\n         * Supported event types triggered in Rive\n         */\n\n\n        var EventType;\n\n        (function (EventType) {\n          EventType[\"Load\"] = \"load\";\n          EventType[\"LoadError\"] = \"loaderror\";\n          EventType[\"Play\"] = \"play\";\n          EventType[\"Pause\"] = \"pause\";\n          EventType[\"Stop\"] = \"stop\";\n          EventType[\"Loop\"] = \"loop\";\n          EventType[\"Draw\"] = \"draw\";\n          EventType[\"StateChange\"] = \"statechange\";\n        })(EventType || (EventType = {}));\n        /**\n         * Looping types: one-shot, loop, and ping-pong\n         */\n\n\n        var LoopType;\n\n        (function (LoopType) {\n          LoopType[\"OneShot\"] = \"oneshot\";\n          LoopType[\"Loop\"] = \"loop\";\n          LoopType[\"PingPong\"] = \"pingpong\"; // has value 2 in runtime\n        })(LoopType || (LoopType = {})); // Manages Rive events and listeners\n\n\n        var EventManager =\n        /** @class */\n        function () {\n          function EventManager(listeners) {\n            if (listeners === void 0) {\n              listeners = [];\n            }\n\n            this.listeners = listeners;\n          } // Gets listeners of specified type\n\n\n          EventManager.prototype.getListeners = function (type) {\n            return this.listeners.filter(function (e) {\n              return e.type === type;\n            });\n          }; // Adds a listener\n\n\n          EventManager.prototype.add = function (listener) {\n            if (!this.listeners.includes(listener)) {\n              this.listeners.push(listener);\n            }\n          };\n          /**\n           * Removes a listener\n           * @param listener the listener with the callback to be removed\n           */\n\n\n          EventManager.prototype.remove = function (listener) {\n            // We can't simply look for the listener as it'll be a different instance to\n            // one originally subscribed. Find all the listeners of the right type and\n            // then check their callbacks which should match.\n            for (var i = 0; i < this.listeners.length; i++) {\n              var currentListener = this.listeners[i];\n\n              if (currentListener.type === listener.type) {\n                if (currentListener.callback === listener.callback) {\n                  this.listeners.splice(i, 1);\n                  break;\n                }\n              }\n            }\n          };\n          /**\n           * Clears all listeners of specified type, or every listener if no type is\n           * specified\n           * @param type the type of listeners to clear, or all listeners if not\n           * specified\n           */\n\n\n          EventManager.prototype.removeAll = function (type) {\n            var _this = this;\n\n            if (!type) {\n              this.listeners.splice(0, this.listeners.length);\n            } else {\n              this.listeners.filter(function (l) {\n                return l.type === type;\n              }).forEach(function (l) {\n                return _this.remove(l);\n              });\n            }\n          }; // Fires an event\n\n\n          EventManager.prototype.fire = function (event) {\n            var eventListeners = this.getListeners(event.type);\n            eventListeners.forEach(function (listener) {\n              return listener.callback(event);\n            });\n          };\n\n          return EventManager;\n        }(); // Manages a queue of tasks\n\n\n        var TaskQueueManager =\n        /** @class */\n        function () {\n          function TaskQueueManager(eventManager) {\n            this.eventManager = eventManager;\n            this.queue = [];\n          } // Adds a task top the queue\n\n\n          TaskQueueManager.prototype.add = function (task) {\n            this.queue.push(task);\n          }; // Processes all tasks in the queue\n\n\n          TaskQueueManager.prototype.process = function () {\n            while (this.queue.length > 0) {\n              var task = this.queue.shift();\n              task === null || task === void 0 ? void 0 : task.action();\n\n              if (task === null || task === void 0 ? void 0 : task.event) {\n                this.eventManager.fire(task.event);\n              }\n            }\n          };\n\n          return TaskQueueManager;\n        }();\n\n        var Rive =\n        /** @class */\n        function () {\n          function Rive(params) {\n            var _a; // Flag to indicate if the layout has changed; used by the renderer to know\n            // when to align\n\n\n            this._updateLayout = true;\n            /**\n             * Flag to active/deactivate renderer\n             */\n\n            this.isRendererActive = true; // Tracks if a Rive file is loaded\n\n            this.loaded = false;\n            /**\n             * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n             * commands (e.g. contents) can be called as soon as the file is loaded.\n             * However, playback commands need to be queued and run in order once initial\n             * animations and autoplay has been sorted out. This applies to play, pause,\n             * and start.\n             */\n\n            this.readyForPlaying = false; // Runtime artboard\n\n            this.artboard = null; // Durations to generate a frame for the last second. Used for performance profiling.\n\n            this.durations = [];\n            this.frameTimes = [];\n            this.frameCount = 0;\n            /**\n             * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n             */\n\n            this.renderSecondTimer = 0;\n            this.canvas = params.canvas;\n            this.src = params.src;\n            this.buffer = params.buffer;\n            this.layout = (_a = params.layout) !== null && _a !== void 0 ? _a : new Layout(); // New event management system\n\n            this.eventManager = new EventManager();\n            if (params.onLoad) this.on(EventType.Load, params.onLoad);\n            if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n            if (params.onPlay) this.on(EventType.Play, params.onPlay);\n            if (params.onPause) this.on(EventType.Pause, params.onPause);\n            if (params.onStop) this.on(EventType.Stop, params.onStop);\n            if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n            if (params.onStateChange) this.on(EventType.StateChange, params.onStateChange);\n            /**\n             * @deprecated Use camelCase'd versions instead.\n             */\n\n            if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n            if (params.onloaderror && !params.onLoadError) this.on(EventType.LoadError, params.onloaderror);\n            if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n            if (params.onpause && !params.onPause) this.on(EventType.Pause, params.onpause);\n            if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n            if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n            if (params.onstatechange && !params.onStateChange) this.on(EventType.StateChange, params.onstatechange); // Hook up the task queue\n\n            this.taskQueue = new TaskQueueManager(this.eventManager);\n            this.init({\n              src: this.src,\n              buffer: this.buffer,\n              autoplay: params.autoplay,\n              animations: params.animations,\n              stateMachines: params.stateMachines,\n              artboard: params.artboard,\n              useOffscreenRenderer: params.useOffscreenRenderer\n            });\n          } // Alternative constructor to build a Rive instance from an interface/object\n\n\n          Rive.new = function (params) {\n            console.warn('This function is deprecated: please use `new Rive({})` instead');\n            return new Rive(params);\n          }; // Initializes the Rive object either from constructor or load()\n\n\n          Rive.prototype.init = function (_a) {\n            var _this = this;\n\n            var src = _a.src,\n                buffer = _a.buffer,\n                animations = _a.animations,\n                stateMachines = _a.stateMachines,\n                artboard = _a.artboard,\n                _b = _a.autoplay,\n                autoplay = _b === void 0 ? false : _b,\n                _c = _a.useOffscreenRenderer,\n                useOffscreenRenderer = _c === void 0 ? false : _c;\n            this.src = src;\n            this.buffer = buffer; // If no source file url specified, it's a bust\n\n            if (!this.src && !this.buffer) {\n              throw new Error(Rive.missingErrorMessage);\n            } // List of animations that should be initialized.\n\n\n            var startingAnimationNames = mapToStringArray(animations); // List of state machines that should be initialized\n\n            var startingStateMachineNames = mapToStringArray(stateMachines); // Ensure loaded is marked as false if loading new file\n\n            this.loaded = false;\n            this.readyForPlaying = false; // Ensure the runtime is loaded\n\n            RuntimeLoader.awaitInstance().then(function (runtime) {\n              _this.runtime = runtime; // Get the canvas where you want to render the animation and create a renderer\n\n              _this.renderer = _this.runtime.makeRenderer(_this.canvas, useOffscreenRenderer); // Initial size adjustment based on devicePixelRatio if no width/height are specified explicitly\n\n              if (!(_this.canvas.width || _this.canvas.height)) {\n                _this.resizeDrawingSurfaceToCanvas();\n              } // Load Rive data from a source uri or a data buffer\n\n\n              _this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).catch(function (e) {\n                console.error(e);\n              });\n            }).catch(function (e) {\n              console.error(e);\n            });\n          }; // Initializes runtime with Rive data and preps for playing\n\n\n          Rive.prototype.initData = function (artboardName, animationNames, stateMachineNames, autoplay) {\n            var _a;\n\n            return __awaiter(this, void 0, void 0, function () {\n              var _b, _c, msg;\n\n              return __generator(this, function (_d) {\n                switch (_d.label) {\n                  case 0:\n                    if (!this.src) return [3\n                    /*break*/\n                    , 2];\n                    _b = this;\n                    return [4\n                    /*yield*/\n                    , loadRiveFile(this.src)];\n\n                  case 1:\n                    _b.buffer = _d.sent();\n                    _d.label = 2;\n\n                  case 2:\n                    // Load the Rive file\n                    _c = this;\n                    return [4\n                    /*yield*/\n                    , this.runtime.load(new Uint8Array(this.buffer))];\n\n                  case 3:\n                    // Load the Rive file\n                    _c.file = _d.sent();\n\n                    if (this.file) {\n                      // Initialize and draw frame\n                      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay); // Everything's set up, emit a load event\n\n                      this.loaded = true;\n                      this.eventManager.fire({\n                        type: EventType.Load,\n                        data: (_a = this.src) !== null && _a !== void 0 ? _a : 'buffer'\n                      }); // Flag ready for playback commands and clear the task queue; this order\n                      // is important or it may infinitely recurse\n\n                      this.readyForPlaying = true;\n                      this.taskQueue.process();\n                      this.drawFrame();\n                      return [2\n                      /*return*/\n                      , Promise.resolve()];\n                    } else {\n                      msg = 'Problem loading file; may be corrupt!';\n                      console.warn(msg);\n                      this.eventManager.fire({\n                        type: EventType.LoadError,\n                        data: msg\n                      });\n                      return [2\n                      /*return*/\n                      , Promise.reject(msg)];\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }; // Initialize for playback\n\n\n          Rive.prototype.initArtboard = function (artboardName, animationNames, stateMachineNames, autoplay) {\n            // Fetch the artboard\n            var rootArtboard = artboardName ? this.file.artboardByName(artboardName) : this.file.defaultArtboard(); // Check we have a working artboard\n\n            if (!rootArtboard) {\n              var msg = 'Invalid artboard name or no default artboard';\n              console.warn(msg);\n              this.eventManager.fire({\n                type: EventType.LoadError,\n                data: msg\n              });\n              return;\n            } // Instance the artboard\n\n\n            this.artboard = rootArtboard.instance(); // Check that the artboard has at least 1 animation\n\n            if (this.artboard.animationCount() < 1) {\n              var msg = 'Artboard has no animations';\n              this.eventManager.fire({\n                type: EventType.LoadError,\n                data: msg\n              });\n              throw msg;\n            } // Initialize the animator\n\n\n            this.animator = new Animator(this.runtime, this.artboard, this.eventManager); // Initialize the animations; as loaded hasn't happened yet, we need to\n            // suppress firing the play/pause events until the load event has fired. To\n            // do this we tell the animator to suppress firing events, and add event\n            // firing to the task queue.\n\n            var instanceNames;\n\n            if (animationNames.length > 0 || stateMachineNames.length > 0) {\n              instanceNames = animationNames.concat(stateMachineNames);\n              this.animator.add(instanceNames, autoplay, false);\n            } else {\n              instanceNames = [this.animator.atLeastOne(autoplay, false)];\n            } // Queue up firing the playback events\n\n\n            this.taskQueue.add({\n              action: function () {},\n              event: {\n                type: autoplay ? EventType.Play : EventType.Pause,\n                data: instanceNames\n              }\n            });\n          }; // Draws the current artboard frame\n\n\n          Rive.prototype.drawFrame = function () {\n            this.startRendering();\n          };\n          /**\n           * Draw rendering loop; renders animation frames at the correct time interval.\n           * @param time the time at which to render a frame\n           */\n\n\n          Rive.prototype.draw = function (time, onSecond) {\n            var before = performance.now(); // Clear the frameRequestId, as we're now rendering a fresh frame\n\n            this.frameRequestId = null; // On the first pass, make sure lastTime has a valid value\n\n            if (!this.lastRenderTime) {\n              this.lastRenderTime = time;\n            } // Handle the onSecond callback\n\n\n            this.renderSecondTimer += time - this.lastRenderTime;\n\n            if (this.renderSecondTimer > 5000) {\n              this.renderSecondTimer = 0;\n              onSecond === null || onSecond === void 0 ? void 0 : onSecond();\n            } // Calculate the elapsed time between frames in seconds\n\n\n            var elapsedTime = (time - this.lastRenderTime) / 1000;\n            this.lastRenderTime = time; // Advance non-paused animations by the elapsed number of seconds\n            // Also advance any animations that require scrubbing\n\n            var activeAnimations = this.animator.animations.filter(function (a) {\n              return a.playing || a.needsScrub;\n            }) // The scrubbed animations must be applied first to prevent weird artifacts\n            // if the playing animations conflict with the scrubbed animating attribuates.\n            .sort(function (first, second) {\n              return first.needsScrub ? -1 : 1;\n            });\n\n            for (var _i = 0, activeAnimations_1 = activeAnimations; _i < activeAnimations_1.length; _i++) {\n              var animation = activeAnimations_1[_i];\n              animation.advance(elapsedTime);\n\n              if (animation.instance.didLoop) {\n                animation.loopCount += 1;\n              }\n\n              animation.instance.apply(1.0);\n            } // Advance non-paused state machines by the elapsed number of seconds\n\n\n            var activeStateMachines = this.animator.stateMachines.filter(function (a) {\n              return a.playing;\n            });\n\n            for (var _a = 0, activeStateMachines_1 = activeStateMachines; _a < activeStateMachines_1.length; _a++) {\n              var stateMachine = activeStateMachines_1[_a];\n              stateMachine.instance.advance(elapsedTime); // stateMachine.instance.apply(this.artboard);\n            } // Once the animations have been applied to the artboard, advance it\n            // by the elapsed time.\n\n\n            this.artboard.advance(elapsedTime);\n            var renderer = this.renderer; // Canvas must be wiped to prevent artifacts\n\n            renderer.clear();\n            renderer.save(); // Update the renderer alignment if necessary\n\n            this.alignRenderer();\n            this.artboard.draw(renderer);\n            renderer.restore();\n            renderer.flush(); // Check for any animations that looped\n\n            this.animator.handleLooping(); // Check for any state machines that had a state change\n\n            this.animator.handleStateChanges(); // Add duration to create frame to durations array\n\n            this.frameCount++;\n            var after = performance.now();\n            this.frameTimes.push(after);\n            this.durations.push(after - before);\n\n            while (this.frameTimes[0] <= after - 1000) {\n              this.frameTimes.shift();\n              this.durations.shift();\n            } // Calling requestAnimationFrame will rerun draw() at the correct rate:\n            // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n\n\n            if (this.animator.isPlaying) {\n              // Request a new rendering frame\n              this.startRendering();\n            } else if (this.animator.isPaused) {\n              // Reset the end time so on playback it starts at the correct frame\n              this.lastRenderTime = 0;\n            } else if (this.animator.isStopped) {\n              // Reset animation instances, artboard and time\n              // TODO: implement this properly when we have instancing\n              // this.initArtboard();\n              // this.drawFrame();\n              this.lastRenderTime = 0;\n            }\n          };\n          /**\n           * Align the renderer\n           */\n\n\n          Rive.prototype.alignRenderer = function () {\n            var _a = this,\n                renderer = _a.renderer,\n                runtime = _a.runtime,\n                _layout = _a._layout,\n                artboard = _a.artboard; // Align things up safe in the knowledge we can restore if changed\n\n\n            renderer.align(_layout.runtimeFit(runtime), _layout.runtimeAlignment(runtime), {\n              minX: _layout.minX,\n              minY: _layout.minY,\n              maxX: _layout.maxX,\n              maxY: _layout.maxY\n            }, artboard.bounds);\n          };\n\n          Object.defineProperty(Rive.prototype, \"fps\", {\n            get: function () {\n              return this.durations.length;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"frameTime\", {\n            get: function () {\n              if (this.durations.length === 0) {\n                return 0;\n              }\n\n              return (this.durations.reduce(function (a, b) {\n                return a + b;\n              }, 0) / this.durations.length).toFixed(4);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Cleans up any Wasm-generated objects that need to be manually destroyed:\n           * artboard instances, animation instances, state machine instances.\n           *\n           * Once this is called, things will need to be reinitialized or bad things\n           * might happen.\n           */\n\n          Rive.prototype.cleanup = function () {\n            this.artboard.delete(); // TODO: delete animation and state machine instances\n          }; // Plays specified animations; if none specified, it unpauses everything.\n\n\n          Rive.prototype.play = function (animationNames, autoplay) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, queue up the play\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.play(animationNames, autoplay);\n                }\n              });\n              return;\n            }\n\n            this.animator.play(animationNames);\n            this.startRendering();\n          }; // Pauses specified animations; if none specified, pauses all.\n\n\n          Rive.prototype.pause = function (animationNames) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, early out, nothing to pause\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.pause(animationNames);\n                }\n              });\n              return;\n            }\n\n            this.animator.pause(animationNames);\n          };\n\n          Rive.prototype.scrub = function (animationNames, value) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, early out, nothing to pause\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.scrub(animationNames, value);\n                }\n              });\n              return;\n            } // Scrub the animation time; we draw a single frame here so that if\n            // nothing's currently playing, the scrubbed animation is still rendered/\n\n\n            this.animator.scrub(animationNames, value || 0);\n            this.drawFrame();\n          }; // Stops specified animations; if none specifies, stops them all.\n\n\n          Rive.prototype.stop = function (animationNames) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, early out, nothing to pause\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.stop(animationNames);\n                }\n              });\n              return;\n            }\n\n            this.animator.stop(animationNames);\n          };\n          /**\n           * Resets the animation\n           * @param artboard the name of the artboard, or default if none given\n           * @param animations the names of animations for playback\n           * @param stateMachines the names of state machines for playback\n           * @param autoplay whether to autoplay when reset, defaults to false\n           *\n           */\n\n\n          Rive.prototype.reset = function (params) {\n            var _a; // Get the current artboard, animations, state machines, and playback states\n\n\n            var artBoardName = params === null || params === void 0 ? void 0 : params.artboard;\n            var animationNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.animations);\n            var stateMachineNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.stateMachines);\n            var autoplay = (_a = params === null || params === void 0 ? void 0 : params.autoplay) !== null && _a !== void 0 ? _a : false; // Stop everything and clean up\n\n            this.stop();\n            this.cleanup(); // Reinitialize an artboard instance with the state\n\n            this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n          }; // Loads a new Rive file, keeping listeners in place\n\n\n          Rive.prototype.load = function (params) {\n            // Stop all animations\n            this.stop(); // Reinitialize\n\n            this.init(params);\n          };\n\n          Object.defineProperty(Rive.prototype, \"layout\", {\n            /**\n             * Returns the current layout. Note that layout should be treated as\n             * immutable. If you want to change the layout, create a new one use the\n             * layout setter\n             */\n            get: function () {\n              return this._layout;\n            },\n            // Sets a new layout\n            set: function (layout) {\n              this._layout = layout; // If the maxX or maxY are 0, then set them to the canvas width and height\n\n              if (!layout.maxX || !layout.maxY) {\n                this.resizeToCanvas();\n              }\n\n              if (this.loaded && !this.animator.isPlaying) {\n                this.drawFrame();\n              }\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Sets the layout bounds to the current canvas size; this is typically called\n           * when the canvas is resized\n           */\n\n          Rive.prototype.resizeToCanvas = function () {\n            this._layout = this.layout.copyWith({\n              minX: 0,\n              minY: 0,\n              maxX: this.canvas.width,\n              maxY: this.canvas.height\n            });\n          };\n          /**\n           * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n           * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n           * and resize the layout to match the new drawing surface afterwards. Useful function for consumers\n           * to include in a window resize listener\n           */\n\n\n          Rive.prototype.resizeDrawingSurfaceToCanvas = function () {\n            if (this.canvas instanceof HTMLCanvasElement && !!window) {\n              var _a = this.canvas.getBoundingClientRect(),\n                  width = _a.width,\n                  height = _a.height;\n\n              var dpr = window.devicePixelRatio || 1;\n              this.canvas.width = dpr * width;\n              this.canvas.height = dpr * height;\n              this.startRendering();\n              this.resizeToCanvas();\n            }\n          };\n\n          Object.defineProperty(Rive.prototype, \"source\", {\n            // Returns the animation source, which may be undefined\n            get: function () {\n              return this.src;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"activeArtboard\", {\n            /**\n             * Returns the name of the active artboard\n             */\n            get: function () {\n              return this.artboard.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"animationNames\", {\n            // Returns a list of animation names on the chosen artboard\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              var animationNames = [];\n\n              for (var i = 0; i < this.artboard.animationCount(); i++) {\n                animationNames.push(this.artboard.animationByIndex(i).name);\n              }\n\n              return animationNames;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"stateMachineNames\", {\n            /**\n             * Returns a list of state machine names from the current artboard\n             */\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              var stateMachineNames = [];\n\n              for (var i = 0; i < this.artboard.stateMachineCount(); i++) {\n                stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n              }\n\n              return stateMachineNames;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Returns the inputs for the specified instanced state machine, or an empty\n           * list if the name is invalid or the state machine is not instanced\n           * @param name the state machine name\n           * @returns the inputs for the named state machine\n           */\n\n          Rive.prototype.stateMachineInputs = function (name) {\n            // If the file's not loaded, early out, nothing to pause\n            if (!this.loaded) {\n              return;\n            }\n\n            var stateMachine = this.animator.stateMachines.find(function (m) {\n              return m.name === name;\n            });\n            return stateMachine === null || stateMachine === void 0 ? void 0 : stateMachine.inputs;\n          };\n\n          Object.defineProperty(Rive.prototype, \"playingStateMachineNames\", {\n            // Returns a list of playing machine names\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.stateMachines.filter(function (m) {\n                return m.playing;\n              }).map(function (m) {\n                return m.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"playingAnimationNames\", {\n            // Returns a list of playing animation names\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.animations.filter(function (a) {\n                return a.playing;\n              }).map(function (a) {\n                return a.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"pausedAnimationNames\", {\n            // Returns a list of paused animation names\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.animations.filter(function (a) {\n                return !a.playing;\n              }).map(function (a) {\n                return a.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"pausedStateMachineNames\", {\n            /**\n             *  Returns a list of paused machine names\n             * @returns a list of state machine names that are paused\n             */\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.stateMachines.filter(function (m) {\n                return !m.playing;\n              }).map(function (m) {\n                return m.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isPlaying\", {\n            /**\n             * @returns true if any animation is playing\n             */\n            get: function () {\n              return this.animator.isPlaying;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isPaused\", {\n            /**\n             * @returns true if all instanced animations are paused\n             */\n            get: function () {\n              return this.animator.isPaused;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isStopped\", {\n            /**\n             * @returns true if no animations are playing or paused\n             */\n            get: function () {\n              return this.animator.isStopped;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"bounds\", {\n            /**\n             * @returns the bounds of the current artboard, or undefined if the artboard\n             * isn't loaded yet.\n             */\n            get: function () {\n              return this.artboard ? this.artboard.bounds : undefined;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Subscribe to Rive-generated events\n           * @param type the type of event to subscribe to\n           * @param callback callback to fire when the event occurs\n           */\n\n          Rive.prototype.on = function (type, callback) {\n            this.eventManager.add({\n              type: type,\n              callback: callback\n            });\n          };\n          /**\n           * Unsubscribes from a Rive-generated event\n           * @param callback the callback to unsubscribe from\n           */\n\n\n          Rive.prototype.unsubscribe = function (type, callback) {\n            this.eventManager.remove({\n              type: type,\n              callback: callback\n            });\n          };\n          /**\n           * Unsubscribes all listeners from an event type, or everything if no type is\n           * given\n           * @param type the type of event to unsubscribe from, or all types if\n           * undefined\n           */\n\n\n          Rive.prototype.unsubscribeAll = function (type) {\n            this.eventManager.removeAll(type);\n          };\n          /**\n           * Stops the rendering loop; this is different from pausing in that it doesn't\n           * change the state of any animation. It stops rendering from occurring. This\n           * is designed for situations such as when Rive isn't visible.\n           *\n           * The only way to start rendering again is to call `startRendering`.\n           * Animations that are marked as playing will start from the position that\n           * they would have been at if rendering had not been stopped.\n           */\n\n\n          Rive.prototype.stopRendering = function () {\n            if (this.loaded && this.frameRequestId) {\n              if (this.runtime.cancelAnimationFrame) {\n                this.runtime.cancelAnimationFrame(this.frameRequestId);\n              } else {\n                cancelAnimationFrame(this.frameRequestId);\n              }\n\n              this.frameRequestId = null;\n            }\n          };\n          /**\n           * Starts the rendering loop if it has been previously stopped. If the\n           * renderer is already active, then this will have zero effect.\n           */\n\n\n          Rive.prototype.startRendering = function () {\n            if (this.loaded && !this.frameRequestId) {\n              if (this.runtime.requestAnimationFrame) {\n                this.frameRequestId = this.runtime.requestAnimationFrame(this.draw.bind(this));\n              } else {\n                this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n              }\n            }\n          };\n\n          Object.defineProperty(Rive.prototype, \"contents\", {\n            /**\n             * Returns the contents of a Rive file: the artboards, animations, and state machines\n             */\n            get: function () {\n              if (!this.loaded) {\n                return undefined;\n              }\n\n              var riveContents = {\n                artboards: []\n              };\n\n              for (var i = 0; i < this.file.artboardCount(); i++) {\n                var artboard = this.file.artboardByIndex(i);\n                var artboardContents = {\n                  name: artboard.name,\n                  animations: [],\n                  stateMachines: []\n                };\n\n                for (var j = 0; j < artboard.animationCount(); j++) {\n                  var animation = artboard.animationByIndex(j);\n                  artboardContents.animations.push(animation.name);\n                }\n\n                for (var k = 0; k < artboard.stateMachineCount(); k++) {\n                  var stateMachine = artboard.stateMachineByIndex(k);\n                  var name_1 = stateMachine.name;\n                  var instance = new this.runtime.StateMachineInstance(stateMachine, artboard);\n                  var inputContents = [];\n\n                  for (var l = 0; l < instance.inputCount(); l++) {\n                    var input = instance.input(l);\n                    inputContents.push({\n                      name: input.name,\n                      type: input.type\n                    });\n                  }\n\n                  artboardContents.stateMachines.push({\n                    name: name_1,\n                    inputs: inputContents\n                  });\n                }\n\n                riveContents.artboards.push(artboardContents);\n              }\n\n              return riveContents;\n            },\n            enumerable: false,\n            configurable: true\n          }); // Error message for missing source or buffer\n\n          Rive.missingErrorMessage = 'Rive source file or data buffer required';\n          return Rive;\n        }(); // Loads Rive data from a URI via fetch.\n\n\n        var loadRiveFile = function (src) {\n          return __awaiter(void 0, void 0, void 0, function () {\n            var req, res, buffer;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  req = new Request(src);\n                  return [4\n                  /*yield*/\n                  , fetch(req)];\n\n                case 1:\n                  res = _a.sent();\n                  return [4\n                  /*yield*/\n                  , res.arrayBuffer()];\n\n                case 2:\n                  buffer = _a.sent();\n                  return [2\n                  /*return*/\n                  , buffer];\n              }\n            });\n          });\n        }; // #endregion\n        // #region utility functions\n\n        /*\n         * Utility function to ensure an object is a string array\n         */\n\n\n        var mapToStringArray = function (obj) {\n          if (typeof obj === 'string') {\n            return [obj];\n          } else if (obj instanceof Array) {\n            return obj;\n          } // If obj is undefined, return empty array\n\n\n          return [];\n        }; // #endregion\n        // #region testing utilities\n        // Exports to only be used for tests\n\n\n        var Testing = {\n          EventManager: EventManager,\n          TaskQueueManager: TaskQueueManager\n        }; // #endregion\n      })();\n      /******/\n\n\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"sources":["webpack://rive/webpack/universalModuleDefinition","webpack://rive/npm/webgl_advanced/webgl_advanced.mjs","webpack://rive/webpack/bootstrap","webpack:/rive/webpack/runtime/define property getters","webpack:/rive/webpack/runtime/hasOwnProperty shorthand","webpack:/rive/webpack/runtime/make namespace object","webpack://rive/src/rive.ts"],"names":[],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rive\"] = factory();\n\telse\n\t\troot[\"rive\"] = factory();\n})(this, function() {\nreturn ","\nvar Rive = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\n\nnull;var k;k||(k=typeof Rive !== 'undefined' ? Rive : {});var aa,ca;k.ready=new Promise(function(a,b){aa=a;ca=b});function da(){function a(c){let d=0;b.forEach((e,f)=>{c>e?b.delete(f):d=Math.max(d,f)});return d}console.assert(!0);const b=new Map;this.push=function(c){const d=Date.now();b.set(c,d+1E3);return a(d)}}\nk.onRuntimeInitialized=function(){function a(t){this.od=t;this.ke=t.getContext(\"2d\");this.oe=g;this.td=[];this.Dd=0;this.clear=function(){console.assert(0==this.Dd);this.td=[];h.delete(this)};this.save=function(){++this.Dd;this.td.push(g.save.bind(g))};this.restore=function(){0<this.Dd&&(this.td.push(g.restore.bind(g)),--this.Dd)};this.transform=function(v){this.td.push(g.transform.bind(g,v))};this.align=function(v,y,E,L){this.td.push(g.align.bind(g,v,y,E,L))};this.computeAlignment=function(v,y,E,\nL,N){this.td.push(g.computeAlignment.bind(g,v,y,E,L,N))};this.flush=function(){console.assert(0==this.Dd);h.add(this);f&&d()}}function b(t){var v={alpha:1,depth:0,stencil:8,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:0,renderViaOffscreenBackBuffer:0},y=t.getContext(\"webgl2\",v);y||(y=t.getContext(\"webgl\",v));var E=y,L=ea(fa),N={Qe:L,attributes:v,version:v.Re,Td:E};E.canvas&&\n(E.canvas.Oe=N);fa[L]=N;(\"undefined\"===typeof v.te||v.te)&&ha(N);l=fa[L];k.qe=q=l&&l.Td;v=n(t.width,t.height);v.me=L;v.od=t;v.be=t.width;v.ae=t.height;v.le=y;return v}function c(t,v){const y=v-1;console.assert(0==(v&y));return t+y&~y}function d(){const t=g.ne;var v=0,y=0,E=0;const L=Array(h.size);var N=0;for(var J of h)J.zd=Math.min(J.od.width,t),J.yd=Math.min(J.od.height,t),J.Ud=J.yd*J.zd,v=Math.max(v,J.zd),y=Math.max(y,J.yd),E+=J.Ud,L[N++]=J;h.clear();if(!(0>=E)){v=1<<(0>=v?0:32-Math.clz32(v-1));\nfor(y=1<<(0>=y?0:32-Math.clz32(y-1));y*v<E;)v<=y?v*=2:y*=2;v=Math.min(v,t);v=Math.min(y,t);L.sort((ba,qb)=>qb.Ud-ba.Ud);E=new k.DynamicRectanizer(t);for(J=0;J<L.length;){E.reset(v,y);for(N=J;N<L.length;++N){var I=L[N],F=E.addRect(I.zd,I.yd);if(0>F){console.assert(N>J);break}I.Id=F&65535;I.Jd=F>>16}I=c(r.push(E.drawWidth()),Math.min(512,t));F=c(x.push(E.drawHeight()),Math.min(512,t));console.assert(I>=E.drawWidth());console.assert(F>=E.drawHeight());console.assert(I<=t);console.assert(F<=t);g.od.width!=\nI&&(g.od.width=I);g.od.height!=F&&(g.od.height=F);g.clear();for(I=J;I<N;++I){F=L[I];g.saveClipRect(F.Id,F.Jd,F.Id+F.zd,F.Jd+F.yd);let ba=new k.Mat2D;ba.xx=F.zd/F.od.width;ba.yy=F.yd/F.od.height;ba.xy=ba.yx=0;ba.tx=F.Id;ba.ty=F.Jd;g.transform(ba);for(const qb of F.td)qb();g.restoreClipRect();F.td=[]}for(g.flush();J<N;++J)I=L[J],F=I.ke,F.globalCompositeOperation=\"copy\",F.drawImage(g.od,I.Id,I.Jd,I.zd,I.yd,0,0,I.od.width,I.od.height);J=N}}}function e(t){const v=u;m=A=0;u=new Map;v.forEach(y=>{try{y(t)}catch(E){console.error(E)}});\nd()}const f=navigator.userAgent.match(/firefox|fxios/i);let g=null;const h=new Set,n=k.makeRenderer;k.makeRenderer=function(t,v){return v?(g||(g=b(document.createElement(\"canvas\")),v=g.le,g.ne=Math.min(v.getParameter(v.MAX_RENDERBUFFER_SIZE),v.getParameter(v.MAX_TEXTURE_SIZE))),new a(t)):b(t)};const p=k.Artboard.prototype.draw;k.Artboard.prototype.draw=function(t){t.td?t.td.push(p.bind(this,t.oe)):p.call(this,t)};const r=new da,x=new da;let A=0,m=0,u=new Map;k.requestAnimationFrame=function(t){A||\n(A=window.requestAnimationFrame(e));const v=++m;u.set(v,t);return v};k.cancelAnimationFrame=function(t){u.delete(t);A&&0==u.size&&(window.cancelAnimationFrame(A),A=0)};const B=k.WebGLRenderer.prototype.clear;k.WebGLRenderer.prototype.clear=function(){l=fa[this.me];k.qe=q=l&&l.Td;const t=this.od;if(this.be!=t.width||this.ae!=t.height)this.resize(t.width,t.height),this.be=t.width,this.ae=t.height;B.call(this)}};var ia={},ja;for(ja in k)k.hasOwnProperty(ja)&&(ia[ja]=k[ja]);\nvar ka=\"./this.program\",la=\"object\"===typeof window,ma=\"function\"===typeof importScripts,na=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,w=\"\",oa,pa,qa,ra,sa;\nif(na)w=ma?require(\"path\").dirname(w)+\"/\":__dirname+\"/\",oa=function(a,b){ra||(ra=require(\"fs\"));sa||(sa=require(\"path\"));a=sa.normalize(a);return ra.readFileSync(a,b?null:\"utf8\")},qa=function(a){a=oa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||ta(\"Assertion failed: undefined\");return a},pa=function(a,b,c){ra||(ra=require(\"fs\"));sa||(sa=require(\"path\"));a=sa.normalize(a);ra.readFile(a,function(d,e){d?c(d):b(e.buffer)})},1<process.argv.length&&(ka=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),\nprocess.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",function(a){throw a;}),k.inspect=function(){return\"[Emscripten Module object]\"};else if(la||ma)ma?w=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),0!==w.indexOf(\"blob:\")?w=w.substr(0,w.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):w=\"\",oa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},ma&&\n(qa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),pa=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ua=k.print||console.log.bind(console),va=k.printErr||console.warn.bind(console);for(ja in ia)ia.hasOwnProperty(ja)&&(k[ja]=ia[ja]);ia=null;k.thisProgram&&(ka=k.thisProgram);\nvar wa=0,xa;k.wasmBinary&&(xa=k.wasmBinary);var noExitRuntime=k.noExitRuntime||!0;\"object\"!==typeof WebAssembly&&ta(\"no native wasm support detected\");var ya,za=!1,Aa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction Ba(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&Aa)return Aa.decode(a.subarray(b,c));for(d=\"\";b<c;){var e=a[b++];if(e&128){var f=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var g=a[b++]&63;e=224==(e&240)?(e&15)<<12|f<<6|g:(e&7)<<18|f<<12|g<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}function Ca(a,b){return a?Ba(z,a,b):\"\"}\nfunction Da(a,b,c,d){if(!(0<d))return 0;var e=c;d=c+d-1;for(var f=0;f<a.length;++f){var g=a.charCodeAt(f);if(55296<=g&&57343>=g){var h=a.charCodeAt(++f);g=65536+((g&1023)<<10)|h&1023}if(127>=g){if(c>=d)break;b[c++]=g}else{if(2047>=g){if(c+1>=d)break;b[c++]=192|g>>6}else{if(65535>=g){if(c+2>=d)break;b[c++]=224|g>>12}else{if(c+3>=d)break;b[c++]=240|g>>18;b[c++]=128|g>>12&63}b[c++]=128|g>>6&63}b[c++]=128|g&63}}b[c]=0;return c-e}\nfunction Ea(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}var Fa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function Ga(a,b){var c=a>>1;for(var d=c+b/2;!(c>=d)&&Ha[c];)++c;c<<=1;if(32<c-a&&Fa)return Fa.decode(z.subarray(a,c));c=\"\";for(d=0;!(d>=b/2);++d){var e=Ia[a+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}\nfunction Ja(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)Ia[b>>1]=a.charCodeAt(e),b+=2;Ia[b>>1]=0;return b-d}function Ka(a){return 2*a.length}function La(a,b){for(var c=0,d=\"\";!(c>=b/4);){var e=C[a+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}\nfunction Ma(a,b,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var f=a.charCodeAt(e);if(55296<=f&&57343>=f){var g=a.charCodeAt(++e);f=65536+((f&1023)<<10)|g&1023}C[b>>2]=f;b+=4;if(b+4>c)break}C[b>>2]=0;return b-d}function Na(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}var Oa,Pa,z,Ia,Ha,C,D,G,Qa;\nfunction Ra(){var a=ya.buffer;Oa=a;k.HEAP8=Pa=new Int8Array(a);k.HEAP16=Ia=new Int16Array(a);k.HEAP32=C=new Int32Array(a);k.HEAPU8=z=new Uint8Array(a);k.HEAPU16=Ha=new Uint16Array(a);k.HEAPU32=D=new Uint32Array(a);k.HEAPF32=G=new Float32Array(a);k.HEAPF64=Qa=new Float64Array(a)}var Sa,Ta=[],Ua=[],Va=[];function Wa(){var a=k.preRun.shift();Ta.unshift(a)}var Xa=0,Ya=null,Za=null;k.preloadedImages={};k.preloadedAudios={};\nfunction ta(a){if(k.onAbort)k.onAbort(a);a=\"Aborted(\"+a+\")\";va(a);za=!0;a=new WebAssembly.RuntimeError(a+\". Build with -s ASSERTIONS=1 for more info.\");ca(a);throw a;}function $a(){return H.startsWith(\"data:application/octet-stream;base64,\")}var H;H=\"webgl_advanced.wasm\";if(!$a()){var ab=H;H=k.locateFile?k.locateFile(ab,w):w+ab}function bb(){var a=H;try{if(a==H&&xa)return new Uint8Array(xa);if(qa)return qa(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){ta(b)}}\nfunction cb(){if(!xa&&(la||ma)){if(\"function\"===typeof fetch&&!H.startsWith(\"file://\"))return fetch(H,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+H+\"'\";return a.arrayBuffer()}).catch(function(){return bb()});if(pa)return new Promise(function(a,b){pa(H,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return bb()})}\nfunction db(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(k);else{var c=b.Pe;\"number\"===typeof c?void 0===b.Vd?K(c)():K(c)(b.Vd):c(void 0===b.Vd?null:b.Vd)}}}function K(a){return Sa.get(a)}var eb={};function fb(a){for(;a.length;){var b=a.pop();a.pop()(b)}}function gb(a){return this.fromWireType(D[a>>2])}var hb={},ib={},jb={};function kb(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}\nfunction lb(a,b){a=kb(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}function mb(a){var b=Error,c=lb(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}\nvar nb=void 0;function ob(a){throw new nb(a);}function M(a,b,c){function d(h){h=c(h);h.length!==a.length&&ob(\"Mismatched type converter count\");for(var n=0;n<a.length;++n)pb(a[n],h[n])}a.forEach(function(h){jb[h]=b});var e=Array(b.length),f=[],g=0;b.forEach(function(h,n){ib.hasOwnProperty(h)?e[n]=ib[h]:(f.push(h),hb.hasOwnProperty(h)||(hb[h]=[]),hb[h].push(function(){e[n]=ib[h];++g;g===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction rb(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var sb=void 0;function O(a){for(var b=\"\";z[a];)b+=sb[z[a++]];return b}var tb=void 0;function P(a){throw new tb(a);}\nfunction pb(a,b,c){c=c||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||P('type \"'+d+'\" must have a positive integer typeid pointer');if(ib.hasOwnProperty(a)){if(c.Ae)return;P(\"Cannot register type '\"+d+\"' twice\")}ib[a]=b;delete jb[a];hb.hasOwnProperty(a)&&(b=hb[a],delete hb[a],b.forEach(function(e){e()}))}function ub(a){P(a.jd.md.kd.name+\" instance already deleted\")}var vb=!1;function wb(){}\nfunction xb(a){--a.count.value;0===a.count.value&&(a.qd?a.sd.vd(a.qd):a.md.kd.vd(a.ld))}function yb(a){if(\"undefined\"===typeof FinalizationGroup)return yb=function(b){return b},a;vb=new FinalizationGroup(function(b){for(var c=b.next();!c.done;c=b.next())c=c.value,c.ld?xb(c):console.warn(\"object already deleted: \"+c.ld)});yb=function(b){vb.register(b,b.jd,b.jd);return b};wb=function(b){vb.unregister(b.jd)};return yb(a)}var zb=void 0,Ab=[];\nfunction Bb(){for(;Ab.length;){var a=Ab.pop();a.jd.Bd=!1;a[\"delete\"]()}}function Cb(){}var Db={};function Eb(a,b,c){if(void 0===a[b].nd){var d=a[b];a[b]=function(){a[b].nd.hasOwnProperty(arguments.length)||P(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+a[b].nd+\")!\");return a[b].nd[arguments.length].apply(this,arguments)};a[b].nd=[];a[b].nd[d.Kd]=d}}\nfunction Fb(a,b,c){k.hasOwnProperty(a)?((void 0===c||void 0!==k[a].nd&&void 0!==k[a].nd[c])&&P(\"Cannot register public name '\"+a+\"' twice\"),Eb(k,a,a),k.hasOwnProperty(c)&&P(\"Cannot register multiple overloads of a function with the same number of arguments (\"+c+\")!\"),k[a].nd[c]=b):(k[a]=b,void 0!==c&&(k[a].Te=c))}function Gb(a,b,c,d,e,f,g,h){this.name=a;this.constructor=b;this.wd=c;this.vd=d;this.ud=e;this.ve=f;this.Hd=g;this.se=h;this.Ee=[]}\nfunction Hb(a,b,c){for(;b!==c;)b.Hd||P(\"Expected null or instance of \"+c.name+\", got an instance of \"+b.name),a=b.Hd(a),b=b.ud;return a}function Ib(a,b){if(null===b)return this.Xd&&P(\"null is not a valid \"+this.name),0;b.jd||P('Cannot pass \"'+Jb(b)+'\" as a '+this.name);b.jd.ld||P(\"Cannot pass deleted object as a pointer of type \"+this.name);return Hb(b.jd.ld,b.jd.md.kd,this.kd)}\nfunction Kb(a,b){if(null===b){this.Xd&&P(\"null is not a valid \"+this.name);if(this.Md){var c=this.Yd();null!==a&&a.push(this.vd,c);return c}return 0}b.jd||P('Cannot pass \"'+Jb(b)+'\" as a '+this.name);b.jd.ld||P(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.Ld&&b.jd.md.Ld&&P(\"Cannot convert argument of type \"+(b.jd.sd?b.jd.sd.name:b.jd.md.name)+\" to parameter type \"+this.name);c=Hb(b.jd.ld,b.jd.md.kd,this.kd);if(this.Md)switch(void 0===b.jd.qd&&P(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Je){case 0:b.jd.sd===this?c=b.jd.qd:P(\"Cannot convert argument of type \"+(b.jd.sd?b.jd.sd.name:b.jd.md.name)+\" to parameter type \"+this.name);break;case 1:c=b.jd.qd;break;case 2:if(b.jd.sd===this)c=b.jd.qd;else{var d=b.clone();c=this.Fe(c,Lb(function(){d[\"delete\"]()}));null!==a&&a.push(this.vd,c)}break;default:P(\"Unsupporting sharing policy\")}return c}\nfunction Mb(a,b){if(null===b)return this.Xd&&P(\"null is not a valid \"+this.name),0;b.jd||P('Cannot pass \"'+Jb(b)+'\" as a '+this.name);b.jd.ld||P(\"Cannot pass deleted object as a pointer of type \"+this.name);b.jd.md.Ld&&P(\"Cannot convert argument of type \"+b.jd.md.name+\" to parameter type \"+this.name);return Hb(b.jd.ld,b.jd.md.kd,this.kd)}function Nb(a,b,c){if(b===c)return a;if(void 0===c.ud)return null;a=Nb(a,b,c.ud);return null===a?null:c.se(a)}var Ob={};\nfunction Pb(a,b){for(void 0===b&&P(\"ptr should not be undefined\");a.ud;)b=a.Hd(b),a=a.ud;return Ob[b]}function Qb(a,b){b.md&&b.ld||ob(\"makeClassHandle requires ptr and ptrType\");!!b.sd!==!!b.qd&&ob(\"Both smartPtrType and smartPtr must be specified\");b.count={value:1};return yb(Object.create(a,{jd:{value:b}}))}\nfunction Rb(a,b,c,d){this.name=a;this.kd=b;this.Xd=c;this.Ld=d;this.Md=!1;this.vd=this.Fe=this.Yd=this.he=this.Je=this.De=void 0;void 0!==b.ud?this.toWireType=Kb:(this.toWireType=d?Ib:Mb,this.rd=null)}function Sb(a,b,c){k.hasOwnProperty(a)||ob(\"Replacing nonexistant public symbol\");void 0!==k[a].nd&&void 0!==c?k[a].nd[c]=b:(k[a]=b,k[a].Kd=c)}\nfunction Tb(a,b){var c=[];return function(){c.length=arguments.length;for(var d=0;d<arguments.length;d++)c[d]=arguments[d];a.includes(\"j\")?(d=k[\"dynCall_\"+a],d=c&&c.length?d.apply(null,[b].concat(c)):d.call(null,b)):d=K(b).apply(null,c);return d}}function Q(a,b){a=O(a);var c=a.includes(\"j\")?Tb(a,b):K(b);\"function\"!==typeof c&&P(\"unknown function pointer with signature \"+a+\": \"+b);return c}var Ub=void 0;function Vb(a){a=Wb(a);var b=O(a);Xb(a);return b}\nfunction Yb(a,b){function c(f){e[f]||ib[f]||(jb[f]?jb[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};b.forEach(c);throw new Ub(a+\": \"+d.map(Vb).join([\", \"]));}function Zb(a,b,c){a instanceof Object||P(c+' with invalid \"this\": '+a);a instanceof b.kd.constructor||P(c+' incompatible with \"this\" of type '+a.constructor.name);a.jd.ld||P(\"cannot call emscripten binding method \"+c+\" on deleted object\");return Hb(a.jd.ld,a.jd.md.kd,b.kd)}\nfunction $b(a,b){for(var c=[],d=0;d<a;d++)c.push(C[(b>>2)+d]);return c}function ac(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var c=lb(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}\nfunction bc(a,b,c,d,e){var f=b.length;2>f&&P(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var g=null!==b[1]&&null!==c,h=!1;for(c=1;c<b.length;++c)if(null!==b[c]&&void 0===b[c].rd){h=!0;break}var n=\"void\"!==b[0].name,p=\"\",r=\"\";for(c=0;c<f-2;++c)p+=(0!==c?\", \":\"\")+\"arg\"+c,r+=(0!==c?\", \":\"\")+\"arg\"+c+\"Wired\";a=\"return function \"+kb(a)+\"(\"+p+\") {\\nif (arguments.length !== \"+(f-2)+\") {\\nthrowBindingError('function \"+a+\" called with ' + arguments.length + ' arguments, expected \"+\n(f-2)+\" args!');\\n}\\n\";h&&(a+=\"var destructors = [];\\n\");var x=h?\"destructors\":\"null\";p=\"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");d=[P,d,e,fb,b[0],b[1]];g&&(a+=\"var thisWired = classParam.toWireType(\"+x+\", this);\\n\");for(c=0;c<f-2;++c)a+=\"var arg\"+c+\"Wired = argType\"+c+\".toWireType(\"+x+\", arg\"+c+\"); // \"+b[c+2].name+\"\\n\",p.push(\"argType\"+c),d.push(b[c+2]);g&&(r=\"thisWired\"+(0<r.length?\", \":\"\")+r);a+=(n?\"var rv = \":\"\")+\"invoker(fn\"+(0<r.length?\", \":\"\")+r+\");\\n\";if(h)a+=\n\"runDestructors(destructors);\\n\";else for(c=g?1:2;c<b.length;++c)f=1===c?\"thisWired\":\"arg\"+(c-2)+\"Wired\",null!==b[c].rd&&(a+=f+\"_dtor(\"+f+\"); // \"+b[c].name+\"\\n\",p.push(f+\"_dtor\"),d.push(b[c].rd));n&&(a+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\");p.push(a+\"}\\n\");return ac(p).apply(null,d)}var cc=[],R=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function dc(a){4<a&&0===--R[a].Zd&&(R[a]=void 0,cc.push(a))}\nfunction ec(a){a||P(\"Cannot use deleted val. handle = \"+a);return R[a].value}function Lb(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=cc.length?cc.pop():R.length;R[b]={Zd:1,value:a};return b}}\nfunction fc(a,b,c){switch(b){case 0:return function(d){return this.fromWireType((c?Pa:z)[d])};case 1:return function(d){return this.fromWireType((c?Ia:Ha)[d>>1])};case 2:return function(d){return this.fromWireType((c?C:D)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+a);}}function gc(a,b){var c=ib[a];void 0===c&&P(b+\" has unknown type \"+Vb(a));return c}function Jb(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}\nfunction hc(a,b){switch(b){case 2:return function(c){return this.fromWireType(G[c>>2])};case 3:return function(c){return this.fromWireType(Qa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\nfunction ic(a,b,c){switch(b){case 0:return c?function(d){return Pa[d]}:function(d){return z[d]};case 1:return c?function(d){return Ia[d>>1]}:function(d){return Ha[d>>1]};case 2:return c?function(d){return C[d>>2]}:function(d){return D[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}var jc={};function kc(a){var b=jc[a];return void 0===b?O(a):b}var lc=[];function mc(a){var b=lc.length;lc.push(a);return b}\nfunction nc(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=gc(C[(b>>2)+d],\"parameter \"+d);return c}var oc=[],pc;pc=na?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};\nfunction qc(a){var b=a.getExtension(\"ANGLE_instanced_arrays\");b&&(a.vertexAttribDivisor=function(c,d){b.vertexAttribDivisorANGLE(c,d)},a.drawArraysInstanced=function(c,d,e,f){b.drawArraysInstancedANGLE(c,d,e,f)},a.drawElementsInstanced=function(c,d,e,f,g){b.drawElementsInstancedANGLE(c,d,e,f,g)})}\nfunction rc(a){var b=a.getExtension(\"OES_vertex_array_object\");b&&(a.createVertexArray=function(){return b.createVertexArrayOES()},a.deleteVertexArray=function(c){b.deleteVertexArrayOES(c)},a.bindVertexArray=function(c){b.bindVertexArrayOES(c)},a.isVertexArray=function(c){return b.isVertexArrayOES(c)})}function sc(a){var b=a.getExtension(\"WEBGL_draw_buffers\");b&&(a.drawBuffers=function(c,d){b.drawBuffersWEBGL(c,d)})}\nvar tc=1,uc=[],S=[],vc=[],wc=[],xc=[],T=[],yc=[],fa=[],zc=[],Ac=[],Bc={},Cc={},Dc=4;function U(a){Ec||(Ec=a)}function ea(a){for(var b=tc++,c=a.length;c<b;c++)a[c]=null;return b}\nfunction ha(a){a||(a=l);if(!a.Be){a.Be=!0;var b=a.Td;qc(b);rc(b);sc(b);b.de=b.getExtension(\"WEBGL_draw_instanced_base_vertex_base_instance\");b.ge=b.getExtension(\"WEBGL_multi_draw_instanced_base_vertex_base_instance\");2<=a.version&&(b.ee=b.getExtension(\"EXT_disjoint_timer_query_webgl2\"));if(2>a.version||!b.ee)b.ee=b.getExtension(\"EXT_disjoint_timer_query\");b.Se=b.getExtension(\"WEBGL_multi_draw\");(b.getSupportedExtensions()||[]).forEach(function(c){c.includes(\"lose_context\")||c.includes(\"debug\")||b.getExtension(c)})}}\nvar Ec,l,Fc=[];function Gc(a,b,c,d){for(var e=0;e<a;e++){var f=q[c](),g=f&&ea(d);f?(f.name=g,d[g]=f):U(1282);C[b+4*e>>2]=g}}\nfunction Hc(a,b){if(b){var c=void 0;switch(a){case 36346:c=1;break;case 36344:return;case 34814:case 36345:c=0;break;case 34466:var d=q.getParameter(34467);c=d?d.length:0;break;case 33309:if(2>l.version){U(1282);return}c=2*(q.getSupportedExtensions()||[]).length;break;case 33307:case 33308:if(2>l.version){U(1280);return}c=33307==a?3:0}if(void 0===c)switch(d=q.getParameter(a),typeof d){case \"number\":c=d;break;case \"boolean\":c=d?1:0;break;case \"string\":U(1280);return;case \"object\":if(null===d)switch(a){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34229:case 36662:case 36663:case 35053:case 35055:case 36010:case 35097:case 35869:case 32874:case 36389:case 35983:case 35368:case 34068:c=\n0;break;default:U(1280);return}else{if(d instanceof Float32Array||d instanceof Uint32Array||d instanceof Int32Array||d instanceof Array){for(a=0;a<d.length;++a)C[b+4*a>>2]=d[a];return}try{c=d.name|0}catch(e){U(1280);va(\"GL_INVALID_ENUM in glGet0v: Unknown object returned from WebGL getParameter(\"+a+\")! (error: \"+e+\")\");return}}break;default:U(1280);va(\"GL_INVALID_ENUM in glGet0v: Native code calling glGet0v(\"+a+\") and it returns \"+d+\" of type \"+typeof d+\"!\");return}C[b>>2]=c}else U(1281)}\nfunction Ic(a){var b=Ea(a)+1,c=Jc(b);Da(a,z,c,b);return c}function Kc(a){return\"]\"==a.slice(-1)&&a.lastIndexOf(\"[\")}function Lc(a){a-=5120;return 0==a?Pa:1==a?z:2==a?Ia:4==a?C:6==a?G:5==a||28922==a||28520==a||30779==a||30782==a?D:Ha}function Mc(a,b,c,d,e){a=Lc(a);var f=31-Math.clz32(a.BYTES_PER_ELEMENT),g=Dc;return a.subarray(e>>f,e+d*(c*({5:3,6:4,8:2,29502:3,29504:4,26917:2,26918:2,29846:3,29847:4}[b-6402]||1)*(1<<f)+g-1&-g)>>f)}\nfunction V(a){var b=q.re;if(b){var c=b.Gd[a];\"number\"===typeof c&&(b.Gd[a]=c=q.getUniformLocation(b,b.ie[a]+(0<c?\"[\"+c+\"]\":\"\")));return c}U(1282)}var Nc=[],Oc=[],Pc={};\nfunction Qc(){if(!Rc){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ka||\"./this.program\"},b;for(b in Pc)void 0===Pc[b]?delete a[b]:a[b]=Pc[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Rc=c}return Rc}var Rc,Sc=[null,[],[]];function Tc(a){return 0===a%4&&(0!==a%100||0===a%400)}function Uc(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\nvar Vc=[31,29,31,30,31,30,31,31,30,31,30,31],Wc=[31,28,31,30,31,30,31,31,30,31,30,31];function Xc(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(Tc(a.getFullYear())?Vc:Wc)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction Yc(a,b,c,d){function e(m,u,B){for(m=\"number\"===typeof m?m.toString():m||\"\";m.length<u;)m=B[0]+m;return m}function f(m,u){return e(m,u,\"0\")}function g(m,u){function B(v){return 0>v?-1:0<v?1:0}var t;0===(t=B(m.getFullYear()-u.getFullYear()))&&0===(t=B(m.getMonth()-u.getMonth()))&&(t=B(m.getDate()-u.getDate()));return t}function h(m){switch(m.getDay()){case 0:return new Date(m.getFullYear()-1,11,29);case 1:return m;case 2:return new Date(m.getFullYear(),0,3);case 3:return new Date(m.getFullYear(),\n0,2);case 4:return new Date(m.getFullYear(),0,1);case 5:return new Date(m.getFullYear()-1,11,31);case 6:return new Date(m.getFullYear()-1,11,30)}}function n(m){m=Xc(new Date(m.pd+1900,0,1),m.Sd);var u=new Date(m.getFullYear()+1,0,4),B=h(new Date(m.getFullYear(),0,4));u=h(u);return 0>=g(B,m)?0>=g(u,m)?m.getFullYear()+1:m.getFullYear():m.getFullYear()-1}var p=C[d+40>>2];d={Me:C[d>>2],Le:C[d+4>>2],Qd:C[d+8>>2],Fd:C[d+12>>2],Cd:C[d+16>>2],pd:C[d+20>>2],Rd:C[d+24>>2],Sd:C[d+28>>2],Ue:C[d+32>>2],Ke:C[d+\n36>>2],Ne:p?Ca(p):\"\"};c=Ca(c);p={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in p)c=c.replace(new RegExp(r,\"g\"),p[r]);var x=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nA=\"January February March April May June July August September October November December\".split(\" \");p={\"%a\":function(m){return x[m.Rd].substring(0,3)},\"%A\":function(m){return x[m.Rd]},\"%b\":function(m){return A[m.Cd].substring(0,3)},\"%B\":function(m){return A[m.Cd]},\"%C\":function(m){return f((m.pd+1900)/100|0,2)},\"%d\":function(m){return f(m.Fd,2)},\"%e\":function(m){return e(m.Fd,2,\" \")},\"%g\":function(m){return n(m).toString().substring(2)},\"%G\":function(m){return n(m)},\"%H\":function(m){return f(m.Qd,\n2)},\"%I\":function(m){m=m.Qd;0==m?m=12:12<m&&(m-=12);return f(m,2)},\"%j\":function(m){return f(m.Fd+Uc(Tc(m.pd+1900)?Vc:Wc,m.Cd-1),3)},\"%m\":function(m){return f(m.Cd+1,2)},\"%M\":function(m){return f(m.Le,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(m){return 0<=m.Qd&&12>m.Qd?\"AM\":\"PM\"},\"%S\":function(m){return f(m.Me,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(m){return m.Rd||7},\"%U\":function(m){var u=new Date(m.pd+1900,0,1),B=0===u.getDay()?u:Xc(u,7-u.getDay());m=new Date(m.pd+1900,m.Cd,m.Fd);return 0>\ng(B,m)?f(Math.ceil((31-B.getDate()+(Uc(Tc(m.getFullYear())?Vc:Wc,m.getMonth()-1)-31)+m.getDate())/7),2):0===g(B,u)?\"01\":\"00\"},\"%V\":function(m){var u=new Date(m.pd+1901,0,4),B=h(new Date(m.pd+1900,0,4));u=h(u);var t=Xc(new Date(m.pd+1900,0,1),m.Sd);return 0>g(t,B)?\"53\":0>=g(u,t)?\"01\":f(Math.ceil((B.getFullYear()<m.pd+1900?m.Sd+32-B.getDate():m.Sd+1-B.getDate())/7),2)},\"%w\":function(m){return m.Rd},\"%W\":function(m){var u=new Date(m.pd,0,1),B=1===u.getDay()?u:Xc(u,0===u.getDay()?1:7-u.getDay()+1);m=\nnew Date(m.pd+1900,m.Cd,m.Fd);return 0>g(B,m)?f(Math.ceil((31-B.getDate()+(Uc(Tc(m.getFullYear())?Vc:Wc,m.getMonth()-1)-31)+m.getDate())/7),2):0===g(B,u)?\"01\":\"00\"},\"%y\":function(m){return(m.pd+1900).toString().substring(2)},\"%Y\":function(m){return m.pd+1900},\"%z\":function(m){m=m.Ke;var u=0<=m;m=Math.abs(m)/60;return(u?\"+\":\"-\")+String(\"0000\"+(m/60*100+m%60)).slice(-4)},\"%Z\":function(m){return m.Ne},\"%%\":function(){return\"%\"}};for(r in p)c.includes(r)&&(c=c.replace(new RegExp(r,\"g\"),p[r](d)));r=Zc(c);\nif(r.length>b)return 0;Pa.set(r,a);return r.length-1}nb=k.InternalError=mb(\"InternalError\");for(var $c=Array(256),ad=0;256>ad;++ad)$c[ad]=String.fromCharCode(ad);sb=$c;tb=k.BindingError=mb(\"BindingError\");Cb.prototype.isAliasOf=function(a){if(!(this instanceof Cb&&a instanceof Cb))return!1;var b=this.jd.md.kd,c=this.jd.ld,d=a.jd.md.kd;for(a=a.jd.ld;b.ud;)c=b.Hd(c),b=b.ud;for(;d.ud;)a=d.Hd(a),d=d.ud;return b===d&&c===a};\nCb.prototype.clone=function(){this.jd.ld||ub(this);if(this.jd.Ed)return this.jd.count.value+=1,this;var a=yb,b=Object,c=b.create,d=Object.getPrototypeOf(this),e=this.jd;a=a(c.call(b,d,{jd:{value:{count:e.count,Bd:e.Bd,Ed:e.Ed,ld:e.ld,md:e.md,qd:e.qd,sd:e.sd}}}));a.jd.count.value+=1;a.jd.Bd=!1;return a};Cb.prototype[\"delete\"]=function(){this.jd.ld||ub(this);this.jd.Bd&&!this.jd.Ed&&P(\"Object already scheduled for deletion\");wb(this);xb(this.jd);this.jd.Ed||(this.jd.qd=void 0,this.jd.ld=void 0)};\nCb.prototype.isDeleted=function(){return!this.jd.ld};Cb.prototype.deleteLater=function(){this.jd.ld||ub(this);this.jd.Bd&&!this.jd.Ed&&P(\"Object already scheduled for deletion\");Ab.push(this);1===Ab.length&&zb&&zb(Bb);this.jd.Bd=!0;return this};Rb.prototype.we=function(a){this.he&&(a=this.he(a));return a};Rb.prototype.ce=function(a){this.vd&&this.vd(a)};Rb.prototype.argPackAdvance=8;Rb.prototype.readValueFromPointer=gb;Rb.prototype.deleteObject=function(a){if(null!==a)a[\"delete\"]()};\nRb.prototype.fromWireType=function(a){function b(){return this.Md?Qb(this.kd.wd,{md:this.De,ld:c,sd:this,qd:a}):Qb(this.kd.wd,{md:this,ld:a})}var c=this.we(a);if(!c)return this.ce(a),null;var d=Pb(this.kd,c);if(void 0!==d){if(0===d.jd.count.value)return d.jd.ld=c,d.jd.qd=a,d.clone();d=d.clone();this.ce(a);return d}d=this.kd.ve(c);d=Db[d];if(!d)return b.call(this);d=this.Ld?d.pe:d.pointerType;var e=Nb(c,this.kd,d.kd);return null===e?b.call(this):this.Md?Qb(d.kd.wd,{md:d,ld:e,sd:this,qd:a}):Qb(d.kd.wd,\n{md:d,ld:e})};k.getInheritedInstanceCount=function(){return Object.keys(Ob).length};k.getLiveInheritedInstances=function(){var a=[],b;for(b in Ob)Ob.hasOwnProperty(b)&&a.push(Ob[b]);return a};k.flushPendingDeletes=Bb;k.setDelayFunction=function(a){zb=a;Ab.length&&zb&&zb(Bb)};Ub=k.UnboundTypeError=mb(\"UnboundTypeError\");k.count_emval_handles=function(){for(var a=0,b=5;b<R.length;++b)void 0!==R[b]&&++a;return a};k.get_first_emval=function(){for(var a=5;a<R.length;++a)if(void 0!==R[a])return R[a];return null};\nfor(var q,W=0;32>W;++W)Fc.push(Array(W));var bd=new Float32Array(288);for(W=0;288>W;++W)Nc[W]=bd.subarray(0,W+1);var cd=new Int32Array(288);for(W=0;288>W;++W)Oc[W]=cd.subarray(0,W+1);function Zc(a){var b=Array(Ea(a)+1);Da(a,b,0,b.length);return b}\nvar td={bb:function(a){var b=eb[a];delete eb[a];var c=b.Yd,d=b.vd,e=b.fe,f=e.map(function(g){return g.ze}).concat(e.map(function(g){return g.He}));M([a],f,function(g){var h={};e.forEach(function(n,p){var r=g[p],x=n.xe,A=n.ye,m=g[p+e.length],u=n.Ge,B=n.Ie;h[n.ue]={read:function(t){return r.fromWireType(x(A,t))},write:function(t,v){var y=[];u(B,t,m.toWireType(y,v));fb(y)}}});return[{name:b.name,fromWireType:function(n){var p={},r;for(r in h)p[r]=h[r].read(n);d(n);return p},toWireType:function(n,p){for(var r in h)if(!(r in\np))throw new TypeError('Missing field:  \"'+r+'\"');var x=c();for(r in h)h[r].write(x,p[r]);null!==n&&n.push(d,x);return x},argPackAdvance:8,readValueFromPointer:gb,rd:d}]})},fb:function(){},vb:function(a,b,c,d,e){var f=rb(c);b=O(b);pb(a,{name:b,fromWireType:function(g){return!!g},toWireType:function(g,h){return h?d:e},argPackAdvance:8,readValueFromPointer:function(g){if(1===c)var h=Pa;else if(2===c)h=Ia;else if(4===c)h=C;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(h[g>>\nf])},rd:null})},g:function(a,b,c,d,e,f,g,h,n,p,r,x,A){r=O(r);f=Q(e,f);h&&(h=Q(g,h));p&&(p=Q(n,p));A=Q(x,A);var m=kb(r);Fb(m,function(){Yb(\"Cannot construct \"+r+\" due to unbound types\",[d])});M([a,b,c],d?[d]:[],function(u){u=u[0];if(d){var B=u.kd;var t=B.wd}else t=Cb.prototype;u=lb(m,function(){if(Object.getPrototypeOf(this)!==v)throw new tb(\"Use 'new' to construct \"+r);if(void 0===y.xd)throw new tb(r+\" has no accessible constructor\");var L=y.xd[arguments.length];if(void 0===L)throw new tb(\"Tried to invoke ctor of \"+\nr+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(y.xd).toString()+\") parameters instead!\");return L.apply(this,arguments)});var v=Object.create(t,{constructor:{value:u}});u.prototype=v;var y=new Gb(r,u,v,A,B,f,h,p);B=new Rb(r,y,!0,!1);t=new Rb(r+\"*\",y,!1,!1);var E=new Rb(r+\" const*\",y,!1,!0);Db[a]={pointerType:t,pe:E};Sb(m,u);return[B,t,E]})},k:function(a,b,c,d,e,f,g,h){b=O(b);f=Q(e,f);M([],[a],function(n){n=n[0];var p=n.name+\".\"+b,r={get:function(){Yb(\"Cannot access \"+\np+\" due to unbound types\",[c])},enumerable:!0,configurable:!0};r.set=h?function(){Yb(\"Cannot access \"+p+\" due to unbound types\",[c])}:function(){P(p+\" is a read-only property\")};Object.defineProperty(n.kd.constructor,b,r);M([],[c],function(x){x=x[0];var A={get:function(){return x.fromWireType(f(d))},enumerable:!0};h&&(h=Q(g,h),A.set=function(m){var u=[];h(d,x.toWireType(u,m));fb(u)});Object.defineProperty(n.kd.constructor,b,A);return[]});return[]})},s:function(a,b,c,d,e,f){0<b||ta(\"Assertion failed: undefined\");\nvar g=$b(b,c);e=Q(d,e);M([],[a],function(h){h=h[0];var n=\"constructor \"+h.name;void 0===h.kd.xd&&(h.kd.xd=[]);if(void 0!==h.kd.xd[b-1])throw new tb(\"Cannot register multiple constructors with identical number of parameters (\"+(b-1)+\") for class '\"+h.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");h.kd.xd[b-1]=function(){Yb(\"Cannot construct \"+h.name+\" due to unbound types\",g)};M([],g,function(p){p.splice(1,0,null);h.kd.xd[b-1]=bc(n,p,null,\ne,f);return[]});return[]})},e:function(a,b,c,d,e,f,g,h){var n=$b(c,d);b=O(b);f=Q(e,f);M([],[a],function(p){function r(){Yb(\"Cannot call \"+x+\" due to unbound types\",n)}p=p[0];var x=p.name+\".\"+b;b.startsWith(\"@@\")&&(b=Symbol[b.substring(2)]);h&&p.kd.Ee.push(b);var A=p.kd.wd,m=A[b];void 0===m||void 0===m.nd&&m.className!==p.name&&m.Kd===c-2?(r.Kd=c-2,r.className=p.name,A[b]=r):(Eb(A,b,x),A[b].nd[c-2]=r);M([],n,function(u){u=bc(x,u,p,f,g);void 0===A[b].nd?(u.Kd=c-2,A[b]=u):A[b].nd[c-2]=u;return[]});return[]})},\nf:function(a,b,c,d,e,f,g,h,n,p){b=O(b);e=Q(d,e);M([],[a],function(r){r=r[0];var x=r.name+\".\"+b,A={get:function(){Yb(\"Cannot access \"+x+\" due to unbound types\",[c,g])},enumerable:!0,configurable:!0};A.set=n?function(){Yb(\"Cannot access \"+x+\" due to unbound types\",[c,g])}:function(){P(x+\" is a read-only property\")};Object.defineProperty(r.kd.wd,b,A);M([],n?[c,g]:[c],function(m){var u=m[0],B={get:function(){var v=Zb(this,r,x+\" getter\");return u.fromWireType(e(f,v))},enumerable:!0};if(n){n=Q(h,n);var t=\nm[1];B.set=function(v){var y=Zb(this,r,x+\" setter\"),E=[];n(p,y,t.toWireType(E,v));fb(E)}}Object.defineProperty(r.kd.wd,b,B);return[]});return[]})},ub:function(a,b){b=O(b);pb(a,{name:b,fromWireType:function(c){var d=ec(c);dc(c);return d},toWireType:function(c,d){return Lb(d)},argPackAdvance:8,readValueFromPointer:gb,rd:null})},mb:function(a,b,c,d){function e(){}c=rb(c);b=O(b);e.values={};pb(a,{name:b,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,g){return g.value},\nargPackAdvance:8,readValueFromPointer:fc(b,c,d),rd:null});Fb(b,e)},jb:function(a,b,c){var d=gc(a,\"enum\");b=O(b);a=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:lb(d.name+\"_\"+b,function(){})}});a.values[c]=d;a[b]=d},x:function(a,b,c){c=rb(c);b=O(b);pb(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:hc(b,c),rd:null})},z:function(a,b,c,d,e,f){var g=$b(b,c);a=O(a);e=Q(d,e);Fb(a,function(){Yb(\"Cannot call \"+\na+\" due to unbound types\",g)},b-1);M([],g,function(h){h=[h[0],null].concat(h.slice(1));Sb(a,bc(a,h,null,e,f),b-1);return[]})},m:function(a,b,c,d,e){function f(p){return p}b=O(b);-1===e&&(e=4294967295);var g=rb(c);if(0===d){var h=32-8*c;f=function(p){return p<<h>>>h}}var n=b.includes(\"unsigned\");pb(a,{name:b,fromWireType:f,toWireType:function(p,r){if(\"number\"!==typeof r&&\"boolean\"!==typeof r)throw new TypeError('Cannot convert \"'+Jb(r)+'\" to '+this.name);if(r<d||r>e)throw new TypeError('Passing a number \"'+\nJb(r)+'\" from JS side to C/C++ side to an argument of type \"'+b+'\", which is outside the valid range ['+d+\", \"+e+\"]!\");return n?r>>>0:r|0},argPackAdvance:8,readValueFromPointer:ic(b,g,0!==d),rd:null})},l:function(a,b,c){function d(f){f>>=2;var g=D;return new e(Oa,g[f+1],g[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=O(c);pb(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{Ae:!0})},y:function(a,b){b=O(b);var c=\"std::string\"===\nb;pb(a,{name:b,fromWireType:function(d){var e=D[d>>2];if(c)for(var f=d+4,g=0;g<=e;++g){var h=d+4+g;if(g==e||0==z[h]){f=Ca(f,h-f);if(void 0===n)var n=f;else n+=String.fromCharCode(0),n+=f;f=h+1}}else{n=Array(e);for(g=0;g<e;++g)n[g]=String.fromCharCode(z[d+4+g]);n=n.join(\"\")}Xb(d);return n},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f=\"string\"===typeof e;f||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||P(\"Cannot pass non-string to std::string\");\nvar g=(c&&f?function(){return Ea(e)}:function(){return e.length})(),h=Jc(4+g+1);D[h>>2]=g;if(c&&f)Da(e,z,h+4,g+1);else if(f)for(f=0;f<g;++f){var n=e.charCodeAt(f);255<n&&(Xb(h),P(\"String has UTF-16 code units that do not fit in 8 bits\"));z[h+4+f]=n}else for(f=0;f<g;++f)z[h+4+f]=e[f];null!==d&&d.push(Xb,h);return h},argPackAdvance:8,readValueFromPointer:gb,rd:function(d){Xb(d)}})},v:function(a,b,c){c=O(c);if(2===b){var d=Ga;var e=Ja;var f=Ka;var g=function(){return Ha};var h=1}else 4===b&&(d=La,e=\nMa,f=Na,g=function(){return D},h=2);pb(a,{name:c,fromWireType:function(n){for(var p=D[n>>2],r=g(),x,A=n+4,m=0;m<=p;++m){var u=n+4+m*b;if(m==p||0==r[u>>h])A=d(A,u-A),void 0===x?x=A:(x+=String.fromCharCode(0),x+=A),A=u+b}Xb(n);return x},toWireType:function(n,p){\"string\"!==typeof p&&P(\"Cannot pass non-string to C++ string type \"+c);var r=f(p),x=Jc(4+r+b);D[x>>2]=r>>h;e(p,x+4,r+b);null!==n&&n.push(Xb,x);return x},argPackAdvance:8,readValueFromPointer:gb,rd:function(n){Xb(n)}})},cb:function(a,b,c,d,e,\nf){eb[a]={name:O(b),Yd:Q(c,d),vd:Q(e,f),fe:[]}},ab:function(a,b,c,d,e,f,g,h,n,p){eb[a].fe.push({ue:O(b),ze:c,xe:Q(d,e),ye:f,He:g,Ge:Q(h,n),Ie:p})},wb:function(a,b){b=O(b);pb(a,{Ce:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},nb:function(){throw\"longjmp\";},pa:function(a,b,c){a=ec(a);b=gc(b,\"emval::as\");var d=[],e=Lb(d);C[c>>2]=e;return b.toWireType(d,a)},K:function(a,b,c,d){a=lc[a];b=ec(b);c=kc(c);a(b,c,null,d)},Gc:dc,Fc:function(a,b){var c=nc(a,b),d=c[0];b=d.name+\n\"_$\"+c.slice(1).map(function(r){return r.name}).join(\"_\")+\"$\";var e=oc[b];if(void 0!==e)return e;e=[\"retType\"];for(var f=[d],g=\"\",h=0;h<a-1;++h)g+=(0!==h?\", \":\"\")+\"arg\"+h,e.push(\"argType\"+h),f.push(c[1+h]);var n=\"return function \"+kb(\"methodCaller_\"+b)+\"(handle, name, destructors, args) {\\n\",p=0;for(h=0;h<a-1;++h)n+=\"    var arg\"+h+\" = argType\"+h+\".readValueFromPointer(args\"+(p?\"+\"+p:\"\")+\");\\n\",p+=c[h+1].argPackAdvance;n+=\"    var rv = handle[name](\"+g+\");\\n\";for(h=0;h<a-1;++h)c[h+1].deleteObject&&\n(n+=\"    argType\"+h+\".deleteObject(arg\"+h+\");\\n\");d.Ce||(n+=\"    return retType.toWireType(destructors, rv);\\n\");e.push(n+\"};\\n\");a=ac(e).apply(null,f);e=mc(a);return oc[b]=e},La:function(a,b){a=ec(a);b=ec(b);return Lb(a[b])},uc:function(a){4<a&&(R[a].Zd+=1)},Aa:function(a){return Lb(kc(a))},ea:function(a){var b=ec(a);fb(b);dc(a)},V:function(a,b){a=gc(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return Lb(a)},a:function(){ta(\"\")},pb:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=\npc();else return C[dd()>>2]=28,-1;C[b>>2]=a/1E3|0;C[b+4>>2]=a%1E3*1E6|0;return 0},Xa:function(a){q.activeTexture(a)},Wa:function(a,b){q.attachShader(S[a],T[b])},Va:function(a,b,c){q.bindAttribLocation(S[a],b,Ca(c))},Ua:function(a,b){35051==a?q.Wd=b:35052==a&&(q.Ad=b);q.bindBuffer(a,uc[b])},Wb:function(a,b){q.bindFramebuffer(a,vc[b])},Vb:function(a,b){q.bindRenderbuffer(a,wc[b])},Eb:function(a,b){q.bindSampler(a,zc[b])},Ta:function(a,b){q.bindTexture(a,xc[b])},mc:function(a){q.bindVertexArray(yc[a])},\njc:function(a){q.bindVertexArray(yc[a])},Sa:function(a,b,c,d){q.blendColor(a,b,c,d)},Ra:function(a){q.blendEquation(a)},Qa:function(a,b){q.blendFunc(a,b)},Jb:function(a,b,c,d,e,f,g,h,n,p){q.blitFramebuffer(a,b,c,d,e,f,g,h,n,p)},Pa:function(a,b,c,d){2<=l.version?c?q.bufferData(a,z,d,c,b):q.bufferData(a,b,d):q.bufferData(a,c?z.subarray(c,c+b):b,d)},Oa:function(a,b,c,d){2<=l.version?q.bufferSubData(a,b,z,d,c):q.bufferSubData(a,b,z.subarray(d,d+c))},Ub:function(a){return q.checkFramebufferStatus(a)},\nNa:function(a){q.clear(a)},Ma:function(a,b,c,d){q.clearColor(a,b,c,d)},Ka:function(a){q.clearStencil(a)},_a:function(a,b,c,d){return q.clientWaitSync(Ac[a],b,(c>>>0)+4294967296*d)},Ja:function(a,b,c,d){q.colorMask(!!a,!!b,!!c,!!d)},Ia:function(a){q.compileShader(T[a])},Ha:function(a,b,c,d,e,f,g,h){2<=l.version?q.Ad?q.compressedTexImage2D(a,b,c,d,e,f,g,h):q.compressedTexImage2D(a,b,c,d,e,f,z,h,g):q.compressedTexImage2D(a,b,c,d,e,f,h?z.subarray(h,h+g):null)},Ga:function(a,b,c,d,e,f,g,h,n){2<=l.version?\nq.Ad?q.compressedTexSubImage2D(a,b,c,d,e,f,g,h,n):q.compressedTexSubImage2D(a,b,c,d,e,f,g,z,n,h):q.compressedTexSubImage2D(a,b,c,d,e,f,g,n?z.subarray(n,n+h):null)},Fa:function(a,b,c,d,e,f,g,h){q.copyTexSubImage2D(a,b,c,d,e,f,g,h)},Ea:function(){var a=ea(S),b=q.createProgram();b.name=a;b.Pd=b.Nd=b.Od=0;b.$d=1;S[a]=b;return a},Da:function(a){var b=ea(T);T[b]=q.createShader(a);return b},Ca:function(a){q.cullFace(a)},Ba:function(a,b){for(var c=0;c<a;c++){var d=C[b+4*c>>2],e=uc[d];e&&(q.deleteBuffer(e),\ne.name=0,uc[d]=null,d==q.Wd&&(q.Wd=0),d==q.Ad&&(q.Ad=0))}},Tb:function(a,b){for(var c=0;c<a;++c){var d=C[b+4*c>>2],e=vc[d];e&&(q.deleteFramebuffer(e),e.name=0,vc[d]=null)}},za:function(a){if(a){var b=S[a];b?(q.deleteProgram(b),b.name=0,S[a]=null):U(1281)}},Sb:function(a,b){for(var c=0;c<a;c++){var d=C[b+4*c>>2],e=wc[d];e&&(q.deleteRenderbuffer(e),e.name=0,wc[d]=null)}},Db:function(a,b){for(var c=0;c<a;c++){var d=C[b+4*c>>2],e=zc[d];e&&(q.deleteSampler(e),e.name=0,zc[d]=null)}},ya:function(a){if(a){var b=\nT[a];b?(q.deleteShader(b),T[a]=null):U(1281)}},Hb:function(a){if(a){var b=Ac[a];b?(q.deleteSync(b),b.name=0,Ac[a]=null):U(1281)}},xa:function(a,b){for(var c=0;c<a;c++){var d=C[b+4*c>>2],e=xc[d];e&&(q.deleteTexture(e),e.name=0,xc[d]=null)}},lc:function(a,b){for(var c=0;c<a;c++){var d=C[b+4*c>>2];q.deleteVertexArray(yc[d]);yc[d]=null}},ic:function(a,b){for(var c=0;c<a;c++){var d=C[b+4*c>>2];q.deleteVertexArray(yc[d]);yc[d]=null}},wa:function(a){q.depthMask(!!a)},va:function(a){q.disable(a)},ua:function(a){q.disableVertexAttribArray(a)},\nta:function(a,b,c){q.drawArrays(a,b,c)},gc:function(a,b,c,d){q.drawArraysInstanced(a,b,c,d)},ec:function(a,b,c,d,e){q.de.drawArraysInstancedBaseInstanceWEBGL(a,b,c,d,e)},cc:function(a,b){for(var c=Fc[a],d=0;d<a;d++)c[d]=C[b+4*d>>2];q.drawBuffers(c)},sa:function(a,b,c,d){q.drawElements(a,b,c,d)},fc:function(a,b,c,d,e){q.drawElementsInstanced(a,b,c,d,e)},dc:function(a,b,c,d,e,f,g){q.de.drawElementsInstancedBaseVertexBaseInstanceWEBGL(a,b,c,d,e,f,g)},_b:function(a,b,c,d,e,f){q.drawElements(a,d,e,f)},\nra:function(a){q.enable(a)},qa:function(a){q.enableVertexAttribArray(a)},Gb:function(a,b){return(a=q.fenceSync(a,b))?(b=ea(Ac),a.name=b,Ac[b]=a,b):0},oa:function(){q.finish()},na:function(){q.flush()},Rb:function(a,b,c,d){q.framebufferRenderbuffer(a,b,c,wc[d])},Qb:function(a,b,c,d,e){q.framebufferTexture2D(a,b,c,xc[d],e)},ma:function(a){q.frontFace(a)},la:function(a,b){Gc(a,b,\"createBuffer\",uc)},Pb:function(a,b){Gc(a,b,\"createFramebuffer\",vc)},Ob:function(a,b){Gc(a,b,\"createRenderbuffer\",wc)},Cb:function(a,\nb){Gc(a,b,\"createSampler\",zc)},ka:function(a,b){Gc(a,b,\"createTexture\",xc)},kc:function(a,b){Gc(a,b,\"createVertexArray\",yc)},hc:function(a,b){Gc(a,b,\"createVertexArray\",yc)},Nb:function(a){q.generateMipmap(a)},ja:function(a,b,c){c?C[c>>2]=q.getBufferParameter(a,b):U(1281)},ia:function(){var a=q.getError()||Ec;Ec=0;return a},Mb:function(a,b,c,d){a=q.getFramebufferAttachmentParameter(a,b,c);if(a instanceof WebGLRenderbuffer||a instanceof WebGLTexture)a=a.name|0;C[d>>2]=a},Ya:function(a,b){Hc(a,b)},\nha:function(a,b,c,d){a=q.getProgramInfoLog(S[a]);null===a&&(a=\"(unknown error)\");b=0<b&&d?Da(a,z,d,b):0;c&&(C[c>>2]=b)},ga:function(a,b,c){if(c)if(a>=tc)U(1281);else if(a=S[a],35716==b)a=q.getProgramInfoLog(a),null===a&&(a=\"(unknown error)\"),C[c>>2]=a.length+1;else if(35719==b){if(!a.Pd)for(b=0;b<q.getProgramParameter(a,35718);++b)a.Pd=Math.max(a.Pd,q.getActiveUniform(a,b).name.length+1);C[c>>2]=a.Pd}else if(35722==b){if(!a.Nd)for(b=0;b<q.getProgramParameter(a,35721);++b)a.Nd=Math.max(a.Nd,q.getActiveAttrib(a,\nb).name.length+1);C[c>>2]=a.Nd}else if(35381==b){if(!a.Od)for(b=0;b<q.getProgramParameter(a,35382);++b)a.Od=Math.max(a.Od,q.getActiveUniformBlockName(a,b).length+1);C[c>>2]=a.Od}else C[c>>2]=q.getProgramParameter(a,b);else U(1281)},Lb:function(a,b,c){c?C[c>>2]=q.getRenderbufferParameter(a,b):U(1281)},fa:function(a,b,c,d){a=q.getShaderInfoLog(T[a]);null===a&&(a=\"(unknown error)\");b=0<b&&d?Da(a,z,d,b):0;c&&(C[c>>2]=b)},xb:function(a,b,c,d){a=q.getShaderPrecisionFormat(a,b);C[c>>2]=a.rangeMin;C[c+4>>\n2]=a.rangeMax;C[d>>2]=a.precision},da:function(a,b,c){c?35716==b?(a=q.getShaderInfoLog(T[a]),null===a&&(a=\"(unknown error)\"),C[c>>2]=a?a.length+1:0):35720==b?(a=q.getShaderSource(T[a]),C[c>>2]=a?a.length+1:0):C[c>>2]=q.getShaderParameter(T[a],b):U(1281)},t:function(a){var b=Bc[a];if(!b){switch(a){case 7939:b=q.getSupportedExtensions()||[];b=b.concat(b.map(function(d){return\"GL_\"+d}));b=Ic(b.join(\" \"));break;case 7936:case 7937:case 37445:case 37446:(b=q.getParameter(a))||U(1280);b=b&&Ic(b);break;\ncase 7938:b=q.getParameter(7938);b=2<=l.version?\"OpenGL ES 3.0 (\"+b+\")\":\"OpenGL ES 2.0 (\"+b+\")\";b=Ic(b);break;case 35724:b=q.getParameter(35724);var c=b.match(/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/);null!==c&&(3==c[1].length&&(c[1]+=\"0\"),b=\"OpenGL ES GLSL ES \"+c[1]+\" (\"+b+\")\");b=Ic(b);break;default:U(1280)}Bc[a]=b}return b},Za:function(a,b){if(2>l.version)return U(1282),0;var c=Cc[a];if(c)return 0>b||b>=c.length?(U(1281),0):c[b];switch(a){case 7939:return c=q.getSupportedExtensions()||[],\nc=c.concat(c.map(function(d){return\"GL_\"+d})),c=c.map(function(d){return Ic(d)}),c=Cc[a]=c,0>b||b>=c.length?(U(1281),0):c[b];default:return U(1280),0}},ca:function(a,b){b=Ca(b);if(a=S[a]){var c=a,d=c.Gd,e=c.je,f;if(!d)for(c.Gd=d={},c.ie={},f=0;f<q.getProgramParameter(c,35718);++f){var g=q.getActiveUniform(c,f);var h=g.name;g=g.size;var n=Kc(h);n=0<n?h.slice(0,n):h;var p=c.$d;c.$d+=g;e[n]=[g,p];for(h=0;h<g;++h)d[p]=h,c.ie[p++]=n}c=a.Gd;d=0;e=b;f=Kc(b);0<f&&(d=parseInt(b.slice(f+1))>>>0,e=b.slice(0,\nf));if((e=a.je[e])&&d<e[0]&&(d+=e[1],c[d]=c[d]||q.getUniformLocation(a,b)))return d}else U(1281);return-1},zb:function(a,b,c){for(var d=Fc[b],e=0;e<b;e++)d[e]=C[c+4*e>>2];q.invalidateFramebuffer(a,d)},yb:function(a,b,c,d,e,f,g){for(var h=Fc[b],n=0;n<b;n++)h[n]=C[c+4*n>>2];q.invalidateSubFramebuffer(a,h,d,e,f,g)},Fb:function(a){return q.isSync(Ac[a])},ba:function(a){return(a=xc[a])?q.isTexture(a):0},aa:function(a){q.lineWidth(a)},$:function(a){a=S[a];q.linkProgram(a);a.Gd=0;a.je={}},ac:function(a,\nb,c,d,e,f){q.ge.multiDrawArraysInstancedBaseInstanceWEBGL(a,C,b>>2,C,c>>2,C,d>>2,D,e>>2,f)},$b:function(a,b,c,d,e,f,g,h){q.ge.multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL(a,C,b>>2,c,C,d>>2,C,e>>2,C,f>>2,D,g>>2,h)},_:function(a,b){3317==a&&(Dc=b);q.pixelStorei(a,b)},bc:function(a){q.readBuffer(a)},Z:function(a,b,c,d,e,f,g){if(2<=l.version)if(q.Wd)q.readPixels(a,b,c,d,e,f,g);else{var h=Lc(f);q.readPixels(a,b,c,d,e,f,h,g>>31-Math.clz32(h.BYTES_PER_ELEMENT))}else(g=Mc(f,e,c,d,g))?q.readPixels(a,\nb,c,d,e,f,g):U(1280)},Kb:function(a,b,c,d){q.renderbufferStorage(a,b,c,d)},Ib:function(a,b,c,d,e){q.renderbufferStorageMultisample(a,b,c,d,e)},Bb:function(a,b,c){q.samplerParameteri(zc[a],b,c)},Ab:function(a,b,c){q.samplerParameteri(zc[a],b,C[c>>2])},Y:function(a,b,c,d){q.scissor(a,b,c,d)},X:function(a,b,c,d){for(var e=\"\",f=0;f<b;++f){var g=d?C[d+4*f>>2]:-1;e+=Ca(C[c+4*f>>2],0>g?void 0:g)}q.shaderSource(T[a],e)},W:function(a,b,c){q.stencilFunc(a,b,c)},U:function(a,b,c,d){q.stencilFuncSeparate(a,b,\nc,d)},T:function(a){q.stencilMask(a)},S:function(a,b){q.stencilMaskSeparate(a,b)},R:function(a,b,c){q.stencilOp(a,b,c)},Q:function(a,b,c,d){q.stencilOpSeparate(a,b,c,d)},P:function(a,b,c,d,e,f,g,h,n){if(2<=l.version)if(q.Ad)q.texImage2D(a,b,c,d,e,f,g,h,n);else if(n){var p=Lc(h);q.texImage2D(a,b,c,d,e,f,g,h,p,n>>31-Math.clz32(p.BYTES_PER_ELEMENT))}else q.texImage2D(a,b,c,d,e,f,g,h,null);else q.texImage2D(a,b,c,d,e,f,g,h,n?Mc(h,g,d,e,n):null)},O:function(a,b,c){q.texParameterf(a,b,c)},N:function(a,\nb,c){q.texParameterf(a,b,G[c>>2])},M:function(a,b,c){q.texParameteri(a,b,c)},L:function(a,b,c){q.texParameteri(a,b,C[c>>2])},Zb:function(a,b,c,d,e){q.texStorage2D(a,b,c,d,e)},J:function(a,b,c,d,e,f,g,h,n){if(2<=l.version)if(q.Ad)q.texSubImage2D(a,b,c,d,e,f,g,h,n);else if(n){var p=Lc(h);q.texSubImage2D(a,b,c,d,e,f,g,h,p,n>>31-Math.clz32(p.BYTES_PER_ELEMENT))}else q.texSubImage2D(a,b,c,d,e,f,g,h,null);else p=null,n&&(p=Mc(h,g,e,f,n)),q.texSubImage2D(a,b,c,d,e,f,g,h,p)},I:function(a,b){q.uniform1f(V(a),\nb)},H:function(a,b,c){if(2<=l.version)q.uniform1fv(V(a),G,c>>2,b);else{if(288>=b)for(var d=Nc[b-1],e=0;e<b;++e)d[e]=G[c+4*e>>2];else d=G.subarray(c>>2,c+4*b>>2);q.uniform1fv(V(a),d)}},G:function(a,b){q.uniform1i(V(a),b)},F:function(a,b,c){if(2<=l.version)q.uniform1iv(V(a),C,c>>2,b);else{if(288>=b)for(var d=Oc[b-1],e=0;e<b;++e)d[e]=C[c+4*e>>2];else d=C.subarray(c>>2,c+4*b>>2);q.uniform1iv(V(a),d)}},E:function(a,b,c){q.uniform2f(V(a),b,c)},D:function(a,b,c){if(2<=l.version)q.uniform2fv(V(a),G,c>>2,\n2*b);else{if(144>=b)for(var d=Nc[2*b-1],e=0;e<2*b;e+=2)d[e]=G[c+4*e>>2],d[e+1]=G[c+(4*e+4)>>2];else d=G.subarray(c>>2,c+8*b>>2);q.uniform2fv(V(a),d)}},C:function(a,b,c){q.uniform2i(V(a),b,c)},B:function(a,b,c){if(2<=l.version)q.uniform2iv(V(a),C,c>>2,2*b);else{if(144>=b)for(var d=Oc[2*b-1],e=0;e<2*b;e+=2)d[e]=C[c+4*e>>2],d[e+1]=C[c+(4*e+4)>>2];else d=C.subarray(c>>2,c+8*b>>2);q.uniform2iv(V(a),d)}},A:function(a,b,c,d){q.uniform3f(V(a),b,c,d)},Ec:function(a,b,c){if(2<=l.version)q.uniform3fv(V(a),G,\nc>>2,3*b);else{if(96>=b)for(var d=Nc[3*b-1],e=0;e<3*b;e+=3)d[e]=G[c+4*e>>2],d[e+1]=G[c+(4*e+4)>>2],d[e+2]=G[c+(4*e+8)>>2];else d=G.subarray(c>>2,c+12*b>>2);q.uniform3fv(V(a),d)}},Dc:function(a,b,c,d){q.uniform3i(V(a),b,c,d)},Cc:function(a,b,c){if(2<=l.version)q.uniform3iv(V(a),C,c>>2,3*b);else{if(96>=b)for(var d=Oc[3*b-1],e=0;e<3*b;e+=3)d[e]=C[c+4*e>>2],d[e+1]=C[c+(4*e+4)>>2],d[e+2]=C[c+(4*e+8)>>2];else d=C.subarray(c>>2,c+12*b>>2);q.uniform3iv(V(a),d)}},Bc:function(a,b,c,d,e){q.uniform4f(V(a),b,\nc,d,e)},Ac:function(a,b,c){if(2<=l.version)q.uniform4fv(V(a),G,c>>2,4*b);else{if(72>=b){var d=Nc[4*b-1],e=G;c>>=2;for(var f=0;f<4*b;f+=4){var g=c+f;d[f]=e[g];d[f+1]=e[g+1];d[f+2]=e[g+2];d[f+3]=e[g+3]}}else d=G.subarray(c>>2,c+16*b>>2);q.uniform4fv(V(a),d)}},zc:function(a,b,c,d,e){q.uniform4i(V(a),b,c,d,e)},yc:function(a,b,c){if(2<=l.version)q.uniform4iv(V(a),C,c>>2,4*b);else{if(72>=b)for(var d=Oc[4*b-1],e=0;e<4*b;e+=4)d[e]=C[c+4*e>>2],d[e+1]=C[c+(4*e+4)>>2],d[e+2]=C[c+(4*e+8)>>2],d[e+3]=C[c+(4*e+\n12)>>2];else d=C.subarray(c>>2,c+16*b>>2);q.uniform4iv(V(a),d)}},xc:function(a,b,c,d){if(2<=l.version)q.uniformMatrix2fv(V(a),!!c,G,d>>2,4*b);else{if(72>=b)for(var e=Nc[4*b-1],f=0;f<4*b;f+=4)e[f]=G[d+4*f>>2],e[f+1]=G[d+(4*f+4)>>2],e[f+2]=G[d+(4*f+8)>>2],e[f+3]=G[d+(4*f+12)>>2];else e=G.subarray(d>>2,d+16*b>>2);q.uniformMatrix2fv(V(a),!!c,e)}},wc:function(a,b,c,d){if(2<=l.version)q.uniformMatrix3fv(V(a),!!c,G,d>>2,9*b);else{if(32>=b)for(var e=Nc[9*b-1],f=0;f<9*b;f+=9)e[f]=G[d+4*f>>2],e[f+1]=G[d+(4*\nf+4)>>2],e[f+2]=G[d+(4*f+8)>>2],e[f+3]=G[d+(4*f+12)>>2],e[f+4]=G[d+(4*f+16)>>2],e[f+5]=G[d+(4*f+20)>>2],e[f+6]=G[d+(4*f+24)>>2],e[f+7]=G[d+(4*f+28)>>2],e[f+8]=G[d+(4*f+32)>>2];else e=G.subarray(d>>2,d+36*b>>2);q.uniformMatrix3fv(V(a),!!c,e)}},vc:function(a,b,c,d){if(2<=l.version)q.uniformMatrix4fv(V(a),!!c,G,d>>2,16*b);else{if(18>=b){var e=Nc[16*b-1],f=G;d>>=2;for(var g=0;g<16*b;g+=16){var h=d+g;e[g]=f[h];e[g+1]=f[h+1];e[g+2]=f[h+2];e[g+3]=f[h+3];e[g+4]=f[h+4];e[g+5]=f[h+5];e[g+6]=f[h+6];e[g+7]=f[h+\n7];e[g+8]=f[h+8];e[g+9]=f[h+9];e[g+10]=f[h+10];e[g+11]=f[h+11];e[g+12]=f[h+12];e[g+13]=f[h+13];e[g+14]=f[h+14];e[g+15]=f[h+15]}}else e=G.subarray(d>>2,d+64*b>>2);q.uniformMatrix4fv(V(a),!!c,e)}},tc:function(a){a=S[a];q.useProgram(a);q.re=a},sc:function(a,b){q.vertexAttrib1f(a,b)},rc:function(a,b){q.vertexAttrib2f(a,G[b>>2],G[b+4>>2])},qc:function(a,b){q.vertexAttrib3f(a,G[b>>2],G[b+4>>2],G[b+8>>2])},pc:function(a,b){q.vertexAttrib4f(a,G[b>>2],G[b+4>>2],G[b+8>>2],G[b+12>>2])},Yb:function(a,b){q.vertexAttribDivisor(a,\nb)},Xb:function(a,b,c,d,e){q.vertexAttribIPointer(a,b,c,d,e)},oc:function(a,b,c,d,e,f){q.vertexAttribPointer(a,b,c,!!d,e,f)},nc:function(a,b,c,d){q.viewport(a,b,c,d)},$a:function(a,b,c,d){q.waitSync(Ac[a],b,(c>>>0)+4294967296*d)},u:function(a){var b=z.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ya.grow(Math.min(2147483648,d)-Oa.byteLength+65535>>>16);Ra();var e=1;break a}catch(f){}e=void 0}if(e)return!0}return!1},\nqb:function(a,b){var c=0;Qc().forEach(function(d,e){var f=b+c;e=C[a+4*e>>2]=f;for(f=0;f<d.length;++f)Pa[e++>>0]=d.charCodeAt(f);Pa[e>>0]=0;c+=d.length+1});return 0},rb:function(a,b){var c=Qc();C[a>>2]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});C[b>>2]=d;return 0},tb:function(){return 0},eb:function(){},sb:function(a,b,c,d){for(var e=0,f=0;f<c;f++){var g=C[b>>2],h=C[b+4>>2];b+=8;for(var n=0;n<h;n++){var p=z[g+n],r=Sc[a];0===p||10===p?((1===a?ua:va)(Ba(r,0)),r.length=0):r.push(p)}e+=h}C[d>>\n2]=e;return 0},b:function(){return wa},db:function(a,b){q.bindFramebuffer(a,vc[b])},w:function(a,b){Hc(a,b)},n:ed,h:fd,o:gd,r:hd,hb:jd,ib:kd,q:ld,j:md,d:nd,p:od,i:pd,kb:qd,gb:rd,lb:sd,c:function(a){wa=a},ob:function(a,b,c,d){return Yc(a,b,c,d)}};\n(function(){function a(e){k.asm=e.exports;ya=k.asm.Hc;Ra();Sa=k.asm.Rc;Ua.unshift(k.asm.Ic);Xa--;k.monitorRunDependencies&&k.monitorRunDependencies(Xa);0==Xa&&(null!==Ya&&(clearInterval(Ya),Ya=null),Za&&(e=Za,Za=null,e()))}function b(e){a(e.instance)}function c(e){return cb().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){va(\"failed to asynchronously prepare wasm: \"+f);ta(f)})}var d={a:td};Xa++;k.monitorRunDependencies&&k.monitorRunDependencies(Xa);\nif(k.instantiateWasm)try{return k.instantiateWasm(d,a)}catch(e){return va(\"Module.instantiateWasm callback failed with error: \"+e),!1}(function(){return xa||\"function\"!==typeof WebAssembly.instantiateStreaming||$a()||H.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(H,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(b,function(f){va(\"wasm streaming compile failed: \"+f);va(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ca);\nreturn{}})();k.___wasm_call_ctors=function(){return(k.___wasm_call_ctors=k.asm.Ic).apply(null,arguments)};var Jc=k._malloc=function(){return(Jc=k._malloc=k.asm.Jc).apply(null,arguments)},Xb=k._free=function(){return(Xb=k._free=k.asm.Kc).apply(null,arguments)},dd=k.___errno_location=function(){return(dd=k.___errno_location=k.asm.Lc).apply(null,arguments)},Wb=k.___getTypeName=function(){return(Wb=k.___getTypeName=k.asm.Mc).apply(null,arguments)};\nk.___embind_register_native_and_builtin_types=function(){return(k.___embind_register_native_and_builtin_types=k.asm.Nc).apply(null,arguments)};var X=k.stackSave=function(){return(X=k.stackSave=k.asm.Oc).apply(null,arguments)},Y=k.stackRestore=function(){return(Y=k.stackRestore=k.asm.Pc).apply(null,arguments)},Z=k._setThrew=function(){return(Z=k._setThrew=k.asm.Qc).apply(null,arguments)};k.dynCall_iiiij=function(){return(k.dynCall_iiiij=k.asm.Sc).apply(null,arguments)};\nk.dynCall_viiij=function(){return(k.dynCall_viiij=k.asm.Tc).apply(null,arguments)};k.dynCall_iiij=function(){return(k.dynCall_iiij=k.asm.Uc).apply(null,arguments)};k.dynCall_viij=function(){return(k.dynCall_viij=k.asm.Vc).apply(null,arguments)};k.dynCall_jiiiiji=function(){return(k.dynCall_jiiiiji=k.asm.Wc).apply(null,arguments)};k.dynCall_jiiiiii=function(){return(k.dynCall_jiiiiii=k.asm.Xc).apply(null,arguments)};k.dynCall_viiiiij=function(){return(k.dynCall_viiiiij=k.asm.Yc).apply(null,arguments)};\nk.dynCall_jii=function(){return(k.dynCall_jii=k.asm.Zc).apply(null,arguments)};k.dynCall_viji=function(){return(k.dynCall_viji=k.asm._c).apply(null,arguments)};k.dynCall_ji=function(){return(k.dynCall_ji=k.asm.$c).apply(null,arguments)};k.dynCall_iij=function(){return(k.dynCall_iij=k.asm.ad).apply(null,arguments)};k.dynCall_vij=function(){return(k.dynCall_vij=k.asm.bd).apply(null,arguments)};k.dynCall_iijj=function(){return(k.dynCall_iijj=k.asm.cd).apply(null,arguments)};\nk.dynCall_jiji=function(){return(k.dynCall_jiji=k.asm.dd).apply(null,arguments)};k.dynCall_iiiiij=function(){return(k.dynCall_iiiiij=k.asm.ed).apply(null,arguments)};k.dynCall_iiiiijj=function(){return(k.dynCall_iiiiijj=k.asm.fd).apply(null,arguments)};k.dynCall_iiiiiijj=function(){return(k.dynCall_iiiiiijj=k.asm.gd).apply(null,arguments)};k.dynCall_viijii=function(){return(k.dynCall_viijii=k.asm.hd).apply(null,arguments)};\nfunction nd(a,b,c){var d=X();try{K(a)(b,c)}catch(e){Y(d);if(e!==e+0&&\"longjmp\"!==e)throw e;Z(1,0)}}function gd(a,b,c,d){var e=X();try{return K(a)(b,c,d)}catch(f){Y(e);if(f!==f+0&&\"longjmp\"!==f)throw f;Z(1,0)}}function pd(a,b,c,d,e){var f=X();try{K(a)(b,c,d,e)}catch(g){Y(f);if(g!==g+0&&\"longjmp\"!==g)throw g;Z(1,0)}}function md(a,b){var c=X();try{K(a)(b)}catch(d){Y(c);if(d!==d+0&&\"longjmp\"!==d)throw d;Z(1,0)}}\nfunction fd(a,b,c){var d=X();try{return K(a)(b,c)}catch(e){Y(d);if(e!==e+0&&\"longjmp\"!==e)throw e;Z(1,0)}}function hd(a,b,c,d,e){var f=X();try{return K(a)(b,c,d,e)}catch(g){Y(f);if(g!==g+0&&\"longjmp\"!==g)throw g;Z(1,0)}}function ed(a,b){var c=X();try{return K(a)(b)}catch(d){Y(c);if(d!==d+0&&\"longjmp\"!==d)throw d;Z(1,0)}}function ld(a){var b=X();try{K(a)()}catch(c){Y(b);if(c!==c+0&&\"longjmp\"!==c)throw c;Z(1,0)}}\nfunction sd(a,b,c,d,e,f,g,h,n){var p=X();try{K(a)(b,c,d,e,f,g,h,n)}catch(r){Y(p);if(r!==r+0&&\"longjmp\"!==r)throw r;Z(1,0)}}function od(a,b,c,d){var e=X();try{K(a)(b,c,d)}catch(f){Y(e);if(f!==f+0&&\"longjmp\"!==f)throw f;Z(1,0)}}function qd(a,b,c,d,e,f){var g=X();try{K(a)(b,c,d,e,f)}catch(h){Y(g);if(h!==h+0&&\"longjmp\"!==h)throw h;Z(1,0)}}function kd(a,b,c,d,e,f,g){var h=X();try{return K(a)(b,c,d,e,f,g)}catch(n){Y(h);if(n!==n+0&&\"longjmp\"!==n)throw n;Z(1,0)}}\nfunction jd(a,b,c,d,e,f){var g=X();try{return K(a)(b,c,d,e,f)}catch(h){Y(g);if(h!==h+0&&\"longjmp\"!==h)throw h;Z(1,0)}}function rd(a,b,c,d,e,f,g){var h=X();try{K(a)(b,c,d,e,f,g)}catch(n){Y(h);if(n!==n+0&&\"longjmp\"!==n)throw n;Z(1,0)}}var ud;Za=function vd(){ud||wd();ud||(Za=vd)};\nfunction wd(){function a(){if(!ud&&(ud=!0,k.calledRun=!0,!za)){db(Ua);aa(k);if(k.onRuntimeInitialized)k.onRuntimeInitialized();if(k.postRun)for(\"function\"==typeof k.postRun&&(k.postRun=[k.postRun]);k.postRun.length;){var b=k.postRun.shift();Va.unshift(b)}db(Va)}}if(!(0<Xa)){if(k.preRun)for(\"function\"==typeof k.preRun&&(k.preRun=[k.preRun]);k.preRun.length;)Wa();db(Ta);0<Xa||(k.setStatus?(k.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){k.setStatus(\"\")},1);a()},1)):a())}}\nk.run=wd;if(k.preInit)for(\"function\"==typeof k.preInit&&(k.preInit=[k.preInit]);0<k.preInit.length;)k.preInit.pop()();wd();\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as rc from './rive_advanced.mjs';\nimport * as packageData from 'package.json';\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n// Tracks playback states; numbers map to the runtime's numerical values\n// i.e. play: 0, pause: 1, stop: 2\nenum PlaybackState {\n  Play = 0,\n  Pause,\n  Stop\n}\n\n/**\n * Interface for artboard bounds\n */\nexport interface Bounds extends rc.AABB {}\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = 'cover',\n  Contain = 'contain',\n  Fill = 'fill',\n  FitWidth = 'fitWidth',\n  FitHeight = 'fitHeight',\n  None = 'none',\n  ScaleDown = 'scaleDown'\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = 'center',\n  TopLeft = 'topLeft',\n  TopCenter = 'topCenter',\n  TopRight = 'topRight',\n  CenterLeft = 'centerLeft',\n  CenterRight = 'centerRight',\n  BottomLeft = 'bottomLeft',\n  BottomCenter = 'bottomCenter',\n  BottomRight = 'bottomRight'\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit,\n  alignment?: Alignment,\n  minX?: number,\n  minY?: number,\n  maxX?: number,\n  maxY?: number\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    console.warn('This function is deprecated: please use `new Layout({})` instead');\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading: boolean = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;  \n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL: string = `https://unpkg.com/${packageData.name}@${packageData.version}/rive.wasm`;\n\n  // Class is never instantiated\n  private constructor() { }\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: (_: string) => RuntimeLoader.wasmURL\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve, reject) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount: number = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(private animation: rc.LinearAnimation,\n              private artboard: rc.Artboard,\n              runtime: rc.RiveCanvas,\n              public playing: boolean) {\n    this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n      return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n      this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n\n  constructor(public readonly type: StateMachineInputType, private runtimeInput: rc.SMIInput) { }\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(private stateMachine: rc.StateMachine,\n              runtime: rc.RiveCanvas,\n              public playing: boolean,\n              private artboard: rc.Artboard) {\n    this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input \n   */\n  private mapRuntimeInput(input: rc.SMIInput, runtime: rc.RiveCanvas): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n    }\n    else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n    }\n    else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n     public cleanup() {\n      this.instance.delete();\n    }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(animatables: string | string[], playing: boolean, fireEvent = true): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach(a => a.playing = playing);\n      this.stateMachines.forEach(m => m.playing = playing);\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map(a => a.name);\n      const instancedMachineNames = this.stateMachines.map(m => m.name);\n      for (const i in animatables) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n       } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if(anim) {\n            this.animations.push(new Animation(anim, this.artboard, this.runtime, playing));\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              this.stateMachines.push(new StateMachine(sm, this.runtime, playing, this.artboard));\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n    /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n     public pause(animatables: string[]): string[] {\n      return this.add(animatables, false);\n    }\n\n    /**\n     * Set time of named animations\n     * @param animations names of the animations to scrub\n     * @param value time scrub value, a floating point number to which the playhead is jumped\n     * @returns a list of names of the animations that were scrubbed\n     */\n    public scrub(animatables: string[], value: number): string[] {\n      const forScrubbing = this.animations.filter(a => animatables.includes(a.name));\n      forScrubbing.forEach(a => a.scrubTo = value);\n      return forScrubbing.map(a => a.name);\n    }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations.filter(a => a.playing).map(a => a.name).concat(\n           this.stateMachines.filter(m => m.playing).map(m => m.name)\n    );\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n     public get paused(): string[] {\n      return this.animations.filter(a => !a.playing).map(a => a.name).concat(\n             this.stateMachines.filter(m => !m.playing).map(m => m.name)\n      );\n    }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations.map(a => a.name).concat(\n        this.stateMachines.map(m => m.name)\n      );\n      // Clean up before emptying the arrays\n      this.animations.forEach(a => a.cleanup());\n      this.stateMachines.forEach(m => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter(\n        a => animatables.includes(a.name)\n      );\n      \n      animationsToRemove.forEach(a => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter(\n        m => animatables.includes(m.name)\n      );\n      machinesToRemove.forEach(m => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove.map(a => a.name).concat(\n        machinesToRemove.map(m => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return this.animations.reduce((acc, curr) => acc || curr.playing, false)\n        || this.stateMachines.reduce((acc, curr) => acc || curr.playing, false);\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return !this.isPlaying && \n           (this.animations.length > 0 || this.stateMachines.length > 0);  \n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n   public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if(this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n      } else if(this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter(a => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      }\n      else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop }\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong }\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter(sm => sm.playing)) {\n     statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load        = 'load',\n  LoadError   = 'loaderror',\n  Play        = 'play',\n  Pause       = 'pause',\n  Stop        = 'stop',\n  Loop        = 'loop',\n  Draw        = 'draw',\n  StateChange = 'statechange',\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType,\n  data?: string | string[] | LoopEvent,\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = 'oneshot',  // has value 0 in runtime\n  Loop = 'loop',        // has value 1 in runtime\n  PingPong = 'pingpong' // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType,\n  callback: EventCallback,\n}\n\n// Manages Rive events and listeners\nclass EventManager {\n\n  constructor(private listeners: EventListener[] = []) { }\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter(e => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach(\n      listener => listener.callback(event)\n    );\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action: VoidCallback,\n  event?: Event,\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) { }\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      task?.action();\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas, // canvas is required\n  src?: string, // one of src or buffer is required\n  buffer?: ArrayBuffer, // one of src or buffer is required\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  layout?: Layout,\n  autoplay?: boolean,\n  useOffscreenRenderer?: boolean,\n  onLoad?: EventCallback,\n  onLoadError?: EventCallback,\n  onPlay?: EventCallback,\n  onPause?: EventCallback,\n  onStop?: EventCallback,\n  onLoop?: EventCallback,\n  onStateChange?: EventCallback,\n  /**\n   * @deprecated Use `onLoad()` instead\n   */\n  onload?: EventCallback,\n  /**\n   * @deprecated Use `onLoadError()` instead\n   */\n  onloaderror?: EventCallback,\n  /**\n   * @deprecated Use `onPoad()` instead\n   */\n  onplay?: EventCallback,\n  /**\n   * @deprecated Use `onPause()` instead\n   */\n  onpause?: EventCallback,\n  /**\n   * @deprecated Use `onStop()` instead\n   */\n  onstop?: EventCallback,\n  /**\n   * @deprecated Use `onLoop()` instead\n   */\n  onloop?: EventCallback,\n  /**\n   * @deprecated Use `onStateChange()` instead\n   */\n  onstatechange?: EventCallback,\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string,\n  buffer?: ArrayBuffer,\n  autoplay?: boolean,\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  useOffscreenRenderer?: boolean,\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  autoplay?: boolean,\n}\n\nexport class Rive {\n\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // Flag to indicate if the layout has changed; used by the renderer to know\n  // when to align\n  private _updateLayout: boolean = true;\n\n  // The runtime renderer\n  private renderer: rc.Renderer;\n\n  /**\n   * Flag to active/deactivate renderer\n   */\n  private isRendererActive = true;\n\n  // Tracks if a Rive file is loaded\n  private loaded: boolean = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying: boolean = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    'Rive source file or data buffer required';\n\n  // Durations to generate a frame for the last second. Used for performance profiling.\n  public durations: number[] = [];\n  public frameTimes: number[] = [];\n  public frameCount: number = 0;\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onLoad) this.on(EventType.Load, params.onLoad);\n    if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n    if (params.onPlay) this.on(EventType.Play, params.onPlay);\n    if (params.onPause) this.on(EventType.Pause, params.onPause);\n    if (params.onStop) this.on(EventType.Stop, params.onStop);\n    if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n    if (params.onStateChange) this.on(EventType.StateChange, params.onStateChange);\n    \n    /**\n     * @deprecated Use camelCase'd versions instead.\n     */\n    if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n    if (params.onloaderror && !params.onLoadError) this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n    if (params.onpause && !params.onPause) this.on(EventType.Pause, params.onpause);\n    if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange && !params.onStateChange) this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard,\n      useOffscreenRenderer: params.useOffscreenRenderer,\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn('This function is deprecated: please use `new Rive({})` instead');\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({ src, buffer, animations, stateMachines, artboard, autoplay = false, useOffscreenRenderer = false }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance().then((runtime) => {\n      this.runtime = runtime;\n\n      // Get the canvas where you want to render the animation and create a renderer\n      this.renderer = this.runtime.makeRenderer(this.canvas, useOffscreenRenderer);\n\n      // Initial size adjustment based on devicePixelRatio if no width/height are specified explicitly\n      if (!(this.canvas.width || this.canvas.height)) {\n        this.resizeDrawingSurfaceToCanvas();\n      }\n    \n      // Load Rive data from a source uri or a data buffer\n      this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).catch(e => {\n        console.error(e);\n      });\n    }).catch(e => {\n      console.error(e);\n    });\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? 'buffer'\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = 'Problem loading file; may be corrupt!';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n\n    // Fetch the artboard\n    const rootArtboard = artboardName ?\n      this.file.artboardByName(artboardName) :\n      this.file.defaultArtboard();\n    \n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = 'Invalid artboard name or no default artboard';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    // Instance the artboard\n    this.artboard = rootArtboard.instance();\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = 'Artboard has no animations';\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      action: () => {},\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      }\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n   */\n  private renderSecondTimer: number = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    const before = performance.now();\n\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += (time - this.lastRenderTime);\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // Advance non-paused animations by the elapsed number of seconds\n    // Also advance any animations that require scrubbing\n    const activeAnimations = this.animator.animations.filter(a => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first, second) => first.needsScrub ? -1 : 1);\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.instance.apply(1.0);\n    }\n\n    // Advance non-paused state machines by the elapsed number of seconds\n    const activeStateMachines = this.animator.stateMachines.filter(a => a.playing);\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.instance.advance(elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    const {renderer} = this;\n    // Canvas must be wiped to prevent artifacts\n    renderer.clear();\n    renderer.save();\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    this.artboard.draw(renderer);\n\n    renderer.restore();\n    renderer.flush();\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Add duration to create frame to durations array\n    this.frameCount++;\n    const after = performance.now();\n    this.frameTimes.push(after);\n    this.durations.push(after - before);\n    while (this.frameTimes[0] <= after - 1000) {\n      this.frameTimes.shift();\n      this.durations.shift();\n    }\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    const {renderer, runtime, _layout, artboard} = this;\n    // Align things up safe in the knowledge we can restore if changed\n    renderer.align(\n      _layout.runtimeFit(runtime),\n      _layout.runtimeAlignment(runtime),\n      {\n        minX: _layout.minX,\n        minY: _layout.minY,\n        maxX: _layout.maxX,\n        maxY: _layout.maxY\n      },\n      artboard.bounds\n    );\n  }\n\n  public get fps () {\n    return this.durations.length;\n  }\n\n  public get frameTime() {\n    if (this.durations.length === 0) {\n      return 0;\n    }\n    return (this.durations.reduce((a, b) => a + b, 0) / this.durations.length).toFixed(4);\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanup() {\n    this.artboard.delete();\n    // TODO: delete animation and state machine instances\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n        this.taskQueue.add({\n            action: () => this.scrub(animationNames, value),\n        });\n        return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.stop();\n    this.cleanup();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n  }\n\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /** \n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height\n    });\n  }\n\n  /**\n   * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n   * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n   * and resize the layout to match the new drawing surface afterwards. Useful function for consumers\n   * to include in a window resize listener\n   */\n  public resizeDrawingSurfaceToCanvas() {\n    if (this.canvas instanceof HTMLCanvasElement && !!window) {\n      const {width, height} = this.canvas.getBoundingClientRect();\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = dpr * width;\n      this.canvas.height = dpr * height;\n      this.startRendering();\n      this.resizeToCanvas();\n    }\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard.name;\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(m => m.name === name);\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => m.playing)\n      .map(m => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => a.playing)\n      .map(a => a.name);\n  }\n\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => !a.playing)\n      .map(a => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => !m.playing)\n      .map(m => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      if (this.runtime.cancelAnimationFrame) {\n        this.runtime.cancelAnimationFrame(this.frameRequestId);\n      } else {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && !this.frameRequestId) {\n      if (this.runtime.requestAnimationFrame) {\n        this.frameRequestId = this.runtime.requestAnimationFrame(this.draw.bind(this));\n      } else {\n        this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n    const instance = new this.runtime.StateMachineInstance(stateMachine, artboard);\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({name: input.name, type: input.type});\n        }\n        artboardContents.stateMachines.push({name: name, inputs: inputContents});\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n}\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nlet mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === 'string') {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n}\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n}\n\n// #endregion\n"]},"metadata":{},"sourceType":"script"}