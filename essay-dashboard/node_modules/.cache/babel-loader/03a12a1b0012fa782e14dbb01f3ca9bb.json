{"ast":null,"code":"var _jsxFileName = \"/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/home.js\",\n    _s = $RefreshSig$();\n\nimport arrow from \"../arrow.png\";\nimport React, { useState, setState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [input, setInput] = useState(\"\"); // create some const output variable for holding the state of the output text.\n\n  const inputRef = useRef(null);\n\n  function handleChange(event) {\n    setInput(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    alert(input); // for implementing functionality look into the services folder.\n    // you can model a service using the RephraseService class.\n    // create a service file for doing a put request to the backend.\n    // Once created you can call it from here and display the data to output text!\n\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    console.log(input);\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"IObox\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"Type something...\",\n        onChange: handleChange,\n        align: \"left\"\n      }, \"user_name_key\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        className: \"arrow\",\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"output\",\n        placeholder: \"Response...\" // place the state here of the output, and be sure to put the same\n        // handle change in here as well.\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"L4PHAXzkMJpffDX+ToyKGE7+5Ro=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rishinopany/Georgia Tech/projects/essay-dashboard/essay-dashboard/src/routes/home.js"],"names":["arrow","React","useState","setState","useRef","useEffect","Home","input","setInput","inputRef","handleChange","event","target","value","handleSubmit","alert","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,SAA5C,QAA6D,OAA7D;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAD6B,CAE7B;;AACA,QAAMO,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;;AACA,WAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;;AACD,WAASC,YAAT,CAAsBH,KAAtB,EAA6B;AAC3BI,IAAAA,KAAK,CAACR,KAAD,CAAL,CAD2B,CAE9B;AACA;AACA;AACA;;AACGI,IAAAA,KAAK,CAACK,cAAN;AACD;;AACDX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,GAAG,EAAEE,QADP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAC,OAJZ;AAKE,QAAA,WAAW,EAAC,mBALd;AAME,QAAA,QAAQ,EAAEC,YANZ;AAOE,QAAA,KAAK,EAAC;AAPR,SAEM,eAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAQ,MAAA,OAAO,EAAEI,YAAjB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEd,KAAV;AAAiB,QAAA,SAAS,EAAC,OAA3B;AAAmC,QAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,WAAW,EAAC,aAHd,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CuBM,I;;KAAAA,I","sourcesContent":["import arrow from \"../arrow.png\";\nimport React, { useState, setState, useRef, useEffect } from \"react\";\n\nexport default function Home() {\n  const [input, setInput] = useState(\"\");\n  // create some const output variable for holding the state of the output text.\n  const inputRef = useRef(null);\n  function handleChange(event) {\n    setInput(event.target.value);\n  }\n  function handleSubmit(event) {\n    alert(input);\n\t// for implementing functionality look into the services folder.\n\t// you can model a service using the RephraseService class.\n\t// create a service file for doing a put request to the backend.\n\t// Once created you can call it from here and display the data to output text!\n    event.preventDefault();\n  }\n  useEffect(() => {\n    console.log(input);\n  }, [input]);\n  return (\n    <div className=\"IObox\">\n      <form>\n        <textarea\n          ref={inputRef}\n          key=\"user_name_key\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Type something...\"\n          onChange={handleChange}\n          align=\"left\"\n        ></textarea>\n      </form>\n      <button onClick={handleSubmit}>\n        <img src={arrow} className=\"arrow\" alt=\"arrow\"></img>\n      </button>\n      <form>\n        <textarea\n          type=\"text\"\n          className=\"output\"\n          placeholder=\"Response...\"\n          // place the state here of the output, and be sure to put the same\n          // handle change in here as well.\n        ></textarea>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}